openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/:
    get:
      operationId: api_retrieve
      description: |-
        ## Instructions to use API
        The links at the bottom of the page, return table data. For example http://escalate.sd2e.org/api/inventory/ returns data in the following format


        <pre><code>{
        "count": 131,
        "next": "http://escalate.sd2e.org/api/inventory/?limit=100&offset=100",
        "previous": null,
        "results": [
                    {
                        "url": "http://escalate.sd2e.org/api/inventory/86a86f95-7611-4b2a-94c0-ede4259bf756/",
                        "inventory_description": "N,N-Diethylpropane-1,3-diammonium iodide",
                        "part_no": "MS123223-100",
                        "onhand_amt": 185.5,
                        "unit": "g",
                        "create_date": "2019-06-01T00:00:00Z",
                        "expiration_date": null,
                        "inventory_location": null,
                        "status": null,
                        "material_description": "N,N-Diethylpropane-1,3-diammonium iodide",
                        "description": "Zhi Li",
                        "edocument_description": null,
                        "notetext": null,
                        "material_uuid": "http://escalate.sd2e.org/api/material/817fdd3f-50d8-4eff-a0ec-34f2920dd06c/",
                        "actor_uuid": "http://escalate.sd2e.org/api/actor/df59bed1-9da9-41ca-8b69-cf6c1c207fe2/",
                        "edocument_uuid": null,
                        "note_uuid": null
                    }, ...
                   ]
        }</code></pre>


        The returned json includes 100 table data rows and meta-data such as:

        1. `count` - The total number of results matching the request
        2. `next` - The url leading to the next page of results
        3. `previous` - The url leading to the previous page of results
        4. `results` - List of table rows

        ## **Filters**
        Data in the `results` list can be filtered using many different url options
        that can be added to the end of the table's url of the format `http://escalate.sd2e.org/api/person/?<filter_option>`
        Multiple filter options can be chained together in a single url by using `&` symbol. Thus,
        the url becomes `http://escalate.sd2e.org/api/person/?<filter_option1>&<filter_option2>&<filter_option3>`.
        All filters except 'exact match' expect a keyword. Filters applied to columns follow the column
        name it is applied to, by a double underscore (__) e.g. `/?firstname__contains=Gary`

        ### **Exact Matches**
        This filter matches the specified column to a given value
        For example, `http://escalate.sd2e.org/api/person/?firstname=Gary`
        will display person table rows where the `firstname` column
        is equal to value `Gary`

        ### **Select or exclude fields** (`fields`, `exclude`)
        A list of columns can be included or excluded in the json response.
        For example, `http://escalate.sd2e.org/api/person/?fields=firstname,lastname`
        will display only first and last names from the person table

        `http://escalate.sd2e.org/api/person/?exclude=firstname,lastname`
        will display all fields except first and last names

        ### **Related tables**
        Filters can also be applied to columns in related tables
        For example, `http://escalate.sd2e.org/api/person/?organization__short_name=HC`
        will display person table rows where the `short_name` of the `organization` table is `HC`.
        Note that the related table name and column are connected with a double underscore.

        ### **Case insensitive exact match** (`iexact`)
        Ignores case while matching column values
        For example, `http://escalate.sd2e.org/api/person/?firstname__iexact=garY`
        will display person table rows where the `firstname` column
        is equal to value `garY` disregarding case

        ### **Case sensitive containment test** (`contains`)
        Filters rows based on whether specified column contains a particular substring
        For example, `http://escalate.sd2e.org/api/person/?lastname__contains=briga`
        will display person table rows where the `lastname` column
        contains the substring `briga`

        ### **Case insensitive containment test** (`icontains`)
        Similar to `contains` without the case sensitivity

        ### **List membership** (`in`)
        Filters based on muliple values from a list
        For example, `http://escalate.sd2e.org/api/person/?firstname__in=Gary,Mansoor`
        will display person table rows where the `firstname` column
        is equal `Gary` or `Mansoor`

        ### **Value comparison** (`gt`, `gte`, `lt`, `lte`)
        Filters that compare numerical values. Where the keywords correspond to

        1. `gt` - Strictly greater than
        2. `gte` - Greater than or equal to
        3. `lt` - Strictly less than
        4. `lte` - Less than or equal to

        For example, `http://escalate.sd2e.org/api/inventorymaterial/?inventory_onhand_amt__gte=180`
        will display `inventorymaterial` table rows where the value in the `inventory_onhand_amt` column is greater than or equal to 180

        ### **String starts with** (`startwith`, `istartswith`)
        Filters columns based on whether a column starts with a particular string.
        For example, `http://escalate.sd2e.org/api/person/?firstname__startswith=Man`
        will display person table rows where the `firstname` column starts with `Man`

        ### **String ends with** (`endswith`, `iendswith`)
        Filters columns based on whether a column ends with a particular string.
        For example, `http://escalate.sd2e.org/api/person/?firstname__endswith=soor`
        will display person table rows where the `firstname` column starts with `soor`

        ### **Range of values** (`range`)
        Filters columns whose value lies between a given range inclusive.
        For example, `http://escalate.sd2e.org/api/inventorymaterial/?inventory_onhand_amt__range=180,200`
        will display `inventorymaterial` table rows where the value in the `inventory_onhand_amt` column is between 180 and 200

        ### **Negate filter** (`!`)
        Negates the filter being used.
        For example, `http://escalate.sd2e.org/api/person/?firstname__startswith!=Man`
        will display person table rows where the `firstname` column **does not** start with `Man`
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/action/:
    get:
      operationId: api_action_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActionList'
          description: ''
    post:
      operationId: api_action_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Action'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Action'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Action'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Action'
          description: ''
  /api/action/{parent_lookup_action_action_def}/action_def/:
    get:
      operationId: api_action_action_def_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_action_action_def
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActionDefList'
          description: ''
    post:
      operationId: api_action_action_def_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_action_action_def
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActionDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActionDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionDef'
          description: ''
  /api/action/{parent_lookup_action_action_def}/action_def/{uuid}/:
    get:
      operationId: api_action_action_def_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_action_action_def
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this action def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionDef'
          description: ''
    put:
      operationId: api_action_action_def_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_action_action_def
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this action def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActionDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActionDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionDef'
          description: ''
    patch:
      operationId: api_action_action_def_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_action_action_def
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this action def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActionDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActionDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActionDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionDef'
          description: ''
    delete:
      operationId: api_action_action_def_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_action_action_def
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this action def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/action/{parent_lookup_action_actor}/actor/:
    get:
      operationId: api_action_actor_list
      description: Documentation for actor
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_action_actor
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActorList'
          description: ''
    post:
      operationId: api_action_actor_create
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_action_actor
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
  /api/action/{parent_lookup_action_actor}/actor/{uuid}/:
    get:
      operationId: api_action_actor_retrieve
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_action_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    put:
      operationId: api_action_actor_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_action_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    patch:
      operationId: api_action_actor_partial_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_action_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    delete:
      operationId: api_action_actor_destroy
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_action_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/action/{parent_lookup_action_status}/status/:
    get:
      operationId: api_action_status_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_action_status
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStatusList'
          description: ''
    post:
      operationId: api_action_status_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_action_status
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
  /api/action/{parent_lookup_action_status}/status/{uuid}/:
    get:
      operationId: api_action_status_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_action_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    put:
      operationId: api_action_status_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_action_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    patch:
      operationId: api_action_status_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_action_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    delete:
      operationId: api_action_status_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_action_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/action/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_action_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_action_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/action/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_action_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_action_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_action_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_action_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/action/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_action_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_action_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/action/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_action_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_action_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_action_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_action_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/action/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_action_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_action_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/action/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_action_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_action_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_action_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_action_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/action/{action_uuid}/:
    get:
      operationId: api_action_retrieve
      description: ''
      parameters:
      - in: path
        name: action_uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this action.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Action'
          description: ''
    put:
      operationId: api_action_update
      description: ''
      parameters:
      - in: path
        name: action_uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this action.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Action'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Action'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Action'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Action'
          description: ''
    patch:
      operationId: api_action_partial_update
      description: ''
      parameters:
      - in: path
        name: action_uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this action.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAction'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Action'
          description: ''
    delete:
      operationId: api_action_destroy
      description: ''
      parameters:
      - in: path
        name: action_uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this action.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/actiondef/:
    get:
      operationId: api_actiondef_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActionDefList'
          description: ''
    post:
      operationId: api_actiondef_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActionDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActionDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionDef'
          description: ''
  /api/actiondef/{parent_lookup_actiondef_actor}/actor/:
    get:
      operationId: api_actiondef_actor_list
      description: Documentation for actor
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_actiondef_actor
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActorList'
          description: ''
    post:
      operationId: api_actiondef_actor_create
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_actiondef_actor
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
  /api/actiondef/{parent_lookup_actiondef_actor}/actor/{uuid}/:
    get:
      operationId: api_actiondef_actor_retrieve
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_actiondef_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    put:
      operationId: api_actiondef_actor_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_actiondef_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    patch:
      operationId: api_actiondef_actor_partial_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_actiondef_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    delete:
      operationId: api_actiondef_actor_destroy
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_actiondef_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/actiondef/{parent_lookup_actiondef_status}/status/:
    get:
      operationId: api_actiondef_status_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_actiondef_status
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStatusList'
          description: ''
    post:
      operationId: api_actiondef_status_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_actiondef_status
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
  /api/actiondef/{parent_lookup_actiondef_status}/status/{uuid}/:
    get:
      operationId: api_actiondef_status_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_actiondef_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    put:
      operationId: api_actiondef_status_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_actiondef_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    patch:
      operationId: api_actiondef_status_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_actiondef_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    delete:
      operationId: api_actiondef_status_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_actiondef_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/actiondef/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_actiondef_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_actiondef_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/actiondef/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_actiondef_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_actiondef_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_actiondef_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_actiondef_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/actiondef/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_actiondef_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_actiondef_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/actiondef/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_actiondef_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_actiondef_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_actiondef_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_actiondef_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/actiondef/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_actiondef_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_actiondef_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/actiondef/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_actiondef_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_actiondef_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_actiondef_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_actiondef_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/actiondef/{uuid}/:
    get:
      operationId: api_actiondef_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this action def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionDef'
          description: ''
    put:
      operationId: api_actiondef_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this action def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActionDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActionDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionDef'
          description: ''
    patch:
      operationId: api_actiondef_partial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this action def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActionDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActionDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActionDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionDef'
          description: ''
    delete:
      operationId: api_actiondef_destroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this action def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/actionparameter/:
    get:
      operationId: api_actionparameter_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActionParameterList'
          description: ''
    post:
      operationId: api_actionparameter_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionParameter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActionParameter'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActionParameter'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionParameter'
          description: ''
  /api/actionparameter/{parent_lookup_actionparameter_action}/action/:
    get:
      operationId: api_actionparameter_action_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_actionparameter_action
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActionList'
          description: ''
    post:
      operationId: api_actionparameter_action_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_actionparameter_action
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Action'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Action'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Action'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Action'
          description: ''
  /api/actionparameter/{parent_lookup_actionparameter_action}/action/{action_uuid}/:
    get:
      operationId: api_actionparameter_action_retrieve
      description: ''
      parameters:
      - in: path
        name: action_uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this action.
        required: true
      - in: path
        name: parent_lookup_actionparameter_action
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Action'
          description: ''
    put:
      operationId: api_actionparameter_action_update
      description: ''
      parameters:
      - in: path
        name: action_uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this action.
        required: true
      - in: path
        name: parent_lookup_actionparameter_action
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Action'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Action'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Action'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Action'
          description: ''
    patch:
      operationId: api_actionparameter_action_partial_update
      description: ''
      parameters:
      - in: path
        name: action_uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this action.
        required: true
      - in: path
        name: parent_lookup_actionparameter_action
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAction'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Action'
          description: ''
    delete:
      operationId: api_actionparameter_action_destroy
      description: ''
      parameters:
      - in: path
        name: action_uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this action.
        required: true
      - in: path
        name: parent_lookup_actionparameter_action
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/actionparameter/{parent_lookup_actionparameter_actor}/actor/:
    get:
      operationId: api_actionparameter_actor_list
      description: Documentation for actor
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_actionparameter_actor
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActorList'
          description: ''
    post:
      operationId: api_actionparameter_actor_create
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_actionparameter_actor
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
  /api/actionparameter/{parent_lookup_actionparameter_actor}/actor/{uuid}/:
    get:
      operationId: api_actionparameter_actor_retrieve
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_actionparameter_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    put:
      operationId: api_actionparameter_actor_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_actionparameter_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    patch:
      operationId: api_actionparameter_actor_partial_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_actionparameter_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    delete:
      operationId: api_actionparameter_actor_destroy
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_actionparameter_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/actionparameter/{parent_lookup_actionparameter_parameter_def}/parameter_def/:
    get:
      operationId: api_actionparameter_parameter_def_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_actionparameter_parameter_def
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedParameterDefList'
          description: ''
    post:
      operationId: api_actionparameter_parameter_def_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_actionparameter_parameter_def
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParameterDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ParameterDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ParameterDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterDef'
          description: ''
  /api/actionparameter/{parent_lookup_actionparameter_parameter_def}/parameter_def/{uuid}/:
    get:
      operationId: api_actionparameter_parameter_def_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_actionparameter_parameter_def
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this parameter def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterDef'
          description: ''
    put:
      operationId: api_actionparameter_parameter_def_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_actionparameter_parameter_def
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this parameter def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParameterDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ParameterDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ParameterDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterDef'
          description: ''
    patch:
      operationId: api_actionparameter_parameter_def_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_actionparameter_parameter_def
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this parameter def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedParameterDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedParameterDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedParameterDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterDef'
          description: ''
    delete:
      operationId: api_actionparameter_parameter_def_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_actionparameter_parameter_def
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this parameter def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/actionparameter/{parent_lookup_actionparameter_status}/status/:
    get:
      operationId: api_actionparameter_status_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_actionparameter_status
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStatusList'
          description: ''
    post:
      operationId: api_actionparameter_status_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_actionparameter_status
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
  /api/actionparameter/{parent_lookup_actionparameter_status}/status/{uuid}/:
    get:
      operationId: api_actionparameter_status_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_actionparameter_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    put:
      operationId: api_actionparameter_status_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_actionparameter_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    patch:
      operationId: api_actionparameter_status_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_actionparameter_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    delete:
      operationId: api_actionparameter_status_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_actionparameter_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/actionparameter/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_actionparameter_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_actionparameter_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/actionparameter/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_actionparameter_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_actionparameter_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_actionparameter_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_actionparameter_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/actionparameter/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_actionparameter_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_actionparameter_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/actionparameter/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_actionparameter_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_actionparameter_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_actionparameter_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_actionparameter_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/actionparameter/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_actionparameter_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_actionparameter_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/actionparameter/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_actionparameter_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_actionparameter_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_actionparameter_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_actionparameter_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/actionparameter/{uuid}/:
    get:
      operationId: api_actionparameter_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this action parameter.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionParameter'
          description: ''
    put:
      operationId: api_actionparameter_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this action parameter.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionParameter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActionParameter'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActionParameter'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionParameter'
          description: ''
    patch:
      operationId: api_actionparameter_partial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this action parameter.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActionParameter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActionParameter'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActionParameter'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionParameter'
          description: ''
    delete:
      operationId: api_actionparameter_destroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this action parameter.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/actor/:
    get:
      operationId: api_actor_list
      description: Documentation for actor
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActorList'
          description: ''
    post:
      operationId: api_actor_create
      description: Documentation for actor
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
  /api/actor/{parent_lookup_actor_organization}/organization/:
    get:
      operationId: api_actor_organization_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_actor_organization
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganizationList'
          description: ''
    post:
      operationId: api_actor_organization_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_actor_organization
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Organization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
  /api/actor/{parent_lookup_actor_organization}/organization/{uuid}/:
    get:
      operationId: api_actor_organization_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_actor_organization
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this organization.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
    put:
      operationId: api_actor_organization_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_actor_organization
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this organization.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Organization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
    patch:
      operationId: api_actor_organization_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_actor_organization
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this organization.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganization'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
    delete:
      operationId: api_actor_organization_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_actor_organization
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this organization.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/actor/{parent_lookup_actor_person}/person/:
    get:
      operationId: api_actor_person_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_actor_person
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPersonList'
          description: ''
    post:
      operationId: api_actor_person_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_actor_person
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Person'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Person'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
          description: ''
  /api/actor/{parent_lookup_actor_person}/person/{uuid}/:
    get:
      operationId: api_actor_person_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_actor_person
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this person.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
          description: ''
    put:
      operationId: api_actor_person_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_actor_person
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this person.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Person'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Person'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
          description: ''
    patch:
      operationId: api_actor_person_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_actor_person
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this person.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPerson'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPerson'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPerson'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
          description: ''
    delete:
      operationId: api_actor_person_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_actor_person
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this person.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/actor/{parent_lookup_actor_status}/status/:
    get:
      operationId: api_actor_status_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_actor_status
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStatusList'
          description: ''
    post:
      operationId: api_actor_status_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_actor_status
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
  /api/actor/{parent_lookup_actor_status}/status/{uuid}/:
    get:
      operationId: api_actor_status_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_actor_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    put:
      operationId: api_actor_status_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_actor_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    patch:
      operationId: api_actor_status_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_actor_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    delete:
      operationId: api_actor_status_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_actor_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/actor/{parent_lookup_actor_systemtool}/systemtool/:
    get:
      operationId: api_actor_systemtool_list
      description: This is a test doc
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_actor_systemtool
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSystemtoolList'
          description: ''
    post:
      operationId: api_actor_systemtool_create
      description: This is a test doc
      parameters:
      - in: path
        name: parent_lookup_actor_systemtool
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Systemtool'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Systemtool'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Systemtool'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Systemtool'
          description: ''
  /api/actor/{parent_lookup_actor_systemtool}/systemtool/{uuid}/:
    get:
      operationId: api_actor_systemtool_retrieve
      description: This is a test doc
      parameters:
      - in: path
        name: parent_lookup_actor_systemtool
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this systemtool.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Systemtool'
          description: ''
    put:
      operationId: api_actor_systemtool_update
      description: This is a test doc
      parameters:
      - in: path
        name: parent_lookup_actor_systemtool
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this systemtool.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Systemtool'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Systemtool'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Systemtool'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Systemtool'
          description: ''
    patch:
      operationId: api_actor_systemtool_partial_update
      description: This is a test doc
      parameters:
      - in: path
        name: parent_lookup_actor_systemtool
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this systemtool.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSystemtool'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSystemtool'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSystemtool'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Systemtool'
          description: ''
    delete:
      operationId: api_actor_systemtool_destroy
      description: This is a test doc
      parameters:
      - in: path
        name: parent_lookup_actor_systemtool
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this systemtool.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/actor/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_actor_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_actor_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/actor/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_actor_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_actor_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_actor_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_actor_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/actor/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_actor_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_actor_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/actor/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_actor_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_actor_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_actor_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_actor_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/actor/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_actor_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_actor_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/actor/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_actor_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_actor_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_actor_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_actor_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/actor/{uuid}/:
    get:
      operationId: api_actor_retrieve
      description: Documentation for actor
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    put:
      operationId: api_actor_update
      description: Documentation for actor
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    patch:
      operationId: api_actor_partial_update
      description: Documentation for actor
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    delete:
      operationId: api_actor_destroy
      description: Documentation for actor
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/billofmaterials/:
    get:
      operationId: api_billofmaterials_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBillOfMaterialsList'
          description: ''
    post:
      operationId: api_billofmaterials_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillOfMaterials'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BillOfMaterials'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BillOfMaterials'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillOfMaterials'
          description: ''
  /api/billofmaterials/{parent_lookup_billofmaterials_actor}/actor/:
    get:
      operationId: api_billofmaterials_actor_list
      description: Documentation for actor
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_billofmaterials_actor
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActorList'
          description: ''
    post:
      operationId: api_billofmaterials_actor_create
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_billofmaterials_actor
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
  /api/billofmaterials/{parent_lookup_billofmaterials_actor}/actor/{uuid}/:
    get:
      operationId: api_billofmaterials_actor_retrieve
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_billofmaterials_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    put:
      operationId: api_billofmaterials_actor_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_billofmaterials_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    patch:
      operationId: api_billofmaterials_actor_partial_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_billofmaterials_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    delete:
      operationId: api_billofmaterials_actor_destroy
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_billofmaterials_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/billofmaterials/{parent_lookup_billofmaterials_experiment}/experiment/:
    get:
      operationId: api_billofmaterials_experiment_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_billofmaterials_experiment
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExperimentList'
          description: ''
    post:
      operationId: api_billofmaterials_experiment_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_billofmaterials_experiment
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Experiment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Experiment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Experiment'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
          description: ''
  /api/billofmaterials/{parent_lookup_billofmaterials_experiment}/experiment/{uuid}/:
    get:
      operationId: api_billofmaterials_experiment_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_billofmaterials_experiment
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this experiment.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
          description: ''
    put:
      operationId: api_billofmaterials_experiment_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_billofmaterials_experiment
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this experiment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Experiment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Experiment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Experiment'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
          description: ''
    patch:
      operationId: api_billofmaterials_experiment_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_billofmaterials_experiment
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this experiment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExperiment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExperiment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExperiment'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
          description: ''
    delete:
      operationId: api_billofmaterials_experiment_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_billofmaterials_experiment
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this experiment.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/billofmaterials/{parent_lookup_billofmaterials_status}/status/:
    get:
      operationId: api_billofmaterials_status_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_billofmaterials_status
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStatusList'
          description: ''
    post:
      operationId: api_billofmaterials_status_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_billofmaterials_status
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
  /api/billofmaterials/{parent_lookup_billofmaterials_status}/status/{uuid}/:
    get:
      operationId: api_billofmaterials_status_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_billofmaterials_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    put:
      operationId: api_billofmaterials_status_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_billofmaterials_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    patch:
      operationId: api_billofmaterials_status_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_billofmaterials_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    delete:
      operationId: api_billofmaterials_status_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_billofmaterials_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/billofmaterials/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_billofmaterials_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_billofmaterials_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/billofmaterials/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_billofmaterials_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_billofmaterials_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_billofmaterials_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_billofmaterials_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/billofmaterials/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_billofmaterials_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_billofmaterials_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/billofmaterials/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_billofmaterials_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_billofmaterials_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_billofmaterials_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_billofmaterials_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/billofmaterials/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_billofmaterials_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_billofmaterials_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/billofmaterials/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_billofmaterials_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_billofmaterials_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_billofmaterials_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_billofmaterials_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/billofmaterials/{uuid}/:
    get:
      operationId: api_billofmaterials_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this bill of materials.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillOfMaterials'
          description: ''
    put:
      operationId: api_billofmaterials_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this bill of materials.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillOfMaterials'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BillOfMaterials'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BillOfMaterials'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillOfMaterials'
          description: ''
    patch:
      operationId: api_billofmaterials_partial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this bill of materials.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBillOfMaterials'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBillOfMaterials'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBillOfMaterials'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillOfMaterials'
          description: ''
    delete:
      operationId: api_billofmaterials_destroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this bill of materials.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/bommaterial/:
    get:
      operationId: api_bommaterial_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBomMaterialList'
          description: ''
    post:
      operationId: api_bommaterial_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BomMaterial'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BomMaterial'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BomMaterial'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BomMaterial'
          description: ''
  /api/bommaterial/{parent_lookup_bommaterial_bom}/bom/:
    get:
      operationId: api_bommaterial_bom_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_bommaterial_bom
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBillOfMaterialsList'
          description: ''
    post:
      operationId: api_bommaterial_bom_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_bommaterial_bom
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillOfMaterials'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BillOfMaterials'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BillOfMaterials'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillOfMaterials'
          description: ''
  /api/bommaterial/{parent_lookup_bommaterial_bom}/bom/{uuid}/:
    get:
      operationId: api_bommaterial_bom_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_bommaterial_bom
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this bill of materials.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillOfMaterials'
          description: ''
    put:
      operationId: api_bommaterial_bom_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_bommaterial_bom
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this bill of materials.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillOfMaterials'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BillOfMaterials'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BillOfMaterials'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillOfMaterials'
          description: ''
    patch:
      operationId: api_bommaterial_bom_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_bommaterial_bom
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this bill of materials.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBillOfMaterials'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBillOfMaterials'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBillOfMaterials'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillOfMaterials'
          description: ''
    delete:
      operationId: api_bommaterial_bom_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_bommaterial_bom
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this bill of materials.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/bommaterial/{parent_lookup_bommaterial_inventory}/inventory/:
    get:
      operationId: api_bommaterial_inventory_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_bommaterial_inventory
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInventoryList'
          description: ''
    post:
      operationId: api_bommaterial_inventory_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_bommaterial_inventory
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Inventory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Inventory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Inventory'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
          description: ''
  /api/bommaterial/{parent_lookup_bommaterial_inventory}/inventory/{uuid}/:
    get:
      operationId: api_bommaterial_inventory_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_bommaterial_inventory
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this inventory.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
          description: ''
    put:
      operationId: api_bommaterial_inventory_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_bommaterial_inventory
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this inventory.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Inventory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Inventory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Inventory'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
          description: ''
    patch:
      operationId: api_bommaterial_inventory_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_bommaterial_inventory
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this inventory.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInventory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInventory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInventory'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
          description: ''
    delete:
      operationId: api_bommaterial_inventory_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_bommaterial_inventory
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this inventory.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/bommaterial/{parent_lookup_bommaterial_material_composite}/material_composite/:
    get:
      operationId: api_bommaterial_material_composite_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_bommaterial_material_composite
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMaterialCompositeList'
          description: ''
    post:
      operationId: api_bommaterial_material_composite_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_bommaterial_material_composite
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialComposite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MaterialComposite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MaterialComposite'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialComposite'
          description: ''
  /api/bommaterial/{parent_lookup_bommaterial_material_composite}/material_composite/{uuid}/:
    get:
      operationId: api_bommaterial_material_composite_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_bommaterial_material_composite
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material composite.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialComposite'
          description: ''
    put:
      operationId: api_bommaterial_material_composite_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_bommaterial_material_composite
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material composite.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialComposite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MaterialComposite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MaterialComposite'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialComposite'
          description: ''
    patch:
      operationId: api_bommaterial_material_composite_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_bommaterial_material_composite
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material composite.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMaterialComposite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMaterialComposite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMaterialComposite'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialComposite'
          description: ''
    delete:
      operationId: api_bommaterial_material_composite_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_bommaterial_material_composite
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material composite.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/bommaterial/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_bommaterial_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_bommaterial_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/bommaterial/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_bommaterial_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_bommaterial_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_bommaterial_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_bommaterial_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/bommaterial/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_bommaterial_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_bommaterial_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/bommaterial/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_bommaterial_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_bommaterial_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_bommaterial_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_bommaterial_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/bommaterial/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_bommaterial_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_bommaterial_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/bommaterial/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_bommaterial_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_bommaterial_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_bommaterial_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_bommaterial_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/bommaterial/{uuid}/:
    get:
      operationId: api_bommaterial_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this bom material.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BomMaterial'
          description: ''
    put:
      operationId: api_bommaterial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this bom material.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BomMaterial'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BomMaterial'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BomMaterial'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BomMaterial'
          description: ''
    patch:
      operationId: api_bommaterial_partial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this bom material.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBomMaterial'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBomMaterial'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBomMaterial'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BomMaterial'
          description: ''
    delete:
      operationId: api_bommaterial_destroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this bom material.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/calculation/:
    get:
      operationId: api_calculation_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCalculationList'
          description: ''
    post:
      operationId: api_calculation_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Calculation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Calculation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Calculation'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calculation'
          description: ''
  /api/calculation/{parent_lookup_calculation_actor}/actor/:
    get:
      operationId: api_calculation_actor_list
      description: Documentation for actor
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_calculation_actor
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActorList'
          description: ''
    post:
      operationId: api_calculation_actor_create
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_calculation_actor
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
  /api/calculation/{parent_lookup_calculation_actor}/actor/{uuid}/:
    get:
      operationId: api_calculation_actor_retrieve
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_calculation_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    put:
      operationId: api_calculation_actor_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_calculation_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    patch:
      operationId: api_calculation_actor_partial_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_calculation_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    delete:
      operationId: api_calculation_actor_destroy
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_calculation_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/calculation/{parent_lookup_calculation_calculation_def}/calculation_def/:
    get:
      operationId: api_calculation_calculation_def_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_calculation_calculation_def
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCalculationDefList'
          description: ''
    post:
      operationId: api_calculation_calculation_def_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculation_calculation_def
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalculationDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CalculationDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CalculationDef'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculationDef'
          description: ''
  /api/calculation/{parent_lookup_calculation_calculation_def}/calculation_def/{uuid}/:
    get:
      operationId: api_calculation_calculation_def_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculation_calculation_def
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this calculation def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculationDef'
          description: ''
    put:
      operationId: api_calculation_calculation_def_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculation_calculation_def
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this calculation def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalculationDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CalculationDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CalculationDef'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculationDef'
          description: ''
    patch:
      operationId: api_calculation_calculation_def_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculation_calculation_def
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this calculation def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCalculationDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCalculationDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCalculationDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculationDef'
          description: ''
    delete:
      operationId: api_calculation_calculation_def_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculation_calculation_def
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this calculation def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/calculation/{parent_lookup_calculation_in_opt_val_edocument}/in_opt_val_edocument/:
    get:
      operationId: api_calculation_in_opt_val_edocument_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_calculation_in_opt_val_edocument
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_calculation_in_opt_val_edocument_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculation_in_opt_val_edocument
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/calculation/{parent_lookup_calculation_in_opt_val_edocument}/in_opt_val_edocument/{uuid}/:
    get:
      operationId: api_calculation_in_opt_val_edocument_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculation_in_opt_val_edocument
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_calculation_in_opt_val_edocument_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculation_in_opt_val_edocument
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_calculation_in_opt_val_edocument_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculation_in_opt_val_edocument
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_calculation_in_opt_val_edocument_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculation_in_opt_val_edocument
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/calculation/{parent_lookup_calculation_in_opt_val_type}/in_opt_val_type/:
    get:
      operationId: api_calculation_in_opt_val_type_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_calculation_in_opt_val_type
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTypeDefList'
          description: ''
    post:
      operationId: api_calculation_in_opt_val_type_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculation_in_opt_val_type
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypeDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TypeDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TypeDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
  /api/calculation/{parent_lookup_calculation_in_opt_val_type}/in_opt_val_type/{uuid}/:
    get:
      operationId: api_calculation_in_opt_val_type_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculation_in_opt_val_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
    put:
      operationId: api_calculation_in_opt_val_type_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculation_in_opt_val_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypeDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TypeDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TypeDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
    patch:
      operationId: api_calculation_in_opt_val_type_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculation_in_opt_val_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTypeDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTypeDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTypeDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
    delete:
      operationId: api_calculation_in_opt_val_type_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculation_in_opt_val_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/calculation/{parent_lookup_calculation_in_val_edocument}/in_val_edocument/:
    get:
      operationId: api_calculation_in_val_edocument_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_calculation_in_val_edocument
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_calculation_in_val_edocument_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculation_in_val_edocument
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/calculation/{parent_lookup_calculation_in_val_edocument}/in_val_edocument/{uuid}/:
    get:
      operationId: api_calculation_in_val_edocument_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculation_in_val_edocument
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_calculation_in_val_edocument_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculation_in_val_edocument
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_calculation_in_val_edocument_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculation_in_val_edocument
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_calculation_in_val_edocument_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculation_in_val_edocument
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/calculation/{parent_lookup_calculation_in_val_type}/in_val_type/:
    get:
      operationId: api_calculation_in_val_type_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_calculation_in_val_type
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTypeDefList'
          description: ''
    post:
      operationId: api_calculation_in_val_type_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculation_in_val_type
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypeDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TypeDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TypeDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
  /api/calculation/{parent_lookup_calculation_in_val_type}/in_val_type/{uuid}/:
    get:
      operationId: api_calculation_in_val_type_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculation_in_val_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
    put:
      operationId: api_calculation_in_val_type_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculation_in_val_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypeDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TypeDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TypeDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
    patch:
      operationId: api_calculation_in_val_type_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculation_in_val_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTypeDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTypeDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTypeDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
    delete:
      operationId: api_calculation_in_val_type_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculation_in_val_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/calculation/{parent_lookup_calculation_out_val_edocument}/out_val_edocument/:
    get:
      operationId: api_calculation_out_val_edocument_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_calculation_out_val_edocument
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_calculation_out_val_edocument_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculation_out_val_edocument
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/calculation/{parent_lookup_calculation_out_val_edocument}/out_val_edocument/{uuid}/:
    get:
      operationId: api_calculation_out_val_edocument_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculation_out_val_edocument
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_calculation_out_val_edocument_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculation_out_val_edocument
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_calculation_out_val_edocument_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculation_out_val_edocument
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_calculation_out_val_edocument_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculation_out_val_edocument
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/calculation/{parent_lookup_calculation_out_val_type}/out_val_type/:
    get:
      operationId: api_calculation_out_val_type_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_calculation_out_val_type
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTypeDefList'
          description: ''
    post:
      operationId: api_calculation_out_val_type_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculation_out_val_type
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypeDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TypeDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TypeDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
  /api/calculation/{parent_lookup_calculation_out_val_type}/out_val_type/{uuid}/:
    get:
      operationId: api_calculation_out_val_type_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculation_out_val_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
    put:
      operationId: api_calculation_out_val_type_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculation_out_val_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypeDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TypeDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TypeDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
    patch:
      operationId: api_calculation_out_val_type_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculation_out_val_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTypeDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTypeDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTypeDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
    delete:
      operationId: api_calculation_out_val_type_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculation_out_val_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/calculation/{parent_lookup_calculation_status}/status/:
    get:
      operationId: api_calculation_status_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_calculation_status
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStatusList'
          description: ''
    post:
      operationId: api_calculation_status_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculation_status
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
  /api/calculation/{parent_lookup_calculation_status}/status/{uuid}/:
    get:
      operationId: api_calculation_status_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculation_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    put:
      operationId: api_calculation_status_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculation_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    patch:
      operationId: api_calculation_status_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculation_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    delete:
      operationId: api_calculation_status_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculation_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/calculation/{parent_lookup_calculation_systemtool}/systemtool/:
    get:
      operationId: api_calculation_systemtool_list
      description: This is a test doc
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_calculation_systemtool
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSystemtoolList'
          description: ''
    post:
      operationId: api_calculation_systemtool_create
      description: This is a test doc
      parameters:
      - in: path
        name: parent_lookup_calculation_systemtool
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Systemtool'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Systemtool'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Systemtool'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Systemtool'
          description: ''
  /api/calculation/{parent_lookup_calculation_systemtool}/systemtool/{uuid}/:
    get:
      operationId: api_calculation_systemtool_retrieve
      description: This is a test doc
      parameters:
      - in: path
        name: parent_lookup_calculation_systemtool
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this systemtool.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Systemtool'
          description: ''
    put:
      operationId: api_calculation_systemtool_update
      description: This is a test doc
      parameters:
      - in: path
        name: parent_lookup_calculation_systemtool
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this systemtool.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Systemtool'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Systemtool'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Systemtool'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Systemtool'
          description: ''
    patch:
      operationId: api_calculation_systemtool_partial_update
      description: This is a test doc
      parameters:
      - in: path
        name: parent_lookup_calculation_systemtool
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this systemtool.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSystemtool'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSystemtool'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSystemtool'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Systemtool'
          description: ''
    delete:
      operationId: api_calculation_systemtool_destroy
      description: This is a test doc
      parameters:
      - in: path
        name: parent_lookup_calculation_systemtool
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this systemtool.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/calculation/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_calculation_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_calculation_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/calculation/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_calculation_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_calculation_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_calculation_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_calculation_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/calculation/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_calculation_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_calculation_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/calculation/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_calculation_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_calculation_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_calculation_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_calculation_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/calculation/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_calculation_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_calculation_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/calculation/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_calculation_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_calculation_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_calculation_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_calculation_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/calculation/{uuid}/:
    get:
      operationId: api_calculation_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this calculation.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calculation'
          description: ''
    put:
      operationId: api_calculation_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this calculation.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Calculation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Calculation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Calculation'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calculation'
          description: ''
    patch:
      operationId: api_calculation_partial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this calculation.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCalculation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCalculation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCalculation'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calculation'
          description: ''
    delete:
      operationId: api_calculation_destroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this calculation.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/calculationdef/:
    get:
      operationId: api_calculationdef_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCalculationDefList'
          description: ''
    post:
      operationId: api_calculationdef_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalculationDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CalculationDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CalculationDef'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculationDef'
          description: ''
  /api/calculationdef/{parent_lookup_calculationdef_actor}/actor/:
    get:
      operationId: api_calculationdef_actor_list
      description: Documentation for actor
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_calculationdef_actor
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActorList'
          description: ''
    post:
      operationId: api_calculationdef_actor_create
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_calculationdef_actor
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
  /api/calculationdef/{parent_lookup_calculationdef_actor}/actor/{uuid}/:
    get:
      operationId: api_calculationdef_actor_retrieve
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_calculationdef_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    put:
      operationId: api_calculationdef_actor_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_calculationdef_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    patch:
      operationId: api_calculationdef_actor_partial_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_calculationdef_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    delete:
      operationId: api_calculationdef_actor_destroy
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_calculationdef_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/calculationdef/{parent_lookup_calculationdef_in_type}/in_type/:
    get:
      operationId: api_calculationdef_in_type_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_calculationdef_in_type
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTypeDefList'
          description: ''
    post:
      operationId: api_calculationdef_in_type_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculationdef_in_type
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypeDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TypeDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TypeDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
  /api/calculationdef/{parent_lookup_calculationdef_in_type}/in_type/{uuid}/:
    get:
      operationId: api_calculationdef_in_type_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculationdef_in_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
    put:
      operationId: api_calculationdef_in_type_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculationdef_in_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypeDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TypeDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TypeDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
    patch:
      operationId: api_calculationdef_in_type_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculationdef_in_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTypeDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTypeDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTypeDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
    delete:
      operationId: api_calculationdef_in_type_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculationdef_in_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/calculationdef/{parent_lookup_calculationdef_out_type}/out_type/:
    get:
      operationId: api_calculationdef_out_type_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_calculationdef_out_type
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTypeDefList'
          description: ''
    post:
      operationId: api_calculationdef_out_type_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculationdef_out_type
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypeDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TypeDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TypeDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
  /api/calculationdef/{parent_lookup_calculationdef_out_type}/out_type/{uuid}/:
    get:
      operationId: api_calculationdef_out_type_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculationdef_out_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
    put:
      operationId: api_calculationdef_out_type_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculationdef_out_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypeDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TypeDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TypeDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
    patch:
      operationId: api_calculationdef_out_type_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculationdef_out_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTypeDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTypeDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTypeDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
    delete:
      operationId: api_calculationdef_out_type_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_calculationdef_out_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/calculationdef/{parent_lookup_calculationdef_systemtool}/systemtool/:
    get:
      operationId: api_calculationdef_systemtool_list
      description: This is a test doc
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_calculationdef_systemtool
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSystemtoolList'
          description: ''
    post:
      operationId: api_calculationdef_systemtool_create
      description: This is a test doc
      parameters:
      - in: path
        name: parent_lookup_calculationdef_systemtool
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Systemtool'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Systemtool'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Systemtool'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Systemtool'
          description: ''
  /api/calculationdef/{parent_lookup_calculationdef_systemtool}/systemtool/{uuid}/:
    get:
      operationId: api_calculationdef_systemtool_retrieve
      description: This is a test doc
      parameters:
      - in: path
        name: parent_lookup_calculationdef_systemtool
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this systemtool.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Systemtool'
          description: ''
    put:
      operationId: api_calculationdef_systemtool_update
      description: This is a test doc
      parameters:
      - in: path
        name: parent_lookup_calculationdef_systemtool
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this systemtool.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Systemtool'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Systemtool'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Systemtool'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Systemtool'
          description: ''
    patch:
      operationId: api_calculationdef_systemtool_partial_update
      description: This is a test doc
      parameters:
      - in: path
        name: parent_lookup_calculationdef_systemtool
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this systemtool.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSystemtool'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSystemtool'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSystemtool'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Systemtool'
          description: ''
    delete:
      operationId: api_calculationdef_systemtool_destroy
      description: This is a test doc
      parameters:
      - in: path
        name: parent_lookup_calculationdef_systemtool
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this systemtool.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/calculationdef/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_calculationdef_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_calculationdef_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/calculationdef/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_calculationdef_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_calculationdef_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_calculationdef_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_calculationdef_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/calculationdef/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_calculationdef_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_calculationdef_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/calculationdef/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_calculationdef_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_calculationdef_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_calculationdef_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_calculationdef_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/calculationdef/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_calculationdef_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_calculationdef_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/calculationdef/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_calculationdef_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_calculationdef_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_calculationdef_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_calculationdef_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/calculationdef/{uuid}/:
    get:
      operationId: api_calculationdef_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this calculation def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculationDef'
          description: ''
    put:
      operationId: api_calculationdef_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this calculation def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalculationDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CalculationDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CalculationDef'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculationDef'
          description: ''
    patch:
      operationId: api_calculationdef_partial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this calculation def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCalculationDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCalculationDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCalculationDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculationDef'
          description: ''
    delete:
      operationId: api_calculationdef_destroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this calculation def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/condition/:
    get:
      operationId: api_condition_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedConditionList'
          description: ''
    post:
      operationId: api_condition_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Condition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Condition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Condition'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Condition'
          description: ''
  /api/condition/{parent_lookup_condition_actor}/actor/:
    get:
      operationId: api_condition_actor_list
      description: Documentation for actor
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_condition_actor
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActorList'
          description: ''
    post:
      operationId: api_condition_actor_create
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_condition_actor
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
  /api/condition/{parent_lookup_condition_actor}/actor/{uuid}/:
    get:
      operationId: api_condition_actor_retrieve
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_condition_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    put:
      operationId: api_condition_actor_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_condition_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    patch:
      operationId: api_condition_actor_partial_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_condition_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    delete:
      operationId: api_condition_actor_destroy
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_condition_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/condition/{parent_lookup_condition_condition_def}/condition_def/:
    get:
      operationId: api_condition_condition_def_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_condition_condition_def
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedConditionDefList'
          description: ''
    post:
      operationId: api_condition_condition_def_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_condition_condition_def
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConditionDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConditionDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConditionDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionDef'
          description: ''
  /api/condition/{parent_lookup_condition_condition_def}/condition_def/{uuid}/:
    get:
      operationId: api_condition_condition_def_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_condition_condition_def
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this condition def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionDef'
          description: ''
    put:
      operationId: api_condition_condition_def_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_condition_condition_def
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this condition def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConditionDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConditionDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConditionDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionDef'
          description: ''
    patch:
      operationId: api_condition_condition_def_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_condition_condition_def
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this condition def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedConditionDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedConditionDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedConditionDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionDef'
          description: ''
    delete:
      operationId: api_condition_condition_def_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_condition_condition_def
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this condition def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/condition/{parent_lookup_condition_status}/status/:
    get:
      operationId: api_condition_status_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_condition_status
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStatusList'
          description: ''
    post:
      operationId: api_condition_status_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_condition_status
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
  /api/condition/{parent_lookup_condition_status}/status/{uuid}/:
    get:
      operationId: api_condition_status_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_condition_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    put:
      operationId: api_condition_status_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_condition_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    patch:
      operationId: api_condition_status_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_condition_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    delete:
      operationId: api_condition_status_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_condition_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/condition/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_condition_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_condition_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/condition/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_condition_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_condition_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_condition_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_condition_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/condition/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_condition_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_condition_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/condition/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_condition_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_condition_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_condition_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_condition_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/condition/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_condition_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_condition_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/condition/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_condition_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_condition_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_condition_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_condition_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/condition/{uuid}/:
    get:
      operationId: api_condition_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this condition.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Condition'
          description: ''
    put:
      operationId: api_condition_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this condition.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Condition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Condition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Condition'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Condition'
          description: ''
    patch:
      operationId: api_condition_partial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this condition.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCondition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCondition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCondition'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Condition'
          description: ''
    delete:
      operationId: api_condition_destroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this condition.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/conditiondef/:
    get:
      operationId: api_conditiondef_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedConditionDefList'
          description: ''
    post:
      operationId: api_conditiondef_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConditionDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConditionDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConditionDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionDef'
          description: ''
  /api/conditiondef/{parent_lookup_conditiondef_actor}/actor/:
    get:
      operationId: api_conditiondef_actor_list
      description: Documentation for actor
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_conditiondef_actor
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActorList'
          description: ''
    post:
      operationId: api_conditiondef_actor_create
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_conditiondef_actor
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
  /api/conditiondef/{parent_lookup_conditiondef_actor}/actor/{uuid}/:
    get:
      operationId: api_conditiondef_actor_retrieve
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_conditiondef_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    put:
      operationId: api_conditiondef_actor_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_conditiondef_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    patch:
      operationId: api_conditiondef_actor_partial_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_conditiondef_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    delete:
      operationId: api_conditiondef_actor_destroy
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_conditiondef_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/conditiondef/{parent_lookup_conditiondef_status}/status/:
    get:
      operationId: api_conditiondef_status_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_conditiondef_status
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStatusList'
          description: ''
    post:
      operationId: api_conditiondef_status_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_conditiondef_status
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
  /api/conditiondef/{parent_lookup_conditiondef_status}/status/{uuid}/:
    get:
      operationId: api_conditiondef_status_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_conditiondef_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    put:
      operationId: api_conditiondef_status_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_conditiondef_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    patch:
      operationId: api_conditiondef_status_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_conditiondef_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    delete:
      operationId: api_conditiondef_status_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_conditiondef_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/conditiondef/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_conditiondef_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_conditiondef_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/conditiondef/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_conditiondef_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_conditiondef_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_conditiondef_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_conditiondef_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/conditiondef/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_conditiondef_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_conditiondef_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/conditiondef/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_conditiondef_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_conditiondef_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_conditiondef_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_conditiondef_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/conditiondef/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_conditiondef_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_conditiondef_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/conditiondef/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_conditiondef_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_conditiondef_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_conditiondef_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_conditiondef_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/conditiondef/{uuid}/:
    get:
      operationId: api_conditiondef_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this condition def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionDef'
          description: ''
    put:
      operationId: api_conditiondef_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this condition def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConditionDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConditionDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConditionDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionDef'
          description: ''
    patch:
      operationId: api_conditiondef_partial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this condition def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedConditionDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedConditionDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedConditionDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionDef'
          description: ''
    delete:
      operationId: api_conditiondef_destroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this condition def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/edocument/:
    get:
      operationId: api_edocument_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_edocument_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/edocument/{parent_lookup_edocument_actor}/actor/:
    get:
      operationId: api_edocument_actor_list
      description: Documentation for actor
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_edocument_actor
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActorList'
          description: ''
    post:
      operationId: api_edocument_actor_create
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_edocument_actor
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
  /api/edocument/{parent_lookup_edocument_actor}/actor/{uuid}/:
    get:
      operationId: api_edocument_actor_retrieve
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_edocument_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    put:
      operationId: api_edocument_actor_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_edocument_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    patch:
      operationId: api_edocument_actor_partial_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_edocument_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    delete:
      operationId: api_edocument_actor_destroy
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_edocument_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/edocument/{parent_lookup_edocument_doc_type_uuid}/doc_type_uuid/:
    get:
      operationId: api_edocument_doc_type_uuid_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_edocument_doc_type_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTypeDefList'
          description: ''
    post:
      operationId: api_edocument_doc_type_uuid_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_edocument_doc_type_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypeDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TypeDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TypeDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
  /api/edocument/{parent_lookup_edocument_doc_type_uuid}/doc_type_uuid/{uuid}/:
    get:
      operationId: api_edocument_doc_type_uuid_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_edocument_doc_type_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
    put:
      operationId: api_edocument_doc_type_uuid_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_edocument_doc_type_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypeDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TypeDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TypeDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
    patch:
      operationId: api_edocument_doc_type_uuid_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_edocument_doc_type_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTypeDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTypeDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTypeDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
    delete:
      operationId: api_edocument_doc_type_uuid_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_edocument_doc_type_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/edocument/{parent_lookup_edocument_status}/status/:
    get:
      operationId: api_edocument_status_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_edocument_status
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStatusList'
          description: ''
    post:
      operationId: api_edocument_status_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_edocument_status
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
  /api/edocument/{parent_lookup_edocument_status}/status/{uuid}/:
    get:
      operationId: api_edocument_status_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_edocument_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    put:
      operationId: api_edocument_status_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_edocument_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    patch:
      operationId: api_edocument_status_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_edocument_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    delete:
      operationId: api_edocument_status_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_edocument_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/edocument/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_edocument_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_edocument_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/edocument/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_edocument_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_edocument_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_edocument_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_edocument_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/edocument/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_edocument_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_edocument_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/edocument/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_edocument_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_edocument_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_edocument_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_edocument_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/edocument/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_edocument_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_edocument_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/edocument/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_edocument_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_edocument_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_edocument_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_edocument_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/edocument/{uuid}/:
    get:
      operationId: api_edocument_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_edocument_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_edocument_partial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_edocument_destroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/experiment/:
    get:
      operationId: api_experiment_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExperimentList'
          description: ''
    post:
      operationId: api_experiment_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Experiment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Experiment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Experiment'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
          description: ''
  /api/experiment/{parent_lookup_experiment_lab}/lab/:
    get:
      operationId: api_experiment_lab_list
      description: Documentation for actor
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_experiment_lab
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActorList'
          description: ''
    post:
      operationId: api_experiment_lab_create
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_experiment_lab
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
  /api/experiment/{parent_lookup_experiment_lab}/lab/{uuid}/:
    get:
      operationId: api_experiment_lab_retrieve
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_experiment_lab
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    put:
      operationId: api_experiment_lab_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_experiment_lab
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    patch:
      operationId: api_experiment_lab_partial_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_experiment_lab
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    delete:
      operationId: api_experiment_lab_destroy
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_experiment_lab
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/experiment/{parent_lookup_experiment_operator_uuid}/operator_uuid/:
    get:
      operationId: api_experiment_operator_uuid_list
      description: Documentation for actor
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_experiment_operator_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActorList'
          description: ''
    post:
      operationId: api_experiment_operator_uuid_create
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_experiment_operator_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
  /api/experiment/{parent_lookup_experiment_operator_uuid}/operator_uuid/{uuid}/:
    get:
      operationId: api_experiment_operator_uuid_retrieve
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_experiment_operator_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    put:
      operationId: api_experiment_operator_uuid_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_experiment_operator_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    patch:
      operationId: api_experiment_operator_uuid_partial_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_experiment_operator_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    delete:
      operationId: api_experiment_operator_uuid_destroy
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_experiment_operator_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/experiment/{parent_lookup_experiment_owner}/owner/:
    get:
      operationId: api_experiment_owner_list
      description: Documentation for actor
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_experiment_owner
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActorList'
          description: ''
    post:
      operationId: api_experiment_owner_create
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_experiment_owner
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
  /api/experiment/{parent_lookup_experiment_owner}/owner/{uuid}/:
    get:
      operationId: api_experiment_owner_retrieve
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_experiment_owner
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    put:
      operationId: api_experiment_owner_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_experiment_owner
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    patch:
      operationId: api_experiment_owner_partial_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_experiment_owner
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    delete:
      operationId: api_experiment_owner_destroy
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_experiment_owner
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/experiment/{parent_lookup_experiment_parent}/parent/:
    get:
      operationId: api_experiment_parent_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_experiment_parent
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTypeDefList'
          description: ''
    post:
      operationId: api_experiment_parent_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_experiment_parent
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypeDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TypeDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TypeDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
  /api/experiment/{parent_lookup_experiment_parent}/parent/{uuid}/:
    get:
      operationId: api_experiment_parent_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_experiment_parent
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
    put:
      operationId: api_experiment_parent_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_experiment_parent
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypeDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TypeDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TypeDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
    patch:
      operationId: api_experiment_parent_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_experiment_parent
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTypeDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTypeDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTypeDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
    delete:
      operationId: api_experiment_parent_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_experiment_parent
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/experiment/{parent_lookup_experiment_status}/status/:
    get:
      operationId: api_experiment_status_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_experiment_status
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStatusList'
          description: ''
    post:
      operationId: api_experiment_status_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_experiment_status
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
  /api/experiment/{parent_lookup_experiment_status}/status/{uuid}/:
    get:
      operationId: api_experiment_status_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_experiment_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    put:
      operationId: api_experiment_status_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_experiment_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    patch:
      operationId: api_experiment_status_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_experiment_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    delete:
      operationId: api_experiment_status_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_experiment_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/experiment/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_experiment_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_experiment_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/experiment/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_experiment_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_experiment_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_experiment_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_experiment_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/experiment/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_experiment_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_experiment_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/experiment/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_experiment_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_experiment_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_experiment_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_experiment_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/experiment/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_experiment_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_experiment_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/experiment/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_experiment_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_experiment_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_experiment_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_experiment_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/experiment/{uuid}/:
    get:
      operationId: api_experiment_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this experiment.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
          description: ''
    put:
      operationId: api_experiment_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this experiment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Experiment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Experiment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Experiment'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
          description: ''
    patch:
      operationId: api_experiment_partial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this experiment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExperiment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExperiment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExperiment'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
          description: ''
    delete:
      operationId: api_experiment_destroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this experiment.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/experimentmeasurecalculation/:
    get:
      operationId: api_experimentmeasurecalculation_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExperimentMeasureCalculationList'
          description: ''
    post:
      operationId: api_experimentmeasurecalculation_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExperimentMeasureCalculation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExperimentMeasureCalculation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExperimentMeasureCalculation'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperimentMeasureCalculation'
          description: ''
  /api/experimentmeasurecalculation/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_experimentmeasurecalculation_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_experimentmeasurecalculation_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/experimentmeasurecalculation/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_experimentmeasurecalculation_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_experimentmeasurecalculation_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_experimentmeasurecalculation_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_experimentmeasurecalculation_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/experimentmeasurecalculation/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_experimentmeasurecalculation_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_experimentmeasurecalculation_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/experimentmeasurecalculation/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_experimentmeasurecalculation_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_experimentmeasurecalculation_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_experimentmeasurecalculation_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_experimentmeasurecalculation_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/experimentmeasurecalculation/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_experimentmeasurecalculation_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_experimentmeasurecalculation_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/experimentmeasurecalculation/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_experimentmeasurecalculation_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_experimentmeasurecalculation_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_experimentmeasurecalculation_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_experimentmeasurecalculation_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/experimentmeasurecalculation/{uid}/:
    get:
      operationId: api_experimentmeasurecalculation_retrieve
      description: ''
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        description: A unique value identifying this experiment measure calculation.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperimentMeasureCalculation'
          description: ''
    put:
      operationId: api_experimentmeasurecalculation_update
      description: ''
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        description: A unique value identifying this experiment measure calculation.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExperimentMeasureCalculation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExperimentMeasureCalculation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExperimentMeasureCalculation'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperimentMeasureCalculation'
          description: ''
    patch:
      operationId: api_experimentmeasurecalculation_partial_update
      description: ''
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        description: A unique value identifying this experiment measure calculation.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExperimentMeasureCalculation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExperimentMeasureCalculation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExperimentMeasureCalculation'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperimentMeasureCalculation'
          description: ''
    delete:
      operationId: api_experimentmeasurecalculation_destroy
      description: ''
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        description: A unique value identifying this experiment measure calculation.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/experimentworkflow/:
    get:
      operationId: api_experimentworkflow_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExperimentWorkflowList'
          description: ''
    post:
      operationId: api_experimentworkflow_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExperimentWorkflow'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExperimentWorkflow'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExperimentWorkflow'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperimentWorkflow'
          description: ''
  /api/experimentworkflow/{parent_lookup_experimentworkflow_experiment}/experiment/:
    get:
      operationId: api_experimentworkflow_experiment_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_experimentworkflow_experiment
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExperimentList'
          description: ''
    post:
      operationId: api_experimentworkflow_experiment_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_experimentworkflow_experiment
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Experiment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Experiment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Experiment'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
          description: ''
  /api/experimentworkflow/{parent_lookup_experimentworkflow_experiment}/experiment/{uuid}/:
    get:
      operationId: api_experimentworkflow_experiment_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_experimentworkflow_experiment
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this experiment.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
          description: ''
    put:
      operationId: api_experimentworkflow_experiment_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_experimentworkflow_experiment
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this experiment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Experiment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Experiment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Experiment'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
          description: ''
    patch:
      operationId: api_experimentworkflow_experiment_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_experimentworkflow_experiment
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this experiment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExperiment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExperiment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExperiment'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
          description: ''
    delete:
      operationId: api_experimentworkflow_experiment_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_experimentworkflow_experiment
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this experiment.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/experimentworkflow/{parent_lookup_experimentworkflow_workflow_type_uuid}/workflow_type_uuid/:
    get:
      operationId: api_experimentworkflow_workflow_type_uuid_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_experimentworkflow_workflow_type_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWorkflowTypeList'
          description: ''
    post:
      operationId: api_experimentworkflow_workflow_type_uuid_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_experimentworkflow_workflow_type_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkflowType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkflowType'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowType'
          description: ''
  /api/experimentworkflow/{parent_lookup_experimentworkflow_workflow_type_uuid}/workflow_type_uuid/{uuid}/:
    get:
      operationId: api_experimentworkflow_workflow_type_uuid_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_experimentworkflow_workflow_type_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow type.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowType'
          description: ''
    put:
      operationId: api_experimentworkflow_workflow_type_uuid_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_experimentworkflow_workflow_type_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkflowType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkflowType'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowType'
          description: ''
    patch:
      operationId: api_experimentworkflow_workflow_type_uuid_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_experimentworkflow_workflow_type_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWorkflowType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWorkflowType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWorkflowType'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowType'
          description: ''
    delete:
      operationId: api_experimentworkflow_workflow_type_uuid_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_experimentworkflow_workflow_type_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow type.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/experimentworkflow/{parent_lookup_experimentworkflow_workflow}/workflow/:
    get:
      operationId: api_experimentworkflow_workflow_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_experimentworkflow_workflow
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWorkflowList'
          description: ''
    post:
      operationId: api_experimentworkflow_workflow_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_experimentworkflow_workflow
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workflow'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Workflow'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Workflow'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
          description: ''
  /api/experimentworkflow/{parent_lookup_experimentworkflow_workflow}/workflow/{uuid}/:
    get:
      operationId: api_experimentworkflow_workflow_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_experimentworkflow_workflow
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
          description: ''
    put:
      operationId: api_experimentworkflow_workflow_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_experimentworkflow_workflow
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workflow'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Workflow'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Workflow'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
          description: ''
    patch:
      operationId: api_experimentworkflow_workflow_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_experimentworkflow_workflow
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWorkflow'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWorkflow'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWorkflow'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
          description: ''
    delete:
      operationId: api_experimentworkflow_workflow_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_experimentworkflow_workflow
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/experimentworkflow/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_experimentworkflow_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_experimentworkflow_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/experimentworkflow/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_experimentworkflow_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_experimentworkflow_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_experimentworkflow_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_experimentworkflow_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/experimentworkflow/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_experimentworkflow_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_experimentworkflow_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/experimentworkflow/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_experimentworkflow_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_experimentworkflow_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_experimentworkflow_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_experimentworkflow_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/experimentworkflow/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_experimentworkflow_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_experimentworkflow_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/experimentworkflow/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_experimentworkflow_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_experimentworkflow_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_experimentworkflow_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_experimentworkflow_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/experimentworkflow/{uuid}/:
    get:
      operationId: api_experimentworkflow_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this experiment workflow.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperimentWorkflow'
          description: ''
    put:
      operationId: api_experimentworkflow_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this experiment workflow.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExperimentWorkflow'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExperimentWorkflow'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExperimentWorkflow'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperimentWorkflow'
          description: ''
    patch:
      operationId: api_experimentworkflow_partial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this experiment workflow.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExperimentWorkflow'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExperimentWorkflow'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExperimentWorkflow'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperimentWorkflow'
          description: ''
    delete:
      operationId: api_experimentworkflow_destroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this experiment workflow.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/inventory/:
    get:
      operationId: api_inventory_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInventoryList'
          description: ''
    post:
      operationId: api_inventory_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Inventory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Inventory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Inventory'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
          description: ''
  /api/inventory/{parent_lookup_inventory_actor}/actor/:
    get:
      operationId: api_inventory_actor_list
      description: Documentation for actor
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_inventory_actor
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActorList'
          description: ''
    post:
      operationId: api_inventory_actor_create
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_inventory_actor
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
  /api/inventory/{parent_lookup_inventory_actor}/actor/{uuid}/:
    get:
      operationId: api_inventory_actor_retrieve
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_inventory_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    put:
      operationId: api_inventory_actor_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_inventory_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    patch:
      operationId: api_inventory_actor_partial_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_inventory_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    delete:
      operationId: api_inventory_actor_destroy
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_inventory_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/inventory/{parent_lookup_inventory_material}/material/:
    get:
      operationId: api_inventory_material_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_inventory_material
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMaterialList'
          description: ''
    post:
      operationId: api_inventory_material_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_inventory_material
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Material'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Material'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Material'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
          description: ''
  /api/inventory/{parent_lookup_inventory_material}/material/{uuid}/:
    get:
      operationId: api_inventory_material_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_inventory_material
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
          description: ''
    put:
      operationId: api_inventory_material_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_inventory_material
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Material'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Material'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Material'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
          description: ''
    patch:
      operationId: api_inventory_material_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_inventory_material
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMaterial'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMaterial'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMaterial'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
          description: ''
    delete:
      operationId: api_inventory_material_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_inventory_material
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/inventory/{parent_lookup_inventory_status}/status/:
    get:
      operationId: api_inventory_status_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_inventory_status
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStatusList'
          description: ''
    post:
      operationId: api_inventory_status_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_inventory_status
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
  /api/inventory/{parent_lookup_inventory_status}/status/{uuid}/:
    get:
      operationId: api_inventory_status_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_inventory_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    put:
      operationId: api_inventory_status_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_inventory_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    patch:
      operationId: api_inventory_status_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_inventory_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    delete:
      operationId: api_inventory_status_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_inventory_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/inventory/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_inventory_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_inventory_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/inventory/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_inventory_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_inventory_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_inventory_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_inventory_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/inventory/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_inventory_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_inventory_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/inventory/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_inventory_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_inventory_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_inventory_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_inventory_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/inventory/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_inventory_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_inventory_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/inventory/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_inventory_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_inventory_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_inventory_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_inventory_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/inventory/{uuid}/:
    get:
      operationId: api_inventory_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this inventory.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
          description: ''
    put:
      operationId: api_inventory_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this inventory.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Inventory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Inventory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Inventory'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
          description: ''
    patch:
      operationId: api_inventory_partial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this inventory.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInventory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInventory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInventory'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
          description: ''
    delete:
      operationId: api_inventory_destroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this inventory.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/inventorymaterial/:
    get:
      operationId: api_inventorymaterial_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInventoryMaterialList'
          description: ''
    post:
      operationId: api_inventorymaterial_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryMaterial'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InventoryMaterial'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InventoryMaterial'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryMaterial'
          description: ''
  /api/inventorymaterial/{parent_lookup_inventorymaterial_actor}/actor/:
    get:
      operationId: api_inventorymaterial_actor_list
      description: Documentation for actor
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_inventorymaterial_actor
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActorList'
          description: ''
    post:
      operationId: api_inventorymaterial_actor_create
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_inventorymaterial_actor
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
  /api/inventorymaterial/{parent_lookup_inventorymaterial_actor}/actor/{uuid}/:
    get:
      operationId: api_inventorymaterial_actor_retrieve
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_inventorymaterial_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    put:
      operationId: api_inventorymaterial_actor_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_inventorymaterial_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    patch:
      operationId: api_inventorymaterial_actor_partial_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_inventorymaterial_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    delete:
      operationId: api_inventorymaterial_actor_destroy
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_inventorymaterial_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/inventorymaterial/{parent_lookup_inventorymaterial_inventory_status}/inventory_status/:
    get:
      operationId: api_inventorymaterial_inventory_status_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_inventorymaterial_inventory_status
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStatusList'
          description: ''
    post:
      operationId: api_inventorymaterial_inventory_status_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_inventorymaterial_inventory_status
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
  /api/inventorymaterial/{parent_lookup_inventorymaterial_inventory_status}/inventory_status/{uuid}/:
    get:
      operationId: api_inventorymaterial_inventory_status_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_inventorymaterial_inventory_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    put:
      operationId: api_inventorymaterial_inventory_status_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_inventorymaterial_inventory_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    patch:
      operationId: api_inventorymaterial_inventory_status_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_inventorymaterial_inventory_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    delete:
      operationId: api_inventorymaterial_inventory_status_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_inventorymaterial_inventory_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/inventorymaterial/{parent_lookup_inventorymaterial_material_status}/material_status/:
    get:
      operationId: api_inventorymaterial_material_status_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_inventorymaterial_material_status
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStatusList'
          description: ''
    post:
      operationId: api_inventorymaterial_material_status_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_inventorymaterial_material_status
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
  /api/inventorymaterial/{parent_lookup_inventorymaterial_material_status}/material_status/{uuid}/:
    get:
      operationId: api_inventorymaterial_material_status_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_inventorymaterial_material_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    put:
      operationId: api_inventorymaterial_material_status_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_inventorymaterial_material_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    patch:
      operationId: api_inventorymaterial_material_status_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_inventorymaterial_material_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    delete:
      operationId: api_inventorymaterial_material_status_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_inventorymaterial_material_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/inventorymaterial/{parent_lookup_inventorymaterial_material}/material/:
    get:
      operationId: api_inventorymaterial_material_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_inventorymaterial_material
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMaterialList'
          description: ''
    post:
      operationId: api_inventorymaterial_material_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_inventorymaterial_material
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Material'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Material'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Material'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
          description: ''
  /api/inventorymaterial/{parent_lookup_inventorymaterial_material}/material/{uuid}/:
    get:
      operationId: api_inventorymaterial_material_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_inventorymaterial_material
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
          description: ''
    put:
      operationId: api_inventorymaterial_material_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_inventorymaterial_material
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Material'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Material'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Material'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
          description: ''
    patch:
      operationId: api_inventorymaterial_material_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_inventorymaterial_material
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMaterial'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMaterial'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMaterial'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
          description: ''
    delete:
      operationId: api_inventorymaterial_material_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_inventorymaterial_material
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/inventorymaterial/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_inventorymaterial_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_inventorymaterial_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/inventorymaterial/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_inventorymaterial_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_inventorymaterial_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_inventorymaterial_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_inventorymaterial_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/inventorymaterial/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_inventorymaterial_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_inventorymaterial_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/inventorymaterial/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_inventorymaterial_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_inventorymaterial_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_inventorymaterial_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_inventorymaterial_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/inventorymaterial/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_inventorymaterial_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_inventorymaterial_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/inventorymaterial/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_inventorymaterial_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_inventorymaterial_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_inventorymaterial_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_inventorymaterial_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/inventorymaterial/{uuid}/:
    get:
      operationId: api_inventorymaterial_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this inventory material.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryMaterial'
          description: ''
    put:
      operationId: api_inventorymaterial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this inventory material.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryMaterial'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InventoryMaterial'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InventoryMaterial'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryMaterial'
          description: ''
    patch:
      operationId: api_inventorymaterial_partial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this inventory material.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInventoryMaterial'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInventoryMaterial'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInventoryMaterial'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryMaterial'
          description: ''
    delete:
      operationId: api_inventorymaterial_destroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this inventory material.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/login:
    post:
      operationId: api_login_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
  /api/material/:
    get:
      operationId: api_material_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMaterialList'
          description: ''
    post:
      operationId: api_material_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Material'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Material'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Material'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
          description: ''
  /api/material/{parent_lookup_material_actor}/actor/:
    get:
      operationId: api_material_actor_list
      description: Documentation for actor
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_material_actor
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActorList'
          description: ''
    post:
      operationId: api_material_actor_create
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_material_actor
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
  /api/material/{parent_lookup_material_actor}/actor/{uuid}/:
    get:
      operationId: api_material_actor_retrieve
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_material_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    put:
      operationId: api_material_actor_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_material_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    patch:
      operationId: api_material_actor_partial_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_material_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    delete:
      operationId: api_material_actor_destroy
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_material_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/material/{parent_lookup_material_status}/status/:
    get:
      operationId: api_material_status_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_material_status
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStatusList'
          description: ''
    post:
      operationId: api_material_status_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_material_status
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
  /api/material/{parent_lookup_material_status}/status/{uuid}/:
    get:
      operationId: api_material_status_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_material_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    put:
      operationId: api_material_status_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_material_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    patch:
      operationId: api_material_status_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_material_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    delete:
      operationId: api_material_status_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_material_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/material/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_material_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_material_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/material/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_material_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_material_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_material_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_material_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/material/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_material_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_material_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/material/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_material_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_material_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_material_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_material_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/material/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_material_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_material_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/material/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_material_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_material_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_material_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_material_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/material/{uuid}/:
    get:
      operationId: api_material_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
          description: ''
    put:
      operationId: api_material_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Material'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Material'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Material'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
          description: ''
    patch:
      operationId: api_material_partial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMaterial'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMaterial'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMaterial'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
          description: ''
    delete:
      operationId: api_material_destroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/materialcalculationjson/:
    get:
      operationId: api_materialcalculationjson_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMaterialCalculationJsonList'
          description: ''
    post:
      operationId: api_materialcalculationjson_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialCalculationJson'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MaterialCalculationJson'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MaterialCalculationJson'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialCalculationJson'
          description: ''
  /api/materialcalculationjson/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_materialcalculationjson_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_materialcalculationjson_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/materialcalculationjson/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_materialcalculationjson_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_materialcalculationjson_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_materialcalculationjson_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_materialcalculationjson_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/materialcalculationjson/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_materialcalculationjson_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_materialcalculationjson_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/materialcalculationjson/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_materialcalculationjson_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_materialcalculationjson_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_materialcalculationjson_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_materialcalculationjson_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/materialcalculationjson/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_materialcalculationjson_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_materialcalculationjson_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/materialcalculationjson/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_materialcalculationjson_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_materialcalculationjson_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_materialcalculationjson_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_materialcalculationjson_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/materialcalculationjson/{uuid}/:
    get:
      operationId: api_materialcalculationjson_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material calculation json.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialCalculationJson'
          description: ''
    put:
      operationId: api_materialcalculationjson_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material calculation json.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialCalculationJson'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MaterialCalculationJson'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MaterialCalculationJson'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialCalculationJson'
          description: ''
    patch:
      operationId: api_materialcalculationjson_partial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material calculation json.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMaterialCalculationJson'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMaterialCalculationJson'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMaterialCalculationJson'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialCalculationJson'
          description: ''
    delete:
      operationId: api_materialcalculationjson_destroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material calculation json.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/materialcomposite/:
    get:
      operationId: api_materialcomposite_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMaterialCompositeList'
          description: ''
    post:
      operationId: api_materialcomposite_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialComposite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MaterialComposite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MaterialComposite'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialComposite'
          description: ''
  /api/materialcomposite/{parent_lookup_materialcomposite_actor}/actor/:
    get:
      operationId: api_materialcomposite_actor_list
      description: Documentation for actor
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_materialcomposite_actor
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActorList'
          description: ''
    post:
      operationId: api_materialcomposite_actor_create
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_materialcomposite_actor
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
  /api/materialcomposite/{parent_lookup_materialcomposite_actor}/actor/{uuid}/:
    get:
      operationId: api_materialcomposite_actor_retrieve
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_materialcomposite_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    put:
      operationId: api_materialcomposite_actor_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_materialcomposite_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    patch:
      operationId: api_materialcomposite_actor_partial_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_materialcomposite_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    delete:
      operationId: api_materialcomposite_actor_destroy
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_materialcomposite_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/materialcomposite/{parent_lookup_materialcomposite_component}/component/:
    get:
      operationId: api_materialcomposite_component_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_materialcomposite_component
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMaterialList'
          description: ''
    post:
      operationId: api_materialcomposite_component_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_materialcomposite_component
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Material'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Material'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Material'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
          description: ''
  /api/materialcomposite/{parent_lookup_materialcomposite_component}/component/{uuid}/:
    get:
      operationId: api_materialcomposite_component_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_materialcomposite_component
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
          description: ''
    put:
      operationId: api_materialcomposite_component_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_materialcomposite_component
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Material'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Material'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Material'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
          description: ''
    patch:
      operationId: api_materialcomposite_component_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_materialcomposite_component
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMaterial'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMaterial'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMaterial'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
          description: ''
    delete:
      operationId: api_materialcomposite_component_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_materialcomposite_component
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/materialcomposite/{parent_lookup_materialcomposite_composite}/composite/:
    get:
      operationId: api_materialcomposite_composite_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_materialcomposite_composite
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMaterialList'
          description: ''
    post:
      operationId: api_materialcomposite_composite_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_materialcomposite_composite
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Material'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Material'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Material'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
          description: ''
  /api/materialcomposite/{parent_lookup_materialcomposite_composite}/composite/{uuid}/:
    get:
      operationId: api_materialcomposite_composite_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_materialcomposite_composite
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
          description: ''
    put:
      operationId: api_materialcomposite_composite_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_materialcomposite_composite
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Material'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Material'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Material'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
          description: ''
    patch:
      operationId: api_materialcomposite_composite_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_materialcomposite_composite
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMaterial'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMaterial'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMaterial'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
          description: ''
    delete:
      operationId: api_materialcomposite_composite_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_materialcomposite_composite
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/materialcomposite/{parent_lookup_materialcomposite_status}/status/:
    get:
      operationId: api_materialcomposite_status_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_materialcomposite_status
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStatusList'
          description: ''
    post:
      operationId: api_materialcomposite_status_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_materialcomposite_status
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
  /api/materialcomposite/{parent_lookup_materialcomposite_status}/status/{uuid}/:
    get:
      operationId: api_materialcomposite_status_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_materialcomposite_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    put:
      operationId: api_materialcomposite_status_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_materialcomposite_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    patch:
      operationId: api_materialcomposite_status_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_materialcomposite_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    delete:
      operationId: api_materialcomposite_status_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_materialcomposite_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/materialcomposite/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_materialcomposite_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_materialcomposite_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/materialcomposite/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_materialcomposite_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_materialcomposite_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_materialcomposite_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_materialcomposite_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/materialcomposite/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_materialcomposite_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_materialcomposite_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/materialcomposite/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_materialcomposite_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_materialcomposite_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_materialcomposite_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_materialcomposite_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/materialcomposite/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_materialcomposite_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_materialcomposite_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/materialcomposite/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_materialcomposite_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_materialcomposite_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_materialcomposite_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_materialcomposite_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/materialcomposite/{uuid}/:
    get:
      operationId: api_materialcomposite_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material composite.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialComposite'
          description: ''
    put:
      operationId: api_materialcomposite_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material composite.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialComposite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MaterialComposite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MaterialComposite'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialComposite'
          description: ''
    patch:
      operationId: api_materialcomposite_partial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material composite.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMaterialComposite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMaterialComposite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMaterialComposite'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialComposite'
          description: ''
    delete:
      operationId: api_materialcomposite_destroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material composite.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/materialproperty/:
    get:
      operationId: api_materialproperty_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMaterialPropertyList'
          description: ''
    post:
      operationId: api_materialproperty_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialProperty'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MaterialProperty'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MaterialProperty'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialProperty'
          description: ''
  /api/materialproperty/{parent_lookup_materialproperty_actor}/actor/:
    get:
      operationId: api_materialproperty_actor_list
      description: Documentation for actor
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_materialproperty_actor
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActorList'
          description: ''
    post:
      operationId: api_materialproperty_actor_create
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_materialproperty_actor
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
  /api/materialproperty/{parent_lookup_materialproperty_actor}/actor/{uuid}/:
    get:
      operationId: api_materialproperty_actor_retrieve
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_materialproperty_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    put:
      operationId: api_materialproperty_actor_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_materialproperty_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    patch:
      operationId: api_materialproperty_actor_partial_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_materialproperty_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    delete:
      operationId: api_materialproperty_actor_destroy
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_materialproperty_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/materialproperty/{parent_lookup_materialproperty_material}/material/:
    get:
      operationId: api_materialproperty_material_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_materialproperty_material
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMaterialList'
          description: ''
    post:
      operationId: api_materialproperty_material_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_materialproperty_material
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Material'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Material'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Material'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
          description: ''
  /api/materialproperty/{parent_lookup_materialproperty_material}/material/{uuid}/:
    get:
      operationId: api_materialproperty_material_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_materialproperty_material
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
          description: ''
    put:
      operationId: api_materialproperty_material_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_materialproperty_material
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Material'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Material'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Material'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
          description: ''
    patch:
      operationId: api_materialproperty_material_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_materialproperty_material
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMaterial'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMaterial'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMaterial'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
          description: ''
    delete:
      operationId: api_materialproperty_material_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_materialproperty_material
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/materialproperty/{parent_lookup_materialproperty_property_def}/property_def/:
    get:
      operationId: api_materialproperty_property_def_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_materialproperty_property_def
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPropertyDefList'
          description: ''
    post:
      operationId: api_materialproperty_property_def_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_materialproperty_property_def
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PropertyDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PropertyDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyDef'
          description: ''
  /api/materialproperty/{parent_lookup_materialproperty_property_def}/property_def/{uuid}/:
    get:
      operationId: api_materialproperty_property_def_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_materialproperty_property_def
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this property def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyDef'
          description: ''
    put:
      operationId: api_materialproperty_property_def_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_materialproperty_property_def
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this property def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PropertyDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PropertyDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyDef'
          description: ''
    patch:
      operationId: api_materialproperty_property_def_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_materialproperty_property_def
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this property def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPropertyDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPropertyDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPropertyDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyDef'
          description: ''
    delete:
      operationId: api_materialproperty_property_def_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_materialproperty_property_def
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this property def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/materialproperty/{parent_lookup_materialproperty_property}/property/:
    get:
      operationId: api_materialproperty_property_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_materialproperty_property
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPropertyList'
          description: ''
    post:
      operationId: api_materialproperty_property_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_materialproperty_property
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Property'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Property'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Property'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
          description: ''
  /api/materialproperty/{parent_lookup_materialproperty_property}/property/{uuid}/:
    get:
      operationId: api_materialproperty_property_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_materialproperty_property
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this property.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
          description: ''
    put:
      operationId: api_materialproperty_property_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_materialproperty_property
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this property.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Property'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Property'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Property'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
          description: ''
    patch:
      operationId: api_materialproperty_property_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_materialproperty_property
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this property.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProperty'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProperty'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProperty'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
          description: ''
    delete:
      operationId: api_materialproperty_property_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_materialproperty_property
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this property.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/materialproperty/{parent_lookup_materialproperty_status}/status/:
    get:
      operationId: api_materialproperty_status_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_materialproperty_status
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStatusList'
          description: ''
    post:
      operationId: api_materialproperty_status_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_materialproperty_status
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
  /api/materialproperty/{parent_lookup_materialproperty_status}/status/{uuid}/:
    get:
      operationId: api_materialproperty_status_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_materialproperty_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    put:
      operationId: api_materialproperty_status_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_materialproperty_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    patch:
      operationId: api_materialproperty_status_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_materialproperty_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    delete:
      operationId: api_materialproperty_status_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_materialproperty_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/materialproperty/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_materialproperty_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_materialproperty_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/materialproperty/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_materialproperty_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_materialproperty_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_materialproperty_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_materialproperty_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/materialproperty/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_materialproperty_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_materialproperty_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/materialproperty/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_materialproperty_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_materialproperty_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_materialproperty_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_materialproperty_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/materialproperty/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_materialproperty_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_materialproperty_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/materialproperty/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_materialproperty_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_materialproperty_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_materialproperty_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_materialproperty_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/materialproperty/{uuid}/:
    get:
      operationId: api_materialproperty_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material property.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialProperty'
          description: ''
    put:
      operationId: api_materialproperty_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material property.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialProperty'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MaterialProperty'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MaterialProperty'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialProperty'
          description: ''
    patch:
      operationId: api_materialproperty_partial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material property.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMaterialProperty'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMaterialProperty'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMaterialProperty'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialProperty'
          description: ''
    delete:
      operationId: api_materialproperty_destroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material property.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/materialrefnamedef/:
    get:
      operationId: api_materialrefnamedef_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMaterialRefnameDefList'
          description: ''
    post:
      operationId: api_materialrefnamedef_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialRefnameDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MaterialRefnameDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MaterialRefnameDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialRefnameDef'
          description: ''
  /api/materialrefnamedef/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_materialrefnamedef_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_materialrefnamedef_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/materialrefnamedef/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_materialrefnamedef_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_materialrefnamedef_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_materialrefnamedef_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_materialrefnamedef_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/materialrefnamedef/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_materialrefnamedef_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_materialrefnamedef_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/materialrefnamedef/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_materialrefnamedef_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_materialrefnamedef_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_materialrefnamedef_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_materialrefnamedef_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/materialrefnamedef/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_materialrefnamedef_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_materialrefnamedef_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/materialrefnamedef/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_materialrefnamedef_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_materialrefnamedef_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_materialrefnamedef_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_materialrefnamedef_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/materialrefnamedef/{uuid}/:
    get:
      operationId: api_materialrefnamedef_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material refname def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialRefnameDef'
          description: ''
    put:
      operationId: api_materialrefnamedef_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material refname def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialRefnameDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MaterialRefnameDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MaterialRefnameDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialRefnameDef'
          description: ''
    patch:
      operationId: api_materialrefnamedef_partial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material refname def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMaterialRefnameDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMaterialRefnameDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMaterialRefnameDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialRefnameDef'
          description: ''
    delete:
      operationId: api_materialrefnamedef_destroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material refname def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/materialtype/:
    get:
      operationId: api_materialtype_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMaterialTypeList'
          description: ''
    post:
      operationId: api_materialtype_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MaterialType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MaterialType'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialType'
          description: ''
  /api/materialtype/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_materialtype_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_materialtype_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/materialtype/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_materialtype_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_materialtype_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_materialtype_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_materialtype_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/materialtype/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_materialtype_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_materialtype_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/materialtype/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_materialtype_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_materialtype_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_materialtype_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_materialtype_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/materialtype/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_materialtype_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_materialtype_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/materialtype/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_materialtype_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_materialtype_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_materialtype_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_materialtype_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/materialtype/{uuid}/:
    get:
      operationId: api_materialtype_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material type.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialType'
          description: ''
    put:
      operationId: api_materialtype_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MaterialType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MaterialType'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialType'
          description: ''
    patch:
      operationId: api_materialtype_partial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMaterialType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMaterialType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMaterialType'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialType'
          description: ''
    delete:
      operationId: api_materialtype_destroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this material type.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/measure/:
    get:
      operationId: api_measure_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMeasureList'
          description: ''
    post:
      operationId: api_measure_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Measure'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Measure'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Measure'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Measure'
          description: ''
  /api/measure/{parent_lookup_measure_actor_uuid}/actor_uuid/:
    get:
      operationId: api_measure_actor_uuid_list
      description: Documentation for actor
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_measure_actor_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActorList'
          description: ''
    post:
      operationId: api_measure_actor_uuid_create
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_measure_actor_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
  /api/measure/{parent_lookup_measure_actor_uuid}/actor_uuid/{uuid}/:
    get:
      operationId: api_measure_actor_uuid_retrieve
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_measure_actor_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    put:
      operationId: api_measure_actor_uuid_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_measure_actor_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    patch:
      operationId: api_measure_actor_uuid_partial_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_measure_actor_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    delete:
      operationId: api_measure_actor_uuid_destroy
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_measure_actor_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/measure/{parent_lookup_measure_measure_type_uuid}/measure_type_uuid/:
    get:
      operationId: api_measure_measure_type_uuid_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_measure_measure_type_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMeasureTypeList'
          description: ''
    post:
      operationId: api_measure_measure_type_uuid_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_measure_measure_type_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeasureType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MeasureType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MeasureType'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasureType'
          description: ''
  /api/measure/{parent_lookup_measure_measure_type_uuid}/measure_type_uuid/{uuid}/:
    get:
      operationId: api_measure_measure_type_uuid_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_measure_measure_type_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this measure type.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasureType'
          description: ''
    put:
      operationId: api_measure_measure_type_uuid_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_measure_measure_type_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this measure type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeasureType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MeasureType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MeasureType'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasureType'
          description: ''
    patch:
      operationId: api_measure_measure_type_uuid_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_measure_measure_type_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this measure type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMeasureType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMeasureType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMeasureType'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasureType'
          description: ''
    delete:
      operationId: api_measure_measure_type_uuid_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_measure_measure_type_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this measure type.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/measure/{parent_lookup_measure_ref_measure_uuid}/ref_measure_uuid/:
    get:
      operationId: api_measure_ref_measure_uuid_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_measure_ref_measure_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMeasureList'
          description: ''
    post:
      operationId: api_measure_ref_measure_uuid_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_measure_ref_measure_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Measure'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Measure'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Measure'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Measure'
          description: ''
  /api/measure/{parent_lookup_measure_ref_measure_uuid}/ref_measure_uuid/{uuid}/:
    get:
      operationId: api_measure_ref_measure_uuid_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_measure_ref_measure_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this measure.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Measure'
          description: ''
    put:
      operationId: api_measure_ref_measure_uuid_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_measure_ref_measure_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this measure.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Measure'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Measure'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Measure'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Measure'
          description: ''
    patch:
      operationId: api_measure_ref_measure_uuid_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_measure_ref_measure_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this measure.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMeasure'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMeasure'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMeasure'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Measure'
          description: ''
    delete:
      operationId: api_measure_ref_measure_uuid_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_measure_ref_measure_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this measure.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/measure/{parent_lookup_measure_status_uuid}/status_uuid/:
    get:
      operationId: api_measure_status_uuid_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_measure_status_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStatusList'
          description: ''
    post:
      operationId: api_measure_status_uuid_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_measure_status_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
  /api/measure/{parent_lookup_measure_status_uuid}/status_uuid/{uuid}/:
    get:
      operationId: api_measure_status_uuid_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_measure_status_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    put:
      operationId: api_measure_status_uuid_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_measure_status_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    patch:
      operationId: api_measure_status_uuid_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_measure_status_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    delete:
      operationId: api_measure_status_uuid_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_measure_status_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/measure/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_measure_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_measure_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/measure/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_measure_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_measure_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_measure_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_measure_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/measure/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_measure_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_measure_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/measure/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_measure_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_measure_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_measure_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_measure_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/measure/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_measure_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_measure_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/measure/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_measure_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_measure_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_measure_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_measure_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/measure/{uuid}/:
    get:
      operationId: api_measure_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this measure.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Measure'
          description: ''
    put:
      operationId: api_measure_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this measure.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Measure'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Measure'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Measure'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Measure'
          description: ''
    patch:
      operationId: api_measure_partial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this measure.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMeasure'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMeasure'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMeasure'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Measure'
          description: ''
    delete:
      operationId: api_measure_destroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this measure.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/measuretype/:
    get:
      operationId: api_measuretype_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMeasureTypeList'
          description: ''
    post:
      operationId: api_measuretype_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeasureType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MeasureType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MeasureType'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasureType'
          description: ''
  /api/measuretype/{parent_lookup_measuretype_actor_uuid}/actor_uuid/:
    get:
      operationId: api_measuretype_actor_uuid_list
      description: Documentation for actor
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_measuretype_actor_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActorList'
          description: ''
    post:
      operationId: api_measuretype_actor_uuid_create
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_measuretype_actor_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
  /api/measuretype/{parent_lookup_measuretype_actor_uuid}/actor_uuid/{uuid}/:
    get:
      operationId: api_measuretype_actor_uuid_retrieve
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_measuretype_actor_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    put:
      operationId: api_measuretype_actor_uuid_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_measuretype_actor_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    patch:
      operationId: api_measuretype_actor_uuid_partial_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_measuretype_actor_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    delete:
      operationId: api_measuretype_actor_uuid_destroy
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_measuretype_actor_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/measuretype/{parent_lookup_measuretype_status_uuid}/status_uuid/:
    get:
      operationId: api_measuretype_status_uuid_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_measuretype_status_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStatusList'
          description: ''
    post:
      operationId: api_measuretype_status_uuid_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_measuretype_status_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
  /api/measuretype/{parent_lookup_measuretype_status_uuid}/status_uuid/{uuid}/:
    get:
      operationId: api_measuretype_status_uuid_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_measuretype_status_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    put:
      operationId: api_measuretype_status_uuid_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_measuretype_status_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    patch:
      operationId: api_measuretype_status_uuid_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_measuretype_status_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    delete:
      operationId: api_measuretype_status_uuid_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_measuretype_status_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/measuretype/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_measuretype_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_measuretype_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/measuretype/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_measuretype_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_measuretype_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_measuretype_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_measuretype_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/measuretype/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_measuretype_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_measuretype_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/measuretype/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_measuretype_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_measuretype_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_measuretype_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_measuretype_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/measuretype/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_measuretype_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_measuretype_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/measuretype/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_measuretype_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_measuretype_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_measuretype_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_measuretype_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/measuretype/{uuid}/:
    get:
      operationId: api_measuretype_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this measure type.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasureType'
          description: ''
    put:
      operationId: api_measuretype_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this measure type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeasureType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MeasureType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MeasureType'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasureType'
          description: ''
    patch:
      operationId: api_measuretype_partial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this measure type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMeasureType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMeasureType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMeasureType'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasureType'
          description: ''
    delete:
      operationId: api_measuretype_destroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this measure type.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/note/:
    get:
      operationId: api_note_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_note_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/note/{parent_lookup_note_actor}/actor/:
    get:
      operationId: api_note_actor_list
      description: Documentation for actor
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_note_actor
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActorList'
          description: ''
    post:
      operationId: api_note_actor_create
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_note_actor
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
  /api/note/{parent_lookup_note_actor}/actor/{uuid}/:
    get:
      operationId: api_note_actor_retrieve
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_note_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    put:
      operationId: api_note_actor_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_note_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    patch:
      operationId: api_note_actor_partial_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_note_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    delete:
      operationId: api_note_actor_destroy
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_note_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/note/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_note_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_note_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/note/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_note_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_note_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_note_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_note_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/note/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_note_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_note_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/note/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_note_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_note_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_note_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_note_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/note/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_note_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_note_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/note/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_note_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_note_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_note_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_note_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/note/{uuid}/:
    get:
      operationId: api_note_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_note_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_note_partial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_note_destroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/note_x/:
    get:
      operationId: api_note_x_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNote_xList'
          description: ''
    post:
      operationId: api_note_x_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note_x'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note_x'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note_x'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note_x'
          description: ''
  /api/note_x/{parent_lookup_note_x_note}/note/:
    get:
      operationId: api_note_x_note_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_note_x_note
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_note_x_note_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_note_x_note
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/note_x/{parent_lookup_note_x_note}/note/{uuid}/:
    get:
      operationId: api_note_x_note_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_note_x_note
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_note_x_note_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_note_x_note
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_note_x_note_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_note_x_note
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_note_x_note_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_note_x_note
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/note_x/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_note_x_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_note_x_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/note_x/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_note_x_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_note_x_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_note_x_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_note_x_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/note_x/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_note_x_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_note_x_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/note_x/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_note_x_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_note_x_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_note_x_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_note_x_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/note_x/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_note_x_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_note_x_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/note_x/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_note_x_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_note_x_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_note_x_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_note_x_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/note_x/{uuid}/:
    get:
      operationId: api_note_x_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note_x.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note_x'
          description: ''
    put:
      operationId: api_note_x_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note_x.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note_x'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note_x'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note_x'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note_x'
          description: ''
    patch:
      operationId: api_note_x_partial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note_x.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote_x'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote_x'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote_x'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note_x'
          description: ''
    delete:
      operationId: api_note_x_destroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note_x.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/organization/:
    get:
      operationId: api_organization_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganizationList'
          description: ''
    post:
      operationId: api_organization_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Organization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
  /api/organization/{parent_lookup_organization_parent}/parent/:
    get:
      operationId: api_organization_parent_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_organization_parent
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganizationList'
          description: ''
    post:
      operationId: api_organization_parent_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_organization_parent
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Organization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
  /api/organization/{parent_lookup_organization_parent}/parent/{uuid}/:
    get:
      operationId: api_organization_parent_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_organization_parent
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this organization.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
    put:
      operationId: api_organization_parent_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_organization_parent
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this organization.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Organization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
    patch:
      operationId: api_organization_parent_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_organization_parent
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this organization.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganization'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
    delete:
      operationId: api_organization_parent_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_organization_parent
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this organization.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/organization/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_organization_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_organization_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/organization/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_organization_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_organization_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_organization_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_organization_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/organization/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_organization_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_organization_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/organization/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_organization_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_organization_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_organization_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_organization_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/organization/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_organization_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_organization_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/organization/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_organization_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_organization_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_organization_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_organization_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/organization/{uuid}/:
    get:
      operationId: api_organization_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this organization.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
    put:
      operationId: api_organization_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this organization.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Organization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
    patch:
      operationId: api_organization_partial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this organization.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganization'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
    delete:
      operationId: api_organization_destroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this organization.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/parameter/:
    get:
      operationId: api_parameter_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedParameterList'
          description: ''
    post:
      operationId: api_parameter_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Parameter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Parameter'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Parameter'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parameter'
          description: ''
  /api/parameter/{parent_lookup_parameter_actor}/actor/:
    get:
      operationId: api_parameter_actor_list
      description: Documentation for actor
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_parameter_actor
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActorList'
          description: ''
    post:
      operationId: api_parameter_actor_create
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_parameter_actor
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
  /api/parameter/{parent_lookup_parameter_actor}/actor/{uuid}/:
    get:
      operationId: api_parameter_actor_retrieve
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_parameter_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    put:
      operationId: api_parameter_actor_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_parameter_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    patch:
      operationId: api_parameter_actor_partial_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_parameter_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    delete:
      operationId: api_parameter_actor_destroy
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_parameter_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/parameter/{parent_lookup_parameter_parameter_def}/parameter_def/:
    get:
      operationId: api_parameter_parameter_def_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_parameter_parameter_def
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedParameterDefList'
          description: ''
    post:
      operationId: api_parameter_parameter_def_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_parameter_parameter_def
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParameterDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ParameterDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ParameterDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterDef'
          description: ''
  /api/parameter/{parent_lookup_parameter_parameter_def}/parameter_def/{uuid}/:
    get:
      operationId: api_parameter_parameter_def_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_parameter_parameter_def
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this parameter def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterDef'
          description: ''
    put:
      operationId: api_parameter_parameter_def_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_parameter_parameter_def
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this parameter def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParameterDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ParameterDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ParameterDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterDef'
          description: ''
    patch:
      operationId: api_parameter_parameter_def_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_parameter_parameter_def
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this parameter def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedParameterDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedParameterDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedParameterDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterDef'
          description: ''
    delete:
      operationId: api_parameter_parameter_def_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_parameter_parameter_def
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this parameter def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/parameter/{parent_lookup_parameter_status}/status/:
    get:
      operationId: api_parameter_status_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_parameter_status
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStatusList'
          description: ''
    post:
      operationId: api_parameter_status_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_parameter_status
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
  /api/parameter/{parent_lookup_parameter_status}/status/{uuid}/:
    get:
      operationId: api_parameter_status_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_parameter_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    put:
      operationId: api_parameter_status_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_parameter_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    patch:
      operationId: api_parameter_status_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_parameter_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    delete:
      operationId: api_parameter_status_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_parameter_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/parameter/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_parameter_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_parameter_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/parameter/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_parameter_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_parameter_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_parameter_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_parameter_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/parameter/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_parameter_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_parameter_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/parameter/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_parameter_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_parameter_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_parameter_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_parameter_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/parameter/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_parameter_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_parameter_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/parameter/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_parameter_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_parameter_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_parameter_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_parameter_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/parameter/{uuid}/:
    get:
      operationId: api_parameter_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this parameter.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parameter'
          description: ''
    put:
      operationId: api_parameter_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this parameter.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Parameter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Parameter'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Parameter'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parameter'
          description: ''
    patch:
      operationId: api_parameter_partial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this parameter.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedParameter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedParameter'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedParameter'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parameter'
          description: ''
    delete:
      operationId: api_parameter_destroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this parameter.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/parameterdef/:
    get:
      operationId: api_parameterdef_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedParameterDefList'
          description: ''
    post:
      operationId: api_parameterdef_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParameterDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ParameterDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ParameterDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterDef'
          description: ''
  /api/parameterdef/{parent_lookup_parameterdef_actor}/actor/:
    get:
      operationId: api_parameterdef_actor_list
      description: Documentation for actor
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_parameterdef_actor
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActorList'
          description: ''
    post:
      operationId: api_parameterdef_actor_create
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_parameterdef_actor
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
  /api/parameterdef/{parent_lookup_parameterdef_actor}/actor/{uuid}/:
    get:
      operationId: api_parameterdef_actor_retrieve
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_parameterdef_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    put:
      operationId: api_parameterdef_actor_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_parameterdef_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    patch:
      operationId: api_parameterdef_actor_partial_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_parameterdef_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    delete:
      operationId: api_parameterdef_actor_destroy
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_parameterdef_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/parameterdef/{parent_lookup_parameterdef_status}/status/:
    get:
      operationId: api_parameterdef_status_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_parameterdef_status
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStatusList'
          description: ''
    post:
      operationId: api_parameterdef_status_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_parameterdef_status
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
  /api/parameterdef/{parent_lookup_parameterdef_status}/status/{uuid}/:
    get:
      operationId: api_parameterdef_status_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_parameterdef_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    put:
      operationId: api_parameterdef_status_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_parameterdef_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    patch:
      operationId: api_parameterdef_status_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_parameterdef_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    delete:
      operationId: api_parameterdef_status_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_parameterdef_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/parameterdef/{parent_lookup_parameterdef_val_type}/val_type/:
    get:
      operationId: api_parameterdef_val_type_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_parameterdef_val_type
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTypeDefList'
          description: ''
    post:
      operationId: api_parameterdef_val_type_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_parameterdef_val_type
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypeDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TypeDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TypeDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
  /api/parameterdef/{parent_lookup_parameterdef_val_type}/val_type/{uuid}/:
    get:
      operationId: api_parameterdef_val_type_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_parameterdef_val_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
    put:
      operationId: api_parameterdef_val_type_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_parameterdef_val_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypeDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TypeDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TypeDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
    patch:
      operationId: api_parameterdef_val_type_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_parameterdef_val_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTypeDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTypeDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTypeDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
    delete:
      operationId: api_parameterdef_val_type_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_parameterdef_val_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/parameterdef/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_parameterdef_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_parameterdef_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/parameterdef/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_parameterdef_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_parameterdef_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_parameterdef_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_parameterdef_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/parameterdef/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_parameterdef_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_parameterdef_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/parameterdef/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_parameterdef_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_parameterdef_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_parameterdef_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_parameterdef_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/parameterdef/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_parameterdef_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_parameterdef_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/parameterdef/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_parameterdef_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_parameterdef_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_parameterdef_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_parameterdef_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/parameterdef/{uuid}/:
    get:
      operationId: api_parameterdef_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this parameter def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterDef'
          description: ''
    put:
      operationId: api_parameterdef_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this parameter def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParameterDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ParameterDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ParameterDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterDef'
          description: ''
    patch:
      operationId: api_parameterdef_partial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this parameter def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedParameterDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedParameterDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedParameterDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterDef'
          description: ''
    delete:
      operationId: api_parameterdef_destroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this parameter def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/person/:
    get:
      operationId: api_person_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPersonList'
          description: ''
    post:
      operationId: api_person_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Person'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Person'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
          description: ''
  /api/person/{parent_lookup_person_organization}/organization/:
    get:
      operationId: api_person_organization_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_person_organization
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganizationList'
          description: ''
    post:
      operationId: api_person_organization_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_person_organization
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Organization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
  /api/person/{parent_lookup_person_organization}/organization/{uuid}/:
    get:
      operationId: api_person_organization_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_person_organization
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this organization.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
    put:
      operationId: api_person_organization_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_person_organization
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this organization.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Organization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
    patch:
      operationId: api_person_organization_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_person_organization
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this organization.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganization'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
    delete:
      operationId: api_person_organization_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_person_organization
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this organization.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/person/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_person_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_person_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/person/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_person_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_person_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_person_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_person_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/person/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_person_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_person_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/person/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_person_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_person_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_person_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_person_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/person/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_person_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_person_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/person/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_person_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_person_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_person_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_person_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/person/{uuid}/:
    get:
      operationId: api_person_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this person.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
          description: ''
    put:
      operationId: api_person_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this person.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Person'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Person'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
          description: ''
    patch:
      operationId: api_person_partial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this person.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPerson'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPerson'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPerson'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
          description: ''
    delete:
      operationId: api_person_destroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this person.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/property/:
    get:
      operationId: api_property_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPropertyList'
          description: ''
    post:
      operationId: api_property_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Property'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Property'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Property'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
          description: ''
  /api/property/{parent_lookup_property_actor}/actor/:
    get:
      operationId: api_property_actor_list
      description: Documentation for actor
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_property_actor
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActorList'
          description: ''
    post:
      operationId: api_property_actor_create
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_property_actor
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
  /api/property/{parent_lookup_property_actor}/actor/{uuid}/:
    get:
      operationId: api_property_actor_retrieve
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_property_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    put:
      operationId: api_property_actor_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_property_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    patch:
      operationId: api_property_actor_partial_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_property_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    delete:
      operationId: api_property_actor_destroy
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_property_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/property/{parent_lookup_property_property_def}/property_def/:
    get:
      operationId: api_property_property_def_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_property_property_def
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPropertyDefList'
          description: ''
    post:
      operationId: api_property_property_def_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_property_property_def
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PropertyDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PropertyDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyDef'
          description: ''
  /api/property/{parent_lookup_property_property_def}/property_def/{uuid}/:
    get:
      operationId: api_property_property_def_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_property_property_def
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this property def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyDef'
          description: ''
    put:
      operationId: api_property_property_def_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_property_property_def
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this property def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PropertyDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PropertyDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyDef'
          description: ''
    patch:
      operationId: api_property_property_def_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_property_property_def
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this property def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPropertyDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPropertyDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPropertyDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyDef'
          description: ''
    delete:
      operationId: api_property_property_def_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_property_property_def
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this property def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/property/{parent_lookup_property_status}/status/:
    get:
      operationId: api_property_status_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_property_status
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStatusList'
          description: ''
    post:
      operationId: api_property_status_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_property_status
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
  /api/property/{parent_lookup_property_status}/status/{uuid}/:
    get:
      operationId: api_property_status_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_property_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    put:
      operationId: api_property_status_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_property_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    patch:
      operationId: api_property_status_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_property_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    delete:
      operationId: api_property_status_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_property_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/property/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_property_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_property_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/property/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_property_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_property_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_property_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_property_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/property/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_property_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_property_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/property/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_property_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_property_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_property_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_property_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/property/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_property_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_property_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/property/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_property_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_property_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_property_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_property_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/property/{uuid}/:
    get:
      operationId: api_property_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this property.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
          description: ''
    put:
      operationId: api_property_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this property.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Property'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Property'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Property'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
          description: ''
    patch:
      operationId: api_property_partial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this property.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProperty'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProperty'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProperty'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
          description: ''
    delete:
      operationId: api_property_destroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this property.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/propertydef/:
    get:
      operationId: api_propertydef_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPropertyDefList'
          description: ''
    post:
      operationId: api_propertydef_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PropertyDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PropertyDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyDef'
          description: ''
  /api/propertydef/{parent_lookup_propertydef_actor}/actor/:
    get:
      operationId: api_propertydef_actor_list
      description: Documentation for actor
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_propertydef_actor
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActorList'
          description: ''
    post:
      operationId: api_propertydef_actor_create
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_propertydef_actor
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
  /api/propertydef/{parent_lookup_propertydef_actor}/actor/{uuid}/:
    get:
      operationId: api_propertydef_actor_retrieve
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_propertydef_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    put:
      operationId: api_propertydef_actor_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_propertydef_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    patch:
      operationId: api_propertydef_actor_partial_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_propertydef_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    delete:
      operationId: api_propertydef_actor_destroy
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_propertydef_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/propertydef/{parent_lookup_propertydef_status}/status/:
    get:
      operationId: api_propertydef_status_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_propertydef_status
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStatusList'
          description: ''
    post:
      operationId: api_propertydef_status_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_propertydef_status
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
  /api/propertydef/{parent_lookup_propertydef_status}/status/{uuid}/:
    get:
      operationId: api_propertydef_status_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_propertydef_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    put:
      operationId: api_propertydef_status_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_propertydef_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    patch:
      operationId: api_propertydef_status_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_propertydef_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    delete:
      operationId: api_propertydef_status_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_propertydef_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/propertydef/{parent_lookup_propertydef_val_type}/val_type/:
    get:
      operationId: api_propertydef_val_type_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_propertydef_val_type
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTypeDefList'
          description: ''
    post:
      operationId: api_propertydef_val_type_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_propertydef_val_type
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypeDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TypeDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TypeDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
  /api/propertydef/{parent_lookup_propertydef_val_type}/val_type/{uuid}/:
    get:
      operationId: api_propertydef_val_type_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_propertydef_val_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
    put:
      operationId: api_propertydef_val_type_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_propertydef_val_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypeDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TypeDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TypeDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
    patch:
      operationId: api_propertydef_val_type_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_propertydef_val_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTypeDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTypeDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTypeDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
    delete:
      operationId: api_propertydef_val_type_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_propertydef_val_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/propertydef/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_propertydef_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_propertydef_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/propertydef/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_propertydef_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_propertydef_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_propertydef_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_propertydef_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/propertydef/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_propertydef_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_propertydef_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/propertydef/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_propertydef_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_propertydef_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_propertydef_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_propertydef_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/propertydef/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_propertydef_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_propertydef_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/propertydef/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_propertydef_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_propertydef_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_propertydef_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_propertydef_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/propertydef/{uuid}/:
    get:
      operationId: api_propertydef_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this property def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyDef'
          description: ''
    put:
      operationId: api_propertydef_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this property def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PropertyDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PropertyDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyDef'
          description: ''
    patch:
      operationId: api_propertydef_partial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this property def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPropertyDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPropertyDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPropertyDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyDef'
          description: ''
    delete:
      operationId: api_propertydef_destroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this property def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/status/:
    get:
      operationId: api_status_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStatusList'
          description: ''
    post:
      operationId: api_status_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
  /api/status/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_status_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_status_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/status/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_status_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_status_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_status_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_status_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/status/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_status_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_status_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/status/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_status_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_status_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_status_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_status_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/status/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_status_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_status_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/status/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_status_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_status_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_status_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_status_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/status/{uuid}/:
    get:
      operationId: api_status_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    put:
      operationId: api_status_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    patch:
      operationId: api_status_partial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    delete:
      operationId: api_status_destroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/systemtool/:
    get:
      operationId: api_systemtool_list
      description: This is a test doc
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSystemtoolList'
          description: ''
    post:
      operationId: api_systemtool_create
      description: This is a test doc
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Systemtool'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Systemtool'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Systemtool'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Systemtool'
          description: ''
  /api/systemtool/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_systemtool_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_systemtool_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/systemtool/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_systemtool_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_systemtool_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_systemtool_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_systemtool_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/systemtool/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_systemtool_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_systemtool_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/systemtool/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_systemtool_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_systemtool_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_systemtool_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_systemtool_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/systemtool/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_systemtool_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_systemtool_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/systemtool/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_systemtool_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_systemtool_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_systemtool_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_systemtool_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/systemtool/{parent_lookup_systemtool_systemtool_type}/systemtool_type/:
    get:
      operationId: api_systemtool_systemtool_type_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_systemtool_systemtool_type
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSystemtoolTypeList'
          description: ''
    post:
      operationId: api_systemtool_systemtool_type_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_systemtool_systemtool_type
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemtoolType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SystemtoolType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SystemtoolType'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemtoolType'
          description: ''
  /api/systemtool/{parent_lookup_systemtool_systemtool_type}/systemtool_type/{uuid}/:
    get:
      operationId: api_systemtool_systemtool_type_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_systemtool_systemtool_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this systemtool type.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemtoolType'
          description: ''
    put:
      operationId: api_systemtool_systemtool_type_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_systemtool_systemtool_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this systemtool type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemtoolType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SystemtoolType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SystemtoolType'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemtoolType'
          description: ''
    patch:
      operationId: api_systemtool_systemtool_type_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_systemtool_systemtool_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this systemtool type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSystemtoolType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSystemtoolType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSystemtoolType'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemtoolType'
          description: ''
    delete:
      operationId: api_systemtool_systemtool_type_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_systemtool_systemtool_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this systemtool type.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/systemtool/{parent_lookup_systemtool_vendor_organization}/vendor_organization/:
    get:
      operationId: api_systemtool_vendor_organization_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_systemtool_vendor_organization
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganizationList'
          description: ''
    post:
      operationId: api_systemtool_vendor_organization_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_systemtool_vendor_organization
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Organization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
  /api/systemtool/{parent_lookup_systemtool_vendor_organization}/vendor_organization/{uuid}/:
    get:
      operationId: api_systemtool_vendor_organization_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_systemtool_vendor_organization
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this organization.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
    put:
      operationId: api_systemtool_vendor_organization_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_systemtool_vendor_organization
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this organization.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Organization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
    patch:
      operationId: api_systemtool_vendor_organization_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_systemtool_vendor_organization
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this organization.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganization'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
    delete:
      operationId: api_systemtool_vendor_organization_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_systemtool_vendor_organization
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this organization.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/systemtool/{uuid}/:
    get:
      operationId: api_systemtool_retrieve
      description: This is a test doc
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this systemtool.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Systemtool'
          description: ''
    put:
      operationId: api_systemtool_update
      description: This is a test doc
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this systemtool.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Systemtool'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Systemtool'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Systemtool'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Systemtool'
          description: ''
    patch:
      operationId: api_systemtool_partial_update
      description: This is a test doc
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this systemtool.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSystemtool'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSystemtool'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSystemtool'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Systemtool'
          description: ''
    delete:
      operationId: api_systemtool_destroy
      description: This is a test doc
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this systemtool.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/systemtooltype/:
    get:
      operationId: api_systemtooltype_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSystemtoolTypeList'
          description: ''
    post:
      operationId: api_systemtooltype_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemtoolType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SystemtoolType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SystemtoolType'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemtoolType'
          description: ''
  /api/systemtooltype/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_systemtooltype_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_systemtooltype_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/systemtooltype/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_systemtooltype_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_systemtooltype_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_systemtooltype_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_systemtooltype_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/systemtooltype/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_systemtooltype_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_systemtooltype_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/systemtooltype/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_systemtooltype_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_systemtooltype_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_systemtooltype_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_systemtooltype_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/systemtooltype/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_systemtooltype_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_systemtooltype_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/systemtooltype/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_systemtooltype_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_systemtooltype_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_systemtooltype_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_systemtooltype_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/systemtooltype/{uuid}/:
    get:
      operationId: api_systemtooltype_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this systemtool type.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemtoolType'
          description: ''
    put:
      operationId: api_systemtooltype_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this systemtool type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemtoolType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SystemtoolType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SystemtoolType'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemtoolType'
          description: ''
    patch:
      operationId: api_systemtooltype_partial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this systemtool type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSystemtoolType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSystemtoolType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSystemtoolType'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemtoolType'
          description: ''
    delete:
      operationId: api_systemtooltype_destroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this systemtool type.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/tag/:
    get:
      operationId: api_tag_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagList'
          description: ''
    post:
      operationId: api_tag_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tag'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
  /api/tag/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_tag_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_tag_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/tag/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_tag_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_tag_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_tag_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_tag_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/tag/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_tag_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_tag_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/tag/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_tag_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_tag_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_tag_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_tag_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/tag/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_tag_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_tag_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/tag/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_tag_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_tag_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_tag_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_tag_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/tag/{parent_lookup_tag_actor}/actor/:
    get:
      operationId: api_tag_actor_list
      description: Documentation for actor
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_tag_actor
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActorList'
          description: ''
    post:
      operationId: api_tag_actor_create
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_tag_actor
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
  /api/tag/{parent_lookup_tag_actor}/actor/{uuid}/:
    get:
      operationId: api_tag_actor_retrieve
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_tag_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    put:
      operationId: api_tag_actor_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_tag_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    patch:
      operationId: api_tag_actor_partial_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_tag_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    delete:
      operationId: api_tag_actor_destroy
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_tag_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/tag/{parent_lookup_tag_tag_type}/tag_type/:
    get:
      operationId: api_tag_tag_type_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_tag_tag_type
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagTypeList'
          description: ''
    post:
      operationId: api_tag_tag_type_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_tag_tag_type
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagType'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagType'
          description: ''
  /api/tag/{parent_lookup_tag_tag_type}/tag_type/{uuid}/:
    get:
      operationId: api_tag_tag_type_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_tag_tag_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag type.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagType'
          description: ''
    put:
      operationId: api_tag_tag_type_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_tag_tag_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagType'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagType'
          description: ''
    patch:
      operationId: api_tag_tag_type_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_tag_tag_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagType'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagType'
          description: ''
    delete:
      operationId: api_tag_tag_type_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_tag_tag_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag type.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/tag/{uuid}/:
    get:
      operationId: api_tag_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    put:
      operationId: api_tag_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tag'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    patch:
      operationId: api_tag_partial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTag'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    delete:
      operationId: api_tag_destroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/tagassign/:
    get:
      operationId: api_tagassign_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_tagassign_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/tagassign/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_tagassign_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_tagassign_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/tagassign/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_tagassign_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_tagassign_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_tagassign_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_tagassign_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/tagassign/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_tagassign_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_tagassign_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/tagassign/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_tagassign_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_tagassign_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_tagassign_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_tagassign_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/tagassign/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_tagassign_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_tagassign_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/tagassign/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_tagassign_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_tagassign_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_tagassign_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_tagassign_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/tagassign/{parent_lookup_tagassign_tag}/tag/:
    get:
      operationId: api_tagassign_tag_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_tagassign_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagList'
          description: ''
    post:
      operationId: api_tagassign_tag_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_tagassign_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tag'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
  /api/tagassign/{parent_lookup_tagassign_tag}/tag/{uuid}/:
    get:
      operationId: api_tagassign_tag_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_tagassign_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    put:
      operationId: api_tagassign_tag_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_tagassign_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tag'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    patch:
      operationId: api_tagassign_tag_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_tagassign_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTag'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    delete:
      operationId: api_tagassign_tag_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_tagassign_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/tagassign/{uuid}/:
    get:
      operationId: api_tagassign_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_tagassign_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_tagassign_partial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_tagassign_destroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/tagtype/:
    get:
      operationId: api_tagtype_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagTypeList'
          description: ''
    post:
      operationId: api_tagtype_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagType'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagType'
          description: ''
  /api/tagtype/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_tagtype_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_tagtype_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/tagtype/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_tagtype_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_tagtype_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_tagtype_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_tagtype_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/tagtype/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_tagtype_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_tagtype_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/tagtype/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_tagtype_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_tagtype_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_tagtype_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_tagtype_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/tagtype/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_tagtype_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_tagtype_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/tagtype/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_tagtype_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_tagtype_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_tagtype_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_tagtype_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/tagtype/{uuid}/:
    get:
      operationId: api_tagtype_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag type.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagType'
          description: ''
    put:
      operationId: api_tagtype_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagType'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagType'
          description: ''
    patch:
      operationId: api_tagtype_partial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagType'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagType'
          description: ''
    delete:
      operationId: api_tagtype_destroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag type.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/typedef/:
    get:
      operationId: api_typedef_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTypeDefList'
          description: ''
    post:
      operationId: api_typedef_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypeDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TypeDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TypeDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
  /api/typedef/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_typedef_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_typedef_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/typedef/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_typedef_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_typedef_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_typedef_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_typedef_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/typedef/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_typedef_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_typedef_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/typedef/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_typedef_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_typedef_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_typedef_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_typedef_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/typedef/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_typedef_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_typedef_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/typedef/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_typedef_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_typedef_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_typedef_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_typedef_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/typedef/{uuid}/:
    get:
      operationId: api_typedef_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
    put:
      operationId: api_typedef_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypeDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TypeDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TypeDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
    patch:
      operationId: api_typedef_partial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTypeDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTypeDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTypeDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
    delete:
      operationId: api_typedef_destroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/udfdef/:
    get:
      operationId: api_udfdef_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUdfDefList'
          description: ''
    post:
      operationId: api_udfdef_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UdfDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UdfDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UdfDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UdfDef'
          description: ''
  /api/udfdef/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_udfdef_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_udfdef_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/udfdef/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_udfdef_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_udfdef_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_udfdef_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_udfdef_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/udfdef/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_udfdef_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_udfdef_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/udfdef/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_udfdef_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_udfdef_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_udfdef_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_udfdef_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/udfdef/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_udfdef_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_udfdef_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/udfdef/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_udfdef_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_udfdef_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_udfdef_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_udfdef_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/udfdef/{parent_lookup_udfdef_val_type}/val_type/:
    get:
      operationId: api_udfdef_val_type_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_udfdef_val_type
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTypeDefList'
          description: ''
    post:
      operationId: api_udfdef_val_type_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_udfdef_val_type
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypeDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TypeDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TypeDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
  /api/udfdef/{parent_lookup_udfdef_val_type}/val_type/{uuid}/:
    get:
      operationId: api_udfdef_val_type_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_udfdef_val_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
    put:
      operationId: api_udfdef_val_type_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_udfdef_val_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypeDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TypeDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TypeDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
    patch:
      operationId: api_udfdef_val_type_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_udfdef_val_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTypeDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTypeDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTypeDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDef'
          description: ''
    delete:
      operationId: api_udfdef_val_type_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_udfdef_val_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this type def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/udfdef/{uuid}/:
    get:
      operationId: api_udfdef_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this udf def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UdfDef'
          description: ''
    put:
      operationId: api_udfdef_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this udf def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UdfDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UdfDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UdfDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UdfDef'
          description: ''
    patch:
      operationId: api_udfdef_partial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this udf def.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUdfDef'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUdfDef'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUdfDef'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UdfDef'
          description: ''
    delete:
      operationId: api_udfdef_destroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this udf def.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/workflow/:
    get:
      operationId: api_workflow_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWorkflowList'
          description: ''
    post:
      operationId: api_workflow_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workflow'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Workflow'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Workflow'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
          description: ''
  /api/workflow/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_workflow_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_workflow_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/workflow/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_workflow_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_workflow_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_workflow_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_workflow_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/workflow/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_workflow_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_workflow_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/workflow/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_workflow_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_workflow_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_workflow_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_workflow_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/workflow/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_workflow_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_workflow_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/workflow/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_workflow_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_workflow_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_workflow_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_workflow_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/workflow/{parent_lookup_workflow_actor}/actor/:
    get:
      operationId: api_workflow_actor_list
      description: Documentation for actor
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_workflow_actor
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActorList'
          description: ''
    post:
      operationId: api_workflow_actor_create
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_workflow_actor
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
  /api/workflow/{parent_lookup_workflow_actor}/actor/{uuid}/:
    get:
      operationId: api_workflow_actor_retrieve
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_workflow_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    put:
      operationId: api_workflow_actor_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_workflow_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Actor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Actor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    patch:
      operationId: api_workflow_actor_partial_update
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_workflow_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActor'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
          description: ''
    delete:
      operationId: api_workflow_actor_destroy
      description: Documentation for actor
      parameters:
      - in: path
        name: parent_lookup_workflow_actor
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this actor.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/workflow/{parent_lookup_workflow_parent}/parent/:
    get:
      operationId: api_workflow_parent_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_workflow_parent
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWorkflowList'
          description: ''
    post:
      operationId: api_workflow_parent_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_workflow_parent
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workflow'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Workflow'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Workflow'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
          description: ''
  /api/workflow/{parent_lookup_workflow_parent}/parent/{uuid}/:
    get:
      operationId: api_workflow_parent_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_workflow_parent
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
          description: ''
    put:
      operationId: api_workflow_parent_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_workflow_parent
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workflow'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Workflow'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Workflow'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
          description: ''
    patch:
      operationId: api_workflow_parent_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_workflow_parent
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWorkflow'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWorkflow'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWorkflow'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
          description: ''
    delete:
      operationId: api_workflow_parent_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_workflow_parent
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/workflow/{parent_lookup_workflow_status}/status/:
    get:
      operationId: api_workflow_status_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_workflow_status
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStatusList'
          description: ''
    post:
      operationId: api_workflow_status_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_workflow_status
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
  /api/workflow/{parent_lookup_workflow_status}/status/{uuid}/:
    get:
      operationId: api_workflow_status_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_workflow_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    put:
      operationId: api_workflow_status_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_workflow_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    patch:
      operationId: api_workflow_status_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_workflow_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    delete:
      operationId: api_workflow_status_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_workflow_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/workflow/{parent_lookup_workflow_workflow_type}/workflow_type/:
    get:
      operationId: api_workflow_workflow_type_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_workflow_workflow_type
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWorkflowTypeList'
          description: ''
    post:
      operationId: api_workflow_workflow_type_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_workflow_workflow_type
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkflowType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkflowType'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowType'
          description: ''
  /api/workflow/{parent_lookup_workflow_workflow_type}/workflow_type/{uuid}/:
    get:
      operationId: api_workflow_workflow_type_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_workflow_workflow_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow type.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowType'
          description: ''
    put:
      operationId: api_workflow_workflow_type_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_workflow_workflow_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkflowType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkflowType'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowType'
          description: ''
    patch:
      operationId: api_workflow_workflow_type_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_workflow_workflow_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWorkflowType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWorkflowType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWorkflowType'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowType'
          description: ''
    delete:
      operationId: api_workflow_workflow_type_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_workflow_workflow_type
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow type.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/workflow/{uuid}/:
    get:
      operationId: api_workflow_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
          description: ''
    put:
      operationId: api_workflow_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workflow'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Workflow'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Workflow'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
          description: ''
    patch:
      operationId: api_workflow_partial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWorkflow'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWorkflow'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWorkflow'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
          description: ''
    delete:
      operationId: api_workflow_destroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/workflowobject/:
    get:
      operationId: api_workflowobject_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWorkflowObjectList'
          description: ''
    post:
      operationId: api_workflowobject_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowObject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkflowObject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkflowObject'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowObject'
          description: ''
  /api/workflowobject/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_workflowobject_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_workflowobject_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/workflowobject/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_workflowobject_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_workflowobject_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_workflowobject_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_workflowobject_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/workflowobject/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_workflowobject_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_workflowobject_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/workflowobject/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_workflowobject_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_workflowobject_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_workflowobject_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_workflowobject_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/workflowobject/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_workflowobject_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_workflowobject_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/workflowobject/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_workflowobject_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_workflowobject_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_workflowobject_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_workflowobject_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/workflowobject/{parent_lookup_workflowobject_action}/action/:
    get:
      operationId: api_workflowobject_action_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_workflowobject_action
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActionList'
          description: ''
    post:
      operationId: api_workflowobject_action_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_workflowobject_action
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Action'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Action'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Action'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Action'
          description: ''
  /api/workflowobject/{parent_lookup_workflowobject_action}/action/{action_uuid}/:
    get:
      operationId: api_workflowobject_action_retrieve
      description: ''
      parameters:
      - in: path
        name: action_uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this action.
        required: true
      - in: path
        name: parent_lookup_workflowobject_action
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Action'
          description: ''
    put:
      operationId: api_workflowobject_action_update
      description: ''
      parameters:
      - in: path
        name: action_uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this action.
        required: true
      - in: path
        name: parent_lookup_workflowobject_action
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Action'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Action'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Action'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Action'
          description: ''
    patch:
      operationId: api_workflowobject_action_partial_update
      description: ''
      parameters:
      - in: path
        name: action_uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this action.
        required: true
      - in: path
        name: parent_lookup_workflowobject_action
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAction'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Action'
          description: ''
    delete:
      operationId: api_workflowobject_action_destroy
      description: ''
      parameters:
      - in: path
        name: action_uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this action.
        required: true
      - in: path
        name: parent_lookup_workflowobject_action
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/workflowobject/{parent_lookup_workflowobject_condition}/condition/:
    get:
      operationId: api_workflowobject_condition_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_workflowobject_condition
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedConditionList'
          description: ''
    post:
      operationId: api_workflowobject_condition_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_workflowobject_condition
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Condition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Condition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Condition'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Condition'
          description: ''
  /api/workflowobject/{parent_lookup_workflowobject_condition}/condition/{uuid}/:
    get:
      operationId: api_workflowobject_condition_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_workflowobject_condition
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this condition.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Condition'
          description: ''
    put:
      operationId: api_workflowobject_condition_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_workflowobject_condition
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this condition.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Condition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Condition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Condition'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Condition'
          description: ''
    patch:
      operationId: api_workflowobject_condition_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_workflowobject_condition
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this condition.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCondition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCondition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCondition'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Condition'
          description: ''
    delete:
      operationId: api_workflowobject_condition_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_workflowobject_condition
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this condition.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/workflowobject/{uuid}/:
    get:
      operationId: api_workflowobject_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow object.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowObject'
          description: ''
    put:
      operationId: api_workflowobject_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow object.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowObject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkflowObject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkflowObject'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowObject'
          description: ''
    patch:
      operationId: api_workflowobject_partial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow object.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWorkflowObject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWorkflowObject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWorkflowObject'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowObject'
          description: ''
    delete:
      operationId: api_workflowobject_destroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow object.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/workflowstep/:
    get:
      operationId: api_workflowstep_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWorkflowStepList'
          description: ''
    post:
      operationId: api_workflowstep_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowStep'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkflowStep'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkflowStep'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowStep'
          description: ''
  /api/workflowstep/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_workflowstep_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_workflowstep_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/workflowstep/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_workflowstep_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_workflowstep_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_workflowstep_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_workflowstep_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/workflowstep/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_workflowstep_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_workflowstep_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/workflowstep/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_workflowstep_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_workflowstep_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_workflowstep_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_workflowstep_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/workflowstep/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_workflowstep_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_workflowstep_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/workflowstep/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_workflowstep_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_workflowstep_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_workflowstep_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_workflowstep_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/workflowstep/{parent_lookup_workflowstep_parent}/parent/:
    get:
      operationId: api_workflowstep_parent_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_workflowstep_parent
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWorkflowStepList'
          description: ''
    post:
      operationId: api_workflowstep_parent_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_workflowstep_parent
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowStep'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkflowStep'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkflowStep'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowStep'
          description: ''
  /api/workflowstep/{parent_lookup_workflowstep_parent}/parent/{uuid}/:
    get:
      operationId: api_workflowstep_parent_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_workflowstep_parent
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow step.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowStep'
          description: ''
    put:
      operationId: api_workflowstep_parent_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_workflowstep_parent
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow step.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowStep'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkflowStep'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkflowStep'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowStep'
          description: ''
    patch:
      operationId: api_workflowstep_parent_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_workflowstep_parent
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow step.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWorkflowStep'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWorkflowStep'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWorkflowStep'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowStep'
          description: ''
    delete:
      operationId: api_workflowstep_parent_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_workflowstep_parent
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow step.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/workflowstep/{parent_lookup_workflowstep_status}/status/:
    get:
      operationId: api_workflowstep_status_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_workflowstep_status
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStatusList'
          description: ''
    post:
      operationId: api_workflowstep_status_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_workflowstep_status
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
  /api/workflowstep/{parent_lookup_workflowstep_status}/status/{uuid}/:
    get:
      operationId: api_workflowstep_status_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_workflowstep_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    put:
      operationId: api_workflowstep_status_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_workflowstep_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    patch:
      operationId: api_workflowstep_status_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_workflowstep_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    delete:
      operationId: api_workflowstep_status_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_workflowstep_status
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this status.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/workflowstep/{parent_lookup_workflowstep_workflow_object}/workflow_object/:
    get:
      operationId: api_workflowstep_workflow_object_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_workflowstep_workflow_object
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWorkflowObjectList'
          description: ''
    post:
      operationId: api_workflowstep_workflow_object_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_workflowstep_workflow_object
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowObject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkflowObject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkflowObject'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowObject'
          description: ''
  /api/workflowstep/{parent_lookup_workflowstep_workflow_object}/workflow_object/{uuid}/:
    get:
      operationId: api_workflowstep_workflow_object_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_workflowstep_workflow_object
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow object.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowObject'
          description: ''
    put:
      operationId: api_workflowstep_workflow_object_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_workflowstep_workflow_object
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow object.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowObject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkflowObject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkflowObject'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowObject'
          description: ''
    patch:
      operationId: api_workflowstep_workflow_object_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_workflowstep_workflow_object
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow object.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWorkflowObject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWorkflowObject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWorkflowObject'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowObject'
          description: ''
    delete:
      operationId: api_workflowstep_workflow_object_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_workflowstep_workflow_object
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow object.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/workflowstep/{parent_lookup_workflowstep_workflow}/workflow/:
    get:
      operationId: api_workflowstep_workflow_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_workflowstep_workflow
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWorkflowList'
          description: ''
    post:
      operationId: api_workflowstep_workflow_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_workflowstep_workflow
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workflow'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Workflow'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Workflow'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
          description: ''
  /api/workflowstep/{parent_lookup_workflowstep_workflow}/workflow/{uuid}/:
    get:
      operationId: api_workflowstep_workflow_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_workflowstep_workflow
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
          description: ''
    put:
      operationId: api_workflowstep_workflow_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_workflowstep_workflow
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workflow'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Workflow'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Workflow'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
          description: ''
    patch:
      operationId: api_workflowstep_workflow_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_workflowstep_workflow
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWorkflow'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWorkflow'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWorkflow'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
          description: ''
    delete:
      operationId: api_workflowstep_workflow_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_workflowstep_workflow
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/workflowstep/{uuid}/:
    get:
      operationId: api_workflowstep_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow step.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowStep'
          description: ''
    put:
      operationId: api_workflowstep_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow step.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowStep'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkflowStep'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkflowStep'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowStep'
          description: ''
    patch:
      operationId: api_workflowstep_partial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow step.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWorkflowStep'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWorkflowStep'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWorkflowStep'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowStep'
          description: ''
    delete:
      operationId: api_workflowstep_destroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow step.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/workflowtype/:
    get:
      operationId: api_workflowtype_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWorkflowTypeList'
          description: ''
    post:
      operationId: api_workflowtype_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkflowType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkflowType'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowType'
          description: ''
  /api/workflowtype/{parent_lookup_ref_edocument_uuid}/edocs/:
    get:
      operationId: api_workflowtype_edocs_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEdocumentList'
          description: ''
    post:
      operationId: api_workflowtype_edocs_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
  /api/workflowtype/{parent_lookup_ref_edocument_uuid}/edocs/{uuid}/:
    get:
      operationId: api_workflowtype_edocs_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    put:
      operationId: api_workflowtype_edocs_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edocument'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    patch:
      operationId: api_workflowtype_edocs_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdocument'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edocument'
          description: ''
    delete:
      operationId: api_workflowtype_edocs_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_edocument_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this edocument.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/workflowtype/{parent_lookup_ref_note_uuid}/notes/:
    get:
      operationId: api_workflowtype_notes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: api_workflowtype_notes_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/workflowtype/{parent_lookup_ref_note_uuid}/notes/{uuid}/:
    get:
      operationId: api_workflowtype_notes_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_workflowtype_notes_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_workflowtype_notes_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_workflowtype_notes_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_note_uuid
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this note.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/workflowtype/{parent_lookup_ref_tag}/tags/:
    get:
      operationId: api_workflowtype_tags_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagAssignList'
          description: ''
    post:
      operationId: api_workflowtype_tags_create
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
  /api/workflowtype/{parent_lookup_ref_tag}/tags/{uuid}/:
    get:
      operationId: api_workflowtype_tags_retrieve
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    put:
      operationId: api_workflowtype_tags_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    patch:
      operationId: api_workflowtype_tags_partial_update
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagAssign'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssign'
          description: ''
    delete:
      operationId: api_workflowtype_tags_destroy
      description: ''
      parameters:
      - in: path
        name: parent_lookup_ref_tag
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag assign.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/workflowtype/{uuid}/:
    get:
      operationId: api_workflowtype_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow type.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowType'
          description: ''
    put:
      operationId: api_workflowtype_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkflowType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkflowType'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowType'
          description: ''
    patch:
      operationId: api_workflowtype_partial_update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWorkflowType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWorkflowType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWorkflowType'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowType'
          description: ''
    delete:
      operationId: api_workflowtype_destroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow type.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Action:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        parameter:
          type: array
          items:
            $ref: '#/components/schemas/ActionParameter'
          readOnly: true
        description:
          type: string
          nullable: true
          maxLength: 255
        actor_description:
          type: string
          readOnly: true
        status_description:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        action_def:
          type: string
          format: uri
          nullable: true
        actor:
          type: string
          format: uri
          readOnly: true
        status:
          type: string
          format: uri
          nullable: true
      required:
      - actor
      - actor_description
      - add_date
      - mod_date
      - parameter
      - status_description
      - url
    ActionDef:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        parameter_def:
          type: array
          items:
            $ref: '#/components/schemas/ParameterDef'
          readOnly: true
        description:
          type: string
          readOnly: true
        actor_description:
          type: string
          readOnly: true
        status_description:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        actor:
          type: string
          format: uri
          readOnly: true
        status:
          type: string
          format: uri
          readOnly: true
      required:
      - actor
      - actor_description
      - add_date
      - description
      - mod_date
      - parameter_def
      - status
      - status_description
      - url
    ActionParameter:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        parameter_def_description:
          type: string
          readOnly: true
        parameter_val:
          type: object
          additionalProperties: {}
          nullable: true
        actor_description:
          type: string
          readOnly: true
        status_description:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        action:
          type: string
          format: uri
          readOnly: true
        parameter_def:
          type: string
          format: uri
          readOnly: true
        actor:
          type: string
          format: uri
          readOnly: true
        status:
          type: string
          format: uri
          readOnly: true
      required:
      - action
      - actor
      - actor_description
      - add_date
      - edocs
      - mod_date
      - notes
      - parameter_def
      - parameter_def_description
      - status
      - status_description
      - tags
      - url
    Actor:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        description:
          type: string
          nullable: true
          maxLength: 255
        status_description:
          type: string
          nullable: true
          maxLength: 255
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        org_full_name:
          type: string
          nullable: true
          maxLength: 255
        org_short_name:
          type: string
          nullable: true
          maxLength: 255
        person_last_name:
          type: string
          nullable: true
          maxLength: 255
        person_first_name:
          type: string
          nullable: true
          maxLength: 255
        person_last_first:
          type: string
          nullable: true
          maxLength: 255
        person_org:
          type: string
          nullable: true
          maxLength: 255
        systemtool_name:
          type: string
          nullable: true
          maxLength: 255
        systemtool_description:
          type: string
          nullable: true
          maxLength: 255
        systemtool_type:
          type: string
          nullable: true
          maxLength: 255
        systemtool_vendor:
          type: string
          nullable: true
          maxLength: 255
        systemtool_model:
          type: string
          nullable: true
          maxLength: 255
        systemtool_serial:
          type: string
          nullable: true
          maxLength: 255
        systemtool_version:
          type: string
          nullable: true
          maxLength: 255
        organization:
          type: string
          format: uri
          nullable: true
        person:
          type: string
          format: uri
          nullable: true
        systemtool:
          type: string
          format: uri
          nullable: true
        status:
          type: string
          format: uri
          nullable: true
      required:
      - add_date
      - edocs
      - mod_date
      - notes
      - tags
      - url
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - password
      - token
      - username
    BillOfMaterials:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        description:
          type: string
          nullable: true
          maxLength: 255
        experiment_description:
          type: string
          nullable: true
          maxLength: 255
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        experiment:
          type: string
          format: uri
          nullable: true
        actor:
          type: string
          format: uri
          readOnly: true
        status:
          type: string
          format: uri
          readOnly: true
      required:
      - actor
      - add_date
      - edocs
      - mod_date
      - notes
      - status
      - tags
      - url
    BomMaterial:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        description:
          type: string
          nullable: true
          maxLength: 255
        bom_description:
          type: string
          nullable: true
          maxLength: 255
        bom_material_description:
          type: string
          nullable: true
          maxLength: 255
        alloc_amt_val:
          type: object
          additionalProperties: {}
          nullable: true
        used_amt_val:
          type: object
          additionalProperties: {}
          nullable: true
        putback_amt_val:
          type: object
          additionalProperties: {}
          nullable: true
        experiment_uuid:
          type: string
          nullable: true
          maxLength: 255
        experiment_description:
          type: string
          nullable: true
          maxLength: 255
        bom:
          type: string
          format: uri
          nullable: true
        inventory:
          type: string
          format: uri
          nullable: true
        material_composite:
          type: string
          format: uri
          nullable: true
      required:
      - edocs
      - notes
      - tags
      - url
    Calculation:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        in_val:
          type: object
          additionalProperties: {}
          nullable: true
        in_val_value:
          type: string
          readOnly: true
        in_val_unit:
          type: string
          readOnly: true
        in_opt_val:
          type: object
          additionalProperties: {}
          nullable: true
        in_opt_val_value:
          type: string
          readOnly: true
        in_opt_val_unit:
          type: string
          readOnly: true
        out_val:
          type: object
          additionalProperties: {}
          nullable: true
        out_val_value:
          type: string
          readOnly: true
        out_val_unit:
          type: string
          readOnly: true
        calculation_alias_name:
          type: string
          nullable: true
          maxLength: 255
        status_description:
          type: string
          nullable: true
          maxLength: 255
        short_name:
          type: string
          nullable: true
          maxLength: 255
        calc_definition:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
          maxLength: 1023
        systemtool_name:
          type: string
          nullable: true
          maxLength: 1023
        systemtool_type_description:
          type: string
          nullable: true
          maxLength: 1023
        systemtool_vendor_organization:
          type: string
          nullable: true
          maxLength: 1023
        systemtool_version:
          type: string
          nullable: true
          maxLength: 1023
        actor_description:
          type: string
          nullable: true
          maxLength: 1023
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        in_val_type:
          type: string
          format: uri
          readOnly: true
        in_val_edocument:
          type: string
          format: uri
          readOnly: true
        in_opt_val_type:
          type: string
          format: uri
          readOnly: true
        in_opt_val_edocument:
          type: string
          format: uri
          readOnly: true
        out_val_type:
          type: string
          format: uri
          readOnly: true
        out_val_edocument:
          type: string
          format: uri
          readOnly: true
        status:
          type: string
          format: uri
        calculation_def:
          type: string
          format: uri
          nullable: true
        systemtool:
          type: string
          format: uri
        actor:
          type: string
          format: uri
          nullable: true
      required:
      - add_date
      - edocs
      - in_opt_val_edocument
      - in_opt_val_type
      - in_opt_val_unit
      - in_opt_val_value
      - in_val_edocument
      - in_val_type
      - in_val_unit
      - in_val_value
      - mod_date
      - notes
      - out_val_edocument
      - out_val_type
      - out_val_unit
      - out_val_value
      - status
      - systemtool
      - tags
      - url
    CalculationDef:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        short_name:
          type: string
          nullable: true
          maxLength: 255
        calc_definition:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
          maxLength: 1023
        in_type_description:
          type: string
          nullable: true
          maxLength: 255
        out_type_description:
          type: string
          nullable: true
          maxLength: 255
        systemtool_name:
          type: string
          nullable: true
          maxLength: 255
        systemtool_type_description:
          type: string
          nullable: true
          maxLength: 255
        systemtool_vendor_organization:
          type: string
          nullable: true
          maxLength: 255
        systemtool_version:
          type: string
          nullable: true
          maxLength: 255
        actor_description:
          type: string
          nullable: true
          maxLength: 255
        in_type:
          type: string
          format: uri
        out_type:
          type: string
          format: uri
          nullable: true
        systemtool:
          type: string
          format: uri
        actor:
          type: string
          format: uri
          nullable: true
      required:
      - edocs
      - in_type
      - notes
      - systemtool
      - tags
      - url
    Condition:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        condition_description:
          type: string
          readOnly: true
        calculation_description:
          type: string
          readOnly: true
        in_val:
          type: string
          readOnly: true
        out_val:
          type: string
          readOnly: true
        actor_description:
          type: string
          readOnly: true
        status_description:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        condition_def:
          type: string
          format: uri
        actor:
          type: string
          format: uri
          readOnly: true
        status:
          type: string
          format: uri
          readOnly: true
      required:
      - actor
      - actor_description
      - add_date
      - calculation_description
      - condition_def
      - condition_description
      - edocs
      - in_val
      - mod_date
      - notes
      - out_val
      - status
      - status_description
      - tags
      - url
    ConditionDef:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        actor_description:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        actor:
          type: string
          format: uri
          readOnly: true
        status:
          type: string
          format: uri
          readOnly: true
      required:
      - actor
      - actor_description
      - add_date
      - description
      - edocs
      - mod_date
      - notes
      - status
      - tags
      - url
    Edocument:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        title:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
          maxLength: 255
        filename:
          type: string
          readOnly: true
        source:
          type: string
          nullable: true
          maxLength: 255
        edoc_type:
          type: string
          nullable: true
          maxLength: 255
        download_link:
          type: string
          readOnly: true
        actor:
          type: string
          format: uri
          nullable: true
        actor_description:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        edocument:
          type: string
          format: uri
          writeOnly: true
        ref_edocument_uuid:
          type: string
          format: uuid
          readOnly: true
      required:
      - actor_description
      - download_link
      - edocument
      - filename
      - notes
      - ref_edocument_uuid
      - tags
      - url
    Experiment:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        ref_uid:
          type: string
          maxLength: 255
        description:
          type: string
          maxLength: 255
        owner_description:
          type: string
          maxLength: 255
        operator_description:
          type: string
          maxLength: 255
        lab_description:
          type: string
          maxLength: 255
        status_description:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        parent:
          type: string
          format: uri
          nullable: true
        owner:
          type: string
          format: uri
          nullable: true
        operator_uuid:
          type: string
          format: uri
          nullable: true
        lab:
          type: string
          format: uri
          nullable: true
        status:
          type: string
          format: uri
          nullable: true
      required:
      - add_date
      - description
      - edocs
      - lab_description
      - mod_date
      - notes
      - operator_description
      - owner_description
      - ref_uid
      - status_description
      - tags
      - url
    ExperimentMeasureCalculation:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        uid:
          type: string
          maxLength: 255
        row_to_json:
          type: object
          additionalProperties: {}
      required:
      - row_to_json
      - uid
    ExperimentWorkflow:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        experiment_ref_uid:
          type: string
          maxLength: 255
        experiment_description:
          type: string
          maxLength: 255
        experiment_workflow_seq:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        experiment:
          type: string
          format: uri
          nullable: true
        workflow:
          type: string
          format: uri
          nullable: true
        workflow_type_uuid:
          type: string
          format: uri
          nullable: true
      required:
      - edocs
      - experiment_description
      - experiment_ref_uid
      - experiment_workflow_seq
      - notes
      - tags
      - url
    Inventory:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        description:
          type: string
          nullable: true
          maxLength: 255
        part_no:
          type: string
          nullable: true
          maxLength: 255
        onhand_amt:
          type: object
          additionalProperties: {}
          nullable: true
        expiration_date:
          type: string
          format: date-time
          nullable: true
        location:
          type: string
          nullable: true
          maxLength: 255
        status_description:
          type: string
          readOnly: true
        material_description:
          type: string
          readOnly: true
        actor_description:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        status:
          type: string
          format: uri
          nullable: true
        material:
          type: string
          format: uri
        actor:
          type: string
          format: uri
          nullable: true
      required:
      - actor_description
      - add_date
      - edocs
      - material
      - material_description
      - mod_date
      - notes
      - status_description
      - tags
      - url
    InventoryMaterial:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        inventory_description:
          type: string
          nullable: true
          maxLength: 255
        inventory_part_no:
          type: string
          nullable: true
          maxLength: 255
        inventory_onhand_amt:
          type: string
          nullable: true
          maxLength: 255
        inventory_expiration_date:
          type: string
          format: date-time
          nullable: true
        inventory_add_date:
          type: string
          format: date-time
        inventory_location:
          type: string
          nullable: true
          maxLength: 255
        inventory_status_description:
          type: string
          nullable: true
          maxLength: 255
        actor_description:
          type: string
          nullable: true
          maxLength: 255
        org_full_name:
          type: string
          nullable: true
          maxLength: 255
        material_status_description:
          type: string
          nullable: true
          maxLength: 255
        material_add_date:
          type: string
          format: date-time
        material_name:
          type: string
          nullable: true
          maxLength: 255
        material_abbreviation:
          type: string
          nullable: true
          maxLength: 255
        material_inchi:
          type: string
          nullable: true
          maxLength: 255
        material_inchikey:
          type: string
          nullable: true
          maxLength: 255
        material_molecular_formula:
          type: string
          nullable: true
          maxLength: 255
        material_smiles:
          type: string
          nullable: true
          maxLength: 255
        inventory_status:
          type: string
          format: uri
          nullable: true
        actor:
          type: string
          format: uri
          nullable: true
        material:
          type: string
          format: uri
          nullable: true
        material_status:
          type: string
          format: uri
          nullable: true
      required:
      - edocs
      - inventory_add_date
      - material_add_date
      - notes
      - tags
      - url
    Material:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        description:
          type: string
          nullable: true
          maxLength: 255
        consumable:
          type: string
          readOnly: true
        composite_flg:
          type: string
          readOnly: true
        status_description:
          type: string
          nullable: true
          maxLength: 255
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        status:
          type: string
          format: uri
          nullable: true
        actor:
          type: string
          format: uri
          nullable: true
      required:
      - add_date
      - composite_flg
      - consumable
      - edocs
      - mod_date
      - notes
      - tags
      - url
    MaterialCalculationJson:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        material_status:
          type: string
          format: uuid
        material_status_description:
          type: string
          nullable: true
          maxLength: 255
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        abbreviation:
          type: string
          nullable: true
          maxLength: 255
        chemical_name:
          type: string
          nullable: true
          maxLength: 255
        inchi:
          type: string
          nullable: true
          maxLength: 255
        inchikey:
          type: string
          nullable: true
          maxLength: 255
        molecular_formula:
          type: string
          nullable: true
          maxLength: 255
        smiles:
          type: string
          nullable: true
          maxLength: 255
        calculation_json:
          type: object
          additionalProperties: {}
      required:
      - add_date
      - calculation_json
      - edocs
      - material_status
      - mod_date
      - notes
      - tags
      - url
    MaterialComposite:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        composite_description:
          type: string
          nullable: true
          maxLength: 255
        composite_flg:
          type: string
          readOnly: true
        component_description:
          type: string
          nullable: true
          maxLength: 255
        addressable:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        composite:
          type: string
          format: uri
          nullable: true
        component:
          type: string
          format: uri
          nullable: true
        actor:
          type: string
          format: uri
          readOnly: true
        status:
          type: string
          format: uri
          readOnly: true
      required:
      - actor
      - add_date
      - addressable
      - composite_flg
      - edocs
      - mod_date
      - notes
      - status
      - tags
      - url
    MaterialProperty:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        property_description:
          type: string
          readOnly: true
        property_short_description:
          type: string
          readOnly: true
        value:
          type: object
          additionalProperties: {}
          nullable: true
        actor_description:
          type: string
          readOnly: true
        status_description:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        material:
          type: string
          format: uri
          nullable: true
        property:
          type: string
          format: uri
          readOnly: true
        property_def:
          type: string
          format: uri
          nullable: true
        actor:
          type: string
          format: uri
          readOnly: true
        status:
          type: string
          format: uri
          nullable: true
      required:
      - actor
      - actor_description
      - add_date
      - edocs
      - mod_date
      - notes
      - property
      - property_description
      - property_short_description
      - status_description
      - tags
      - url
    MaterialRefnameDef:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        description:
          type: string
          nullable: true
          maxLength: 255
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
      required:
      - add_date
      - edocs
      - mod_date
      - notes
      - tags
      - url
    MaterialType:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        description:
          type: string
          nullable: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
      required:
      - add_date
      - edocs
      - mod_date
      - notes
      - tags
      - url
    Measure:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        amount:
          type: object
          additionalProperties: {}
        actor_description:
          type: string
          readOnly: true
        status_description:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        measure_type_uuid:
          type: string
          format: uri
          readOnly: true
        ref_measure_uuid:
          type: string
          format: uri
          readOnly: true
        actor_uuid:
          type: string
          format: uri
          readOnly: true
        status_uuid:
          type: string
          format: uri
          readOnly: true
      required:
      - actor_description
      - actor_uuid
      - add_date
      - amount
      - description
      - edocs
      - measure_type_uuid
      - mod_date
      - notes
      - ref_measure_uuid
      - status_description
      - status_uuid
      - tags
      - url
    MeasureType:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        actor_description:
          type: string
          readOnly: true
        status_description:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        actor_uuid:
          type: string
          format: uri
          readOnly: true
        status_uuid:
          type: string
          format: uri
          readOnly: true
      required:
      - actor_description
      - actor_uuid
      - add_date
      - description
      - edocs
      - mod_date
      - notes
      - status_description
      - status_uuid
      - tags
      - url
    Note:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        notetext:
          type: string
          nullable: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        actor_description:
          type: string
          readOnly: true
        ref_note_uuid:
          type: string
          format: uuid
          readOnly: true
        actor:
          type: string
          format: uri
      required:
      - actor
      - actor_description
      - add_date
      - mod_date
      - ref_note_uuid
      - url
    Note_x:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        ref_note:
          type: string
          format: uuid
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        note:
          type: string
          format: uri
          readOnly: true
      required:
      - add_date
      - edocs
      - mod_date
      - note
      - notes
      - ref_note
      - tags
      - url
    Organization:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        description:
          type: string
          maxLength: 255
        full_name:
          type: string
          maxLength: 255
        short_name:
          type: string
          nullable: true
          maxLength: 255
        address1:
          type: string
          nullable: true
          maxLength: 255
        address2:
          type: string
          nullable: true
          maxLength: 255
        city:
          type: string
          nullable: true
          maxLength: 255
        state_province:
          type: string
          nullable: true
          maxLength: 3
        zip:
          type: string
          nullable: true
          maxLength: 255
        country:
          type: string
          nullable: true
          maxLength: 255
        website_url:
          type: string
          nullable: true
          maxLength: 255
        phone:
          type: string
          nullable: true
          maxLength: 255
        parent_org_full_name:
          type: string
          nullable: true
          maxLength: 255
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        parent:
          type: string
          format: uri
          nullable: true
      required:
      - add_date
      - description
      - edocs
      - full_name
      - mod_date
      - notes
      - tags
      - url
    PaginatedActionDefList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ActionDef'
    PaginatedActionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Action'
    PaginatedActionParameterList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ActionParameter'
    PaginatedActorList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Actor'
    PaginatedBillOfMaterialsList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/BillOfMaterials'
    PaginatedBomMaterialList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/BomMaterial'
    PaginatedCalculationDefList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/CalculationDef'
    PaginatedCalculationList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Calculation'
    PaginatedConditionDefList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ConditionDef'
    PaginatedConditionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Condition'
    PaginatedEdocumentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Edocument'
    PaginatedExperimentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Experiment'
    PaginatedExperimentMeasureCalculationList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExperimentMeasureCalculation'
    PaginatedExperimentWorkflowList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExperimentWorkflow'
    PaginatedInventoryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Inventory'
    PaginatedInventoryMaterialList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/InventoryMaterial'
    PaginatedMaterialCalculationJsonList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/MaterialCalculationJson'
    PaginatedMaterialCompositeList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/MaterialComposite'
    PaginatedMaterialList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Material'
    PaginatedMaterialPropertyList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/MaterialProperty'
    PaginatedMaterialRefnameDefList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/MaterialRefnameDef'
    PaginatedMaterialTypeList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/MaterialType'
    PaginatedMeasureList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Measure'
    PaginatedMeasureTypeList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/MeasureType'
    PaginatedNoteList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Note'
    PaginatedNote_xList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Note_x'
    PaginatedOrganizationList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Organization'
    PaginatedParameterDefList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ParameterDef'
    PaginatedParameterList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
    PaginatedPersonList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Person'
    PaginatedPropertyDefList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/PropertyDef'
    PaginatedPropertyList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Property'
    PaginatedStatusList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Status'
    PaginatedSystemtoolList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Systemtool'
    PaginatedSystemtoolTypeList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/SystemtoolType'
    PaginatedTagAssignList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/TagAssign'
    PaginatedTagList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    PaginatedTagTypeList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/TagType'
    PaginatedTypeDefList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/TypeDef'
    PaginatedUdfDefList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/UdfDef'
    PaginatedWorkflowList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Workflow'
    PaginatedWorkflowObjectList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/WorkflowObject'
    PaginatedWorkflowStepList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/WorkflowStep'
    PaginatedWorkflowTypeList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/WorkflowType'
    Parameter:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        parameter_def_description:
          type: string
          readOnly: true
        parameter_val:
          type: object
          additionalProperties: {}
          nullable: true
        actor_description:
          type: string
          readOnly: true
        status_description:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        parameter_def:
          type: string
          format: uri
          readOnly: true
        actor:
          type: string
          format: uri
          readOnly: true
        status:
          type: string
          format: uri
          readOnly: true
      required:
      - actor
      - actor_description
      - add_date
      - edocs
      - mod_date
      - notes
      - parameter_def
      - parameter_def_description
      - status
      - status_description
      - tags
      - url
    ParameterDef:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        val_type_description:
          type: string
          readOnly: true
        default_val_val:
          type: string
          readOnly: true
        valunit:
          type: string
          readOnly: true
        default_val:
          type: object
          additionalProperties: {}
          readOnly: true
        required:
          type: string
          readOnly: true
        actor_description:
          type: string
          readOnly: true
        status_description:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        val_type:
          type: string
          format: uri
          nullable: true
        actor:
          type: string
          format: uri
          readOnly: true
        status:
          type: string
          format: uri
          readOnly: true
      required:
      - actor
      - actor_description
      - add_date
      - default_val
      - default_val_val
      - description
      - edocs
      - mod_date
      - notes
      - required
      - status
      - status_description
      - tags
      - url
      - val_type_description
      - valunit
    PatchedAction:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        parameter:
          type: array
          items:
            $ref: '#/components/schemas/ActionParameter'
          readOnly: true
        description:
          type: string
          nullable: true
          maxLength: 255
        actor_description:
          type: string
          readOnly: true
        status_description:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        action_def:
          type: string
          format: uri
          nullable: true
        actor:
          type: string
          format: uri
          readOnly: true
        status:
          type: string
          format: uri
          nullable: true
    PatchedActionDef:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        parameter_def:
          type: array
          items:
            $ref: '#/components/schemas/ParameterDef'
          readOnly: true
        description:
          type: string
          readOnly: true
        actor_description:
          type: string
          readOnly: true
        status_description:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        actor:
          type: string
          format: uri
          readOnly: true
        status:
          type: string
          format: uri
          readOnly: true
    PatchedActionParameter:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        parameter_def_description:
          type: string
          readOnly: true
        parameter_val:
          type: object
          additionalProperties: {}
          nullable: true
        actor_description:
          type: string
          readOnly: true
        status_description:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        action:
          type: string
          format: uri
          readOnly: true
        parameter_def:
          type: string
          format: uri
          readOnly: true
        actor:
          type: string
          format: uri
          readOnly: true
        status:
          type: string
          format: uri
          readOnly: true
    PatchedActor:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        description:
          type: string
          nullable: true
          maxLength: 255
        status_description:
          type: string
          nullable: true
          maxLength: 255
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        org_full_name:
          type: string
          nullable: true
          maxLength: 255
        org_short_name:
          type: string
          nullable: true
          maxLength: 255
        person_last_name:
          type: string
          nullable: true
          maxLength: 255
        person_first_name:
          type: string
          nullable: true
          maxLength: 255
        person_last_first:
          type: string
          nullable: true
          maxLength: 255
        person_org:
          type: string
          nullable: true
          maxLength: 255
        systemtool_name:
          type: string
          nullable: true
          maxLength: 255
        systemtool_description:
          type: string
          nullable: true
          maxLength: 255
        systemtool_type:
          type: string
          nullable: true
          maxLength: 255
        systemtool_vendor:
          type: string
          nullable: true
          maxLength: 255
        systemtool_model:
          type: string
          nullable: true
          maxLength: 255
        systemtool_serial:
          type: string
          nullable: true
          maxLength: 255
        systemtool_version:
          type: string
          nullable: true
          maxLength: 255
        organization:
          type: string
          format: uri
          nullable: true
        person:
          type: string
          format: uri
          nullable: true
        systemtool:
          type: string
          format: uri
          nullable: true
        status:
          type: string
          format: uri
          nullable: true
    PatchedBillOfMaterials:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        description:
          type: string
          nullable: true
          maxLength: 255
        experiment_description:
          type: string
          nullable: true
          maxLength: 255
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        experiment:
          type: string
          format: uri
          nullable: true
        actor:
          type: string
          format: uri
          readOnly: true
        status:
          type: string
          format: uri
          readOnly: true
    PatchedBomMaterial:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        description:
          type: string
          nullable: true
          maxLength: 255
        bom_description:
          type: string
          nullable: true
          maxLength: 255
        bom_material_description:
          type: string
          nullable: true
          maxLength: 255
        alloc_amt_val:
          type: object
          additionalProperties: {}
          nullable: true
        used_amt_val:
          type: object
          additionalProperties: {}
          nullable: true
        putback_amt_val:
          type: object
          additionalProperties: {}
          nullable: true
        experiment_uuid:
          type: string
          nullable: true
          maxLength: 255
        experiment_description:
          type: string
          nullable: true
          maxLength: 255
        bom:
          type: string
          format: uri
          nullable: true
        inventory:
          type: string
          format: uri
          nullable: true
        material_composite:
          type: string
          format: uri
          nullable: true
    PatchedCalculation:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        in_val:
          type: object
          additionalProperties: {}
          nullable: true
        in_val_value:
          type: string
          readOnly: true
        in_val_unit:
          type: string
          readOnly: true
        in_opt_val:
          type: object
          additionalProperties: {}
          nullable: true
        in_opt_val_value:
          type: string
          readOnly: true
        in_opt_val_unit:
          type: string
          readOnly: true
        out_val:
          type: object
          additionalProperties: {}
          nullable: true
        out_val_value:
          type: string
          readOnly: true
        out_val_unit:
          type: string
          readOnly: true
        calculation_alias_name:
          type: string
          nullable: true
          maxLength: 255
        status_description:
          type: string
          nullable: true
          maxLength: 255
        short_name:
          type: string
          nullable: true
          maxLength: 255
        calc_definition:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
          maxLength: 1023
        systemtool_name:
          type: string
          nullable: true
          maxLength: 1023
        systemtool_type_description:
          type: string
          nullable: true
          maxLength: 1023
        systemtool_vendor_organization:
          type: string
          nullable: true
          maxLength: 1023
        systemtool_version:
          type: string
          nullable: true
          maxLength: 1023
        actor_description:
          type: string
          nullable: true
          maxLength: 1023
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        in_val_type:
          type: string
          format: uri
          readOnly: true
        in_val_edocument:
          type: string
          format: uri
          readOnly: true
        in_opt_val_type:
          type: string
          format: uri
          readOnly: true
        in_opt_val_edocument:
          type: string
          format: uri
          readOnly: true
        out_val_type:
          type: string
          format: uri
          readOnly: true
        out_val_edocument:
          type: string
          format: uri
          readOnly: true
        status:
          type: string
          format: uri
        calculation_def:
          type: string
          format: uri
          nullable: true
        systemtool:
          type: string
          format: uri
        actor:
          type: string
          format: uri
          nullable: true
    PatchedCalculationDef:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        short_name:
          type: string
          nullable: true
          maxLength: 255
        calc_definition:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
          maxLength: 1023
        in_type_description:
          type: string
          nullable: true
          maxLength: 255
        out_type_description:
          type: string
          nullable: true
          maxLength: 255
        systemtool_name:
          type: string
          nullable: true
          maxLength: 255
        systemtool_type_description:
          type: string
          nullable: true
          maxLength: 255
        systemtool_vendor_organization:
          type: string
          nullable: true
          maxLength: 255
        systemtool_version:
          type: string
          nullable: true
          maxLength: 255
        actor_description:
          type: string
          nullable: true
          maxLength: 255
        in_type:
          type: string
          format: uri
        out_type:
          type: string
          format: uri
          nullable: true
        systemtool:
          type: string
          format: uri
        actor:
          type: string
          format: uri
          nullable: true
    PatchedCondition:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        condition_description:
          type: string
          readOnly: true
        calculation_description:
          type: string
          readOnly: true
        in_val:
          type: string
          readOnly: true
        out_val:
          type: string
          readOnly: true
        actor_description:
          type: string
          readOnly: true
        status_description:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        condition_def:
          type: string
          format: uri
        actor:
          type: string
          format: uri
          readOnly: true
        status:
          type: string
          format: uri
          readOnly: true
    PatchedConditionDef:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        actor_description:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        actor:
          type: string
          format: uri
          readOnly: true
        status:
          type: string
          format: uri
          readOnly: true
    PatchedEdocument:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        title:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
          maxLength: 255
        filename:
          type: string
          readOnly: true
        source:
          type: string
          nullable: true
          maxLength: 255
        edoc_type:
          type: string
          nullable: true
          maxLength: 255
        download_link:
          type: string
          readOnly: true
        actor:
          type: string
          format: uri
          nullable: true
        actor_description:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        edocument:
          type: string
          format: uri
          writeOnly: true
        ref_edocument_uuid:
          type: string
          format: uuid
          readOnly: true
    PatchedExperiment:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        ref_uid:
          type: string
          maxLength: 255
        description:
          type: string
          maxLength: 255
        owner_description:
          type: string
          maxLength: 255
        operator_description:
          type: string
          maxLength: 255
        lab_description:
          type: string
          maxLength: 255
        status_description:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        parent:
          type: string
          format: uri
          nullable: true
        owner:
          type: string
          format: uri
          nullable: true
        operator_uuid:
          type: string
          format: uri
          nullable: true
        lab:
          type: string
          format: uri
          nullable: true
        status:
          type: string
          format: uri
          nullable: true
    PatchedExperimentMeasureCalculation:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        uid:
          type: string
          maxLength: 255
        row_to_json:
          type: object
          additionalProperties: {}
    PatchedExperimentWorkflow:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        experiment_ref_uid:
          type: string
          maxLength: 255
        experiment_description:
          type: string
          maxLength: 255
        experiment_workflow_seq:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        experiment:
          type: string
          format: uri
          nullable: true
        workflow:
          type: string
          format: uri
          nullable: true
        workflow_type_uuid:
          type: string
          format: uri
          nullable: true
    PatchedInventory:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        description:
          type: string
          nullable: true
          maxLength: 255
        part_no:
          type: string
          nullable: true
          maxLength: 255
        onhand_amt:
          type: object
          additionalProperties: {}
          nullable: true
        expiration_date:
          type: string
          format: date-time
          nullable: true
        location:
          type: string
          nullable: true
          maxLength: 255
        status_description:
          type: string
          readOnly: true
        material_description:
          type: string
          readOnly: true
        actor_description:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        status:
          type: string
          format: uri
          nullable: true
        material:
          type: string
          format: uri
        actor:
          type: string
          format: uri
          nullable: true
    PatchedInventoryMaterial:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        inventory_description:
          type: string
          nullable: true
          maxLength: 255
        inventory_part_no:
          type: string
          nullable: true
          maxLength: 255
        inventory_onhand_amt:
          type: string
          nullable: true
          maxLength: 255
        inventory_expiration_date:
          type: string
          format: date-time
          nullable: true
        inventory_add_date:
          type: string
          format: date-time
        inventory_location:
          type: string
          nullable: true
          maxLength: 255
        inventory_status_description:
          type: string
          nullable: true
          maxLength: 255
        actor_description:
          type: string
          nullable: true
          maxLength: 255
        org_full_name:
          type: string
          nullable: true
          maxLength: 255
        material_status_description:
          type: string
          nullable: true
          maxLength: 255
        material_add_date:
          type: string
          format: date-time
        material_name:
          type: string
          nullable: true
          maxLength: 255
        material_abbreviation:
          type: string
          nullable: true
          maxLength: 255
        material_inchi:
          type: string
          nullable: true
          maxLength: 255
        material_inchikey:
          type: string
          nullable: true
          maxLength: 255
        material_molecular_formula:
          type: string
          nullable: true
          maxLength: 255
        material_smiles:
          type: string
          nullable: true
          maxLength: 255
        inventory_status:
          type: string
          format: uri
          nullable: true
        actor:
          type: string
          format: uri
          nullable: true
        material:
          type: string
          format: uri
          nullable: true
        material_status:
          type: string
          format: uri
          nullable: true
    PatchedMaterial:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        description:
          type: string
          nullable: true
          maxLength: 255
        consumable:
          type: string
          readOnly: true
        composite_flg:
          type: string
          readOnly: true
        status_description:
          type: string
          nullable: true
          maxLength: 255
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        status:
          type: string
          format: uri
          nullable: true
        actor:
          type: string
          format: uri
          nullable: true
    PatchedMaterialCalculationJson:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        material_status:
          type: string
          format: uuid
        material_status_description:
          type: string
          nullable: true
          maxLength: 255
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        abbreviation:
          type: string
          nullable: true
          maxLength: 255
        chemical_name:
          type: string
          nullable: true
          maxLength: 255
        inchi:
          type: string
          nullable: true
          maxLength: 255
        inchikey:
          type: string
          nullable: true
          maxLength: 255
        molecular_formula:
          type: string
          nullable: true
          maxLength: 255
        smiles:
          type: string
          nullable: true
          maxLength: 255
        calculation_json:
          type: object
          additionalProperties: {}
    PatchedMaterialComposite:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        composite_description:
          type: string
          nullable: true
          maxLength: 255
        composite_flg:
          type: string
          readOnly: true
        component_description:
          type: string
          nullable: true
          maxLength: 255
        addressable:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        composite:
          type: string
          format: uri
          nullable: true
        component:
          type: string
          format: uri
          nullable: true
        actor:
          type: string
          format: uri
          readOnly: true
        status:
          type: string
          format: uri
          readOnly: true
    PatchedMaterialProperty:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        property_description:
          type: string
          readOnly: true
        property_short_description:
          type: string
          readOnly: true
        value:
          type: object
          additionalProperties: {}
          nullable: true
        actor_description:
          type: string
          readOnly: true
        status_description:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        material:
          type: string
          format: uri
          nullable: true
        property:
          type: string
          format: uri
          readOnly: true
        property_def:
          type: string
          format: uri
          nullable: true
        actor:
          type: string
          format: uri
          readOnly: true
        status:
          type: string
          format: uri
          nullable: true
    PatchedMaterialRefnameDef:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        description:
          type: string
          nullable: true
          maxLength: 255
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
    PatchedMaterialType:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        description:
          type: string
          nullable: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
    PatchedMeasure:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        amount:
          type: object
          additionalProperties: {}
        actor_description:
          type: string
          readOnly: true
        status_description:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        measure_type_uuid:
          type: string
          format: uri
          readOnly: true
        ref_measure_uuid:
          type: string
          format: uri
          readOnly: true
        actor_uuid:
          type: string
          format: uri
          readOnly: true
        status_uuid:
          type: string
          format: uri
          readOnly: true
    PatchedMeasureType:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        actor_description:
          type: string
          readOnly: true
        status_description:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        actor_uuid:
          type: string
          format: uri
          readOnly: true
        status_uuid:
          type: string
          format: uri
          readOnly: true
    PatchedNote:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        notetext:
          type: string
          nullable: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        actor_description:
          type: string
          readOnly: true
        ref_note_uuid:
          type: string
          format: uuid
          readOnly: true
        actor:
          type: string
          format: uri
    PatchedNote_x:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        ref_note:
          type: string
          format: uuid
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        note:
          type: string
          format: uri
          readOnly: true
    PatchedOrganization:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        description:
          type: string
          maxLength: 255
        full_name:
          type: string
          maxLength: 255
        short_name:
          type: string
          nullable: true
          maxLength: 255
        address1:
          type: string
          nullable: true
          maxLength: 255
        address2:
          type: string
          nullable: true
          maxLength: 255
        city:
          type: string
          nullable: true
          maxLength: 255
        state_province:
          type: string
          nullable: true
          maxLength: 3
        zip:
          type: string
          nullable: true
          maxLength: 255
        country:
          type: string
          nullable: true
          maxLength: 255
        website_url:
          type: string
          nullable: true
          maxLength: 255
        phone:
          type: string
          nullable: true
          maxLength: 255
        parent_org_full_name:
          type: string
          nullable: true
          maxLength: 255
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        parent:
          type: string
          format: uri
          nullable: true
    PatchedParameter:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        parameter_def_description:
          type: string
          readOnly: true
        parameter_val:
          type: object
          additionalProperties: {}
          nullable: true
        actor_description:
          type: string
          readOnly: true
        status_description:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        parameter_def:
          type: string
          format: uri
          readOnly: true
        actor:
          type: string
          format: uri
          readOnly: true
        status:
          type: string
          format: uri
          readOnly: true
    PatchedParameterDef:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        val_type_description:
          type: string
          readOnly: true
        default_val_val:
          type: string
          readOnly: true
        valunit:
          type: string
          readOnly: true
        default_val:
          type: object
          additionalProperties: {}
          readOnly: true
        required:
          type: string
          readOnly: true
        actor_description:
          type: string
          readOnly: true
        status_description:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        val_type:
          type: string
          format: uri
          nullable: true
        actor:
          type: string
          format: uri
          readOnly: true
        status:
          type: string
          format: uri
          readOnly: true
    PatchedPerson:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        first_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
        middle_name:
          type: string
          nullable: true
          maxLength: 255
        address1:
          type: string
          nullable: true
          maxLength: 255
        address2:
          type: string
          nullable: true
          maxLength: 255
        city:
          type: string
          nullable: true
          maxLength: 255
        state_province:
          type: string
          nullable: true
          maxLength: 3
        zip:
          type: string
          nullable: true
          maxLength: 255
        country:
          type: string
          nullable: true
          maxLength: 255
        phone:
          type: string
          nullable: true
          maxLength: 255
        email:
          type: string
          format: email
          nullable: true
          maxLength: 255
        title:
          type: string
          nullable: true
          maxLength: 255
        suffix:
          type: string
          nullable: true
          maxLength: 255
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        organization_full_name:
          type: string
          nullable: true
          maxLength: 255
        organization:
          type: string
          format: uri
          nullable: true
    PatchedProperty:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        short_description:
          type: string
          nullable: true
          maxLength: 255
        property_val:
          type: string
          nullable: true
          maxLength: 255
        actor_description:
          type: string
          readOnly: true
        status_description:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        property_def:
          type: string
          format: uri
          nullable: true
        actor:
          type: string
          format: uri
          readOnly: true
        status:
          type: string
          format: uri
          nullable: true
    PatchedPropertyDef:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        description:
          type: string
          nullable: true
          maxLength: 255
        short_description:
          type: string
          nullable: true
          maxLength: 255
        val_unit:
          type: string
          nullable: true
          maxLength: 255
        actor_description:
          type: string
          readOnly: true
        status_description:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        val_type:
          type: string
          format: uri
          nullable: true
        actor:
          type: string
          format: uri
          readOnly: true
        status:
          type: string
          format: uri
          nullable: true
    PatchedStatus:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        description:
          type: string
          nullable: true
          maxLength: 255
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
    PatchedSystemtool:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        systemtool_name:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
          maxLength: 255
        organization_fullname:
          type: string
          nullable: true
          maxLength: 255
        systemtool_type_description:
          type: string
          nullable: true
          maxLength: 255
        model:
          type: string
          nullable: true
          maxLength: 255
        serial:
          type: string
          nullable: true
          maxLength: 255
        ver:
          type: string
          nullable: true
          maxLength: 255
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        vendor_organization:
          type: string
          format: uri
        systemtool_type:
          type: string
          format: uri
    PatchedSystemtoolType:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        description:
          type: string
          nullable: true
          maxLength: 255
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
    PatchedTag:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        display_text:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
          maxLength: 255
        actor_description:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        type:
          type: string
          readOnly: true
        type_description:
          type: string
          readOnly: true
        actor:
          type: string
          format: uri
          nullable: true
        tag_type:
          type: string
          format: uri
          nullable: true
    PatchedTagAssign:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        tag_label:
          type: string
          readOnly: true
        ref_tag:
          type: string
          format: uuid
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        tag:
          type: string
          format: uri
          nullable: true
    PatchedTagType:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        type:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
          maxLength: 255
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
    PatchedTypeDef:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        category:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
          maxLength: 255
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
    PatchedUdfDef:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        description:
          type: string
          nullable: true
          maxLength: 255
        val_type_description:
          type: string
          nullable: true
          maxLength: 255
        unit:
          type: string
          nullable: true
          maxLength: 255
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        val_type:
          type: string
          format: uri
          nullable: true
    PatchedWorkflow:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        step:
          type: array
          items:
            $ref: '#/components/schemas/WorkflowStep'
          readOnly: true
        description:
          type: string
          readOnly: true
        workflow_type_description:
          type: string
          readOnly: true
        actor_description:
          type: string
          readOnly: true
        status_description:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        parent:
          type: string
          format: uri
          nullable: true
        workflow_type:
          type: string
          format: uri
          nullable: true
        actor:
          type: string
          format: uri
          readOnly: true
        status:
          type: string
          format: uri
          readOnly: true
    PatchedWorkflowObject:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        object_uuid:
          type: string
          readOnly: true
        object_type:
          type: string
          readOnly: true
        object_description:
          type: string
          readOnly: true
        object_def_description:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        action:
          type: string
          format: uri
          readOnly: true
        condition:
          type: string
          format: uri
          readOnly: true
    PatchedWorkflowStep:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        workflow_description:
          type: string
          readOnly: true
        parent_object_type:
          type: string
          readOnly: true
        parent_object_description:
          type: string
          readOnly: true
        parent_path:
          type: string
          readOnly: true
        conditional_val:
          type: object
          additionalProperties: {}
          readOnly: true
        conditional_value:
          type: string
          readOnly: true
        status_description:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        object_uuid:
          type: string
          readOnly: true
        object_type:
          type: string
          readOnly: true
        object_description:
          type: string
          readOnly: true
        object_def_description:
          type: string
          readOnly: true
        workflow:
          type: string
          format: uri
        parent:
          type: string
          format: uri
          readOnly: true
        status:
          type: string
          format: uri
          readOnly: true
        workflow_object:
          type: string
          format: uri
    PatchedWorkflowType:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
    Person:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        first_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
        middle_name:
          type: string
          nullable: true
          maxLength: 255
        address1:
          type: string
          nullable: true
          maxLength: 255
        address2:
          type: string
          nullable: true
          maxLength: 255
        city:
          type: string
          nullable: true
          maxLength: 255
        state_province:
          type: string
          nullable: true
          maxLength: 3
        zip:
          type: string
          nullable: true
          maxLength: 255
        country:
          type: string
          nullable: true
          maxLength: 255
        phone:
          type: string
          nullable: true
          maxLength: 255
        email:
          type: string
          format: email
          nullable: true
          maxLength: 255
        title:
          type: string
          nullable: true
          maxLength: 255
        suffix:
          type: string
          nullable: true
          maxLength: 255
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        organization_full_name:
          type: string
          nullable: true
          maxLength: 255
        organization:
          type: string
          format: uri
          nullable: true
      required:
      - add_date
      - edocs
      - first_name
      - last_name
      - mod_date
      - notes
      - tags
      - url
    Property:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        short_description:
          type: string
          nullable: true
          maxLength: 255
        property_val:
          type: string
          nullable: true
          maxLength: 255
        actor_description:
          type: string
          readOnly: true
        status_description:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        property_def:
          type: string
          format: uri
          nullable: true
        actor:
          type: string
          format: uri
          readOnly: true
        status:
          type: string
          format: uri
          nullable: true
      required:
      - actor
      - actor_description
      - add_date
      - edocs
      - mod_date
      - notes
      - status_description
      - tags
      - url
    PropertyDef:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        description:
          type: string
          nullable: true
          maxLength: 255
        short_description:
          type: string
          nullable: true
          maxLength: 255
        val_unit:
          type: string
          nullable: true
          maxLength: 255
        actor_description:
          type: string
          readOnly: true
        status_description:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        val_type:
          type: string
          format: uri
          nullable: true
        actor:
          type: string
          format: uri
          readOnly: true
        status:
          type: string
          format: uri
          nullable: true
      required:
      - actor
      - actor_description
      - add_date
      - edocs
      - mod_date
      - notes
      - status_description
      - tags
      - url
    Status:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        description:
          type: string
          nullable: true
          maxLength: 255
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
      required:
      - add_date
      - edocs
      - mod_date
      - notes
      - tags
      - url
    Systemtool:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        systemtool_name:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
          maxLength: 255
        organization_fullname:
          type: string
          nullable: true
          maxLength: 255
        systemtool_type_description:
          type: string
          nullable: true
          maxLength: 255
        model:
          type: string
          nullable: true
          maxLength: 255
        serial:
          type: string
          nullable: true
          maxLength: 255
        ver:
          type: string
          nullable: true
          maxLength: 255
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        vendor_organization:
          type: string
          format: uri
        systemtool_type:
          type: string
          format: uri
      required:
      - add_date
      - edocs
      - mod_date
      - notes
      - systemtool_type
      - tags
      - url
      - vendor_organization
    SystemtoolType:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        description:
          type: string
          nullable: true
          maxLength: 255
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
      required:
      - add_date
      - edocs
      - mod_date
      - notes
      - tags
      - url
    Tag:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        display_text:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
          maxLength: 255
        actor_description:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        type:
          type: string
          readOnly: true
        type_description:
          type: string
          readOnly: true
        actor:
          type: string
          format: uri
          nullable: true
        tag_type:
          type: string
          format: uri
          nullable: true
      required:
      - actor_description
      - add_date
      - edocs
      - mod_date
      - notes
      - tags
      - type
      - type_description
      - url
    TagAssign:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        tag_label:
          type: string
          readOnly: true
        ref_tag:
          type: string
          format: uuid
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        tag:
          type: string
          format: uri
          nullable: true
      required:
      - add_date
      - mod_date
      - ref_tag
      - tag_label
      - url
    TagType:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        type:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
          maxLength: 255
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
      required:
      - add_date
      - edocs
      - mod_date
      - notes
      - tags
      - url
    TypeDef:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        category:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
          maxLength: 255
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
      required:
      - add_date
      - edocs
      - mod_date
      - notes
      - tags
      - url
    UdfDef:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        description:
          type: string
          nullable: true
          maxLength: 255
        val_type_description:
          type: string
          nullable: true
          maxLength: 255
        unit:
          type: string
          nullable: true
          maxLength: 255
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        val_type:
          type: string
          format: uri
          nullable: true
      required:
      - add_date
      - edocs
      - mod_date
      - notes
      - tags
      - url
    Workflow:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        step:
          type: array
          items:
            $ref: '#/components/schemas/WorkflowStep'
          readOnly: true
        description:
          type: string
          readOnly: true
        workflow_type_description:
          type: string
          readOnly: true
        actor_description:
          type: string
          readOnly: true
        status_description:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        parent:
          type: string
          format: uri
          nullable: true
        workflow_type:
          type: string
          format: uri
          nullable: true
        actor:
          type: string
          format: uri
          readOnly: true
        status:
          type: string
          format: uri
          readOnly: true
      required:
      - actor
      - actor_description
      - add_date
      - description
      - mod_date
      - status
      - status_description
      - step
      - url
      - workflow_type_description
    WorkflowObject:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        object_uuid:
          type: string
          readOnly: true
        object_type:
          type: string
          readOnly: true
        object_description:
          type: string
          readOnly: true
        object_def_description:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        action:
          type: string
          format: uri
          readOnly: true
        condition:
          type: string
          format: uri
          readOnly: true
      required:
      - action
      - add_date
      - condition
      - edocs
      - mod_date
      - notes
      - object_def_description
      - object_description
      - object_type
      - object_uuid
      - tags
      - url
    WorkflowStep:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        workflow_description:
          type: string
          readOnly: true
        parent_object_type:
          type: string
          readOnly: true
        parent_object_description:
          type: string
          readOnly: true
        parent_path:
          type: string
          readOnly: true
        conditional_val:
          type: object
          additionalProperties: {}
          readOnly: true
        conditional_value:
          type: string
          readOnly: true
        status_description:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
        object_uuid:
          type: string
          readOnly: true
        object_type:
          type: string
          readOnly: true
        object_description:
          type: string
          readOnly: true
        object_def_description:
          type: string
          readOnly: true
        workflow:
          type: string
          format: uri
        parent:
          type: string
          format: uri
          readOnly: true
        status:
          type: string
          format: uri
          readOnly: true
        workflow_object:
          type: string
          format: uri
      required:
      - add_date
      - conditional_val
      - conditional_value
      - edocs
      - mod_date
      - notes
      - object_def_description
      - object_description
      - object_type
      - object_uuid
      - parent
      - parent_object_description
      - parent_object_type
      - parent_path
      - status
      - status_description
      - tags
      - url
      - workflow
      - workflow_description
      - workflow_object
    WorkflowType:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` and 'exclude' arguments that
        controls which fields should be displayed.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        edocs:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        mod_date:
          type: string
          format: date-time
          readOnly: true
      required:
      - add_date
      - description
      - edocs
      - mod_date
      - notes
      - tags
      - url
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: Session
    tokenAuth:
      type: http
      scheme: bearer
      bearerFormat: Token
