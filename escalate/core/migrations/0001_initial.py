# Generated by Django 3.1 on 2020-12-18 18:40

import core.models.core_tables
import core.models.custom_types
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('action_uuid', core.models.core_tables.RetUUIDField(db_column='action_uuid', primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, db_column='action_description', max_length=255, null=True)),
                ('actor_description', models.CharField(blank=True, db_column='actor_description', editable=False, max_length=255, null=True)),
                ('status_description', models.CharField(blank=True, db_column='status_description', editable=False, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'vw_action',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActionDef',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='action_def_uuid', primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, db_column='description', editable=False, max_length=255, null=True)),
                ('actor_description', models.CharField(blank=True, db_column='actor_description', editable=False, max_length=255, null=True)),
                ('status_description', models.CharField(blank=True, db_column='status_description', editable=False, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'vw_action_def',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActionParameter',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='parameter_uuid', primary_key=True, serialize=False)),
                ('parameter_def_description', models.CharField(blank=True, db_column='parameter_def_description', editable=False, max_length=255, null=True)),
                ('parameter_val', core.models.custom_types.ValField(blank=True, db_column='parameter_val', null=True)),
                ('actor_description', models.CharField(blank=True, db_column='parameter_actor_description', editable=False, max_length=255, null=True)),
                ('status_description', models.CharField(blank=True, db_column='parameter_status_description', editable=False, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True, db_column='parameter_add_date')),
                ('mod_date', models.DateTimeField(auto_now=True, db_column='parameter_mod_date')),
            ],
            options={
                'db_table': 'vw_action_parameter',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActionParameterAssign',
            fields=[
                ('action_parameter_x', core.models.core_tables.RetUUIDField(db_column='action_parameter_x_uuid', primary_key=True, serialize=False)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'vw_action_parameter',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActionParameterDef',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='action_parameter_def_x_uuid', primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, db_column='description', editable=False, max_length=255, null=True)),
                ('actor_description', models.CharField(blank=True, db_column='actor_description', editable=False, max_length=255, null=True)),
                ('status_description', models.CharField(blank=True, db_column='status_description', editable=False, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
                ('parameter_description', models.CharField(blank=True, db_column='parameter_description', editable=False, max_length=255, null=True)),
            ],
            options={
                'db_table': 'vw_action_parameter_def',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActionParameterDefAssign',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='action_parameter_def_x_uuid', primary_key=True, serialize=False)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'vw_action_parameter_def_assign',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='actor_uuid', primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('status_description', models.CharField(blank=True, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
                ('org_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Organization Full Name')),
                ('org_short_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Organization Short Name')),
                ('person_last_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Person Lastname')),
                ('person_first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('person_last_first', models.CharField(blank=True, max_length=255, null=True)),
                ('person_org', models.CharField(blank=True, max_length=255, null=True)),
                ('systemtool_name', models.CharField(blank=True, max_length=255, null=True)),
                ('systemtool_description', models.CharField(blank=True, max_length=255, null=True)),
                ('systemtool_type', models.CharField(blank=True, max_length=255, null=True)),
                ('systemtool_vendor', models.CharField(blank=True, max_length=255, null=True)),
                ('systemtool_model', models.CharField(blank=True, max_length=255, null=True)),
                ('systemtool_serial', models.CharField(blank=True, max_length=255, null=True)),
                ('systemtool_version', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'vw_actor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillOfMaterials',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='bom_uuid', primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('experiment_description', models.CharField(blank=True, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'vw_bom',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BomMaterial',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='bom_material_uuid', primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('bom_description', models.CharField(blank=True, max_length=255, null=True)),
                ('bom_material_description', models.CharField(blank=True, max_length=255, null=True)),
                ('alloc_amt_val', core.models.custom_types.ValField(blank=True, null=True)),
                ('used_amt_val', core.models.custom_types.ValField(blank=True, null=True)),
                ('putback_amt_val', core.models.custom_types.ValField(blank=True, null=True)),
                ('experiment_uuid', models.CharField(blank=True, max_length=255, null=True)),
                ('experiment_description', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'vw_bom_material',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Calculation',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='calculation_uuid', primary_key=True, serialize=False)),
                ('in_val', core.models.custom_types.ValField(blank=True, null=True)),
                ('in_val_value', models.TextField(blank=True, editable=False, null=True)),
                ('in_val_unit', models.TextField(blank=True, editable=False, null=True)),
                ('in_opt_val', core.models.custom_types.ValField(blank=True, null=True)),
                ('in_opt_val_value', models.TextField(blank=True, editable=False, null=True)),
                ('in_opt_val_unit', models.TextField(blank=True, editable=False, null=True)),
                ('out_val', core.models.custom_types.ValField(blank=True, null=True)),
                ('out_val_value', models.TextField(blank=True, editable=False, null=True)),
                ('out_val_unit', models.TextField(blank=True, editable=False, null=True)),
                ('calculation_alias_name', models.CharField(blank=True, max_length=255, null=True)),
                ('status_description', models.CharField(blank=True, max_length=255, null=True)),
                ('short_name', models.CharField(blank=True, max_length=255, null=True)),
                ('calc_definition', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=1023, null=True)),
                ('systemtool_name', models.CharField(blank=True, max_length=1023, null=True)),
                ('systemtool_type_description', models.CharField(blank=True, max_length=1023, null=True)),
                ('systemtool_vendor_organization', models.CharField(blank=True, db_column='systemtool_vendor_organization', max_length=1023, null=True)),
                ('systemtool_version', models.CharField(blank=True, max_length=1023, null=True)),
                ('actor_description', models.CharField(blank=True, max_length=1023, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'vw_calculation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CalculationDef',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='calculation_def_uuid', primary_key=True, serialize=False)),
                ('short_name', models.CharField(blank=True, max_length=255, null=True)),
                ('calc_definition', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=1023, null=True)),
                ('in_type_description', models.CharField(blank=True, max_length=255, null=True)),
                ('out_type_description', models.CharField(blank=True, max_length=255, null=True)),
                ('systemtool_name', models.CharField(blank=True, max_length=255, null=True)),
                ('systemtool_type_description', models.CharField(blank=True, max_length=255, null=True)),
                ('systemtool_vendor_organization', models.CharField(blank=True, db_column='systemtool_vendor_organization', max_length=255, null=True)),
                ('systemtool_version', models.CharField(blank=True, max_length=255, null=True)),
                ('actor_description', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'vw_calculation_def',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='condition_uuid', primary_key=True, serialize=False)),
                ('condition_description', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('calculation_description', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('in_val', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('out_val', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('actor_description', models.CharField(blank=True, db_column='actor_description', editable=False, max_length=255, null=True)),
                ('status_description', models.CharField(blank=True, db_column='status_description', editable=False, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'vw_condition',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConditionDef',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='condition_def_uuid', primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, db_column='description', editable=False, max_length=255, null=True)),
                ('actor_description', models.CharField(blank=True, db_column='actor_description', editable=False, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'vw_condition_def',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Edocument',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='edocument_uuid', editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, db_column='title', max_length=255, null=True)),
                ('description', models.CharField(blank=True, db_column='description', max_length=255, null=True)),
                ('filename', models.CharField(blank=True, db_column='filename', max_length=255, null=True)),
                ('source', models.CharField(blank=True, db_column='source', max_length=255, null=True)),
                ('edoc_type', models.CharField(blank=True, db_column='doc_type_description', max_length=255, null=True)),
                ('edocument', models.BinaryField(blank=True, null=True)),
                ('edoc_ver', models.CharField(blank=True, db_column='doc_ver', max_length=255, null=True)),
                ('actor_description', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('status_description', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
                ('edocument_x_uuid', core.models.core_tables.RetUUIDField(editable=False)),
                ('ref_edocument_uuid', core.models.core_tables.RetUUIDField()),
            ],
            options={
                'db_table': 'vw_edocument',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='experiment_uuid', primary_key=True, serialize=False)),
                ('ref_uid', models.CharField(db_column='ref_uid', max_length=255)),
                ('description', models.CharField(db_column='description', max_length=255)),
                ('owner_description', models.CharField(db_column='owner_description', max_length=255)),
                ('operator_description', models.CharField(db_column='operator_description', max_length=255)),
                ('lab_description', models.CharField(db_column='lab_description', max_length=255)),
                ('status_description', models.CharField(blank=True, db_column='status_description', editable=False, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'vw_experiment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ExperimentMeasureCalculation',
            fields=[
                ('uid', models.CharField(db_column='uid', max_length=255, primary_key=True, serialize=False)),
                ('row_to_json', models.JSONField()),
            ],
            options={
                'db_table': 'vw_experiment_measure_calculation_json',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ExperimentWorkflow',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='experiment_workflow_uuid', primary_key=True, serialize=False)),
                ('experiment_ref_uid', models.CharField(max_length=255)),
                ('experiment_description', models.CharField(max_length=255)),
                ('experiment_workflow_seq', models.IntegerField()),
            ],
            options={
                'db_table': 'vw_experiment_workflow',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='inventory_uuid', primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('part_no', models.CharField(blank=True, max_length=255, null=True)),
                ('onhand_amt', core.models.custom_types.ValField(blank=True, null=True)),
                ('expiration_date', models.DateTimeField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('status_description', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('material_description', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('actor_description', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'vw_inventory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InventoryMaterial',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='inventory_uuid', primary_key=True, serialize=False)),
                ('inventory_description', models.CharField(blank=True, max_length=255, null=True)),
                ('inventory_part_no', models.CharField(blank=True, max_length=255, null=True)),
                ('inventory_onhand_amt', models.CharField(blank=True, max_length=255, null=True)),
                ('inventory_expiration_date', models.DateTimeField(blank=True, null=True)),
                ('inventory_add_date', models.DateTimeField()),
                ('inventory_location', models.CharField(blank=True, max_length=255, null=True)),
                ('inventory_status_description', models.CharField(blank=True, max_length=255, null=True)),
                ('actor_description', models.CharField(blank=True, max_length=255, null=True)),
                ('org_full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('material_status_description', models.CharField(blank=True, max_length=255, null=True)),
                ('material_add_date', models.DateTimeField()),
                ('material_name', models.CharField(blank=True, max_length=255, null=True)),
                ('material_abbreviation', models.CharField(blank=True, max_length=255, null=True)),
                ('material_inchi', models.CharField(blank=True, max_length=255, null=True)),
                ('material_inchikey', models.CharField(blank=True, max_length=255, null=True)),
                ('material_molecular_formula', models.CharField(blank=True, max_length=255, null=True)),
                ('material_smiles', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'vw_inventory_material',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='material_uuid', primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('consumable', models.BinaryField(blank=True, null=True)),
                ('composite_flg', models.BinaryField(blank=True, null=True)),
                ('status_description', models.CharField(blank=True, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'vw_material',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MaterialCalculationJson',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='material_uuid', primary_key=True, serialize=False)),
                ('material_status', core.models.core_tables.RetUUIDField(db_column='material_status_uuid')),
                ('material_status_description', models.CharField(blank=True, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
                ('abbreviation', models.CharField(blank=True, db_column='abbreviation', max_length=255, null=True)),
                ('chemical_name', models.CharField(blank=True, db_column='chemical_name', max_length=255, null=True)),
                ('inchi', models.CharField(blank=True, db_column='inchi', max_length=255, null=True)),
                ('inchikey', models.CharField(blank=True, db_column='inchikey', max_length=255, null=True)),
                ('molecular_formula', models.CharField(blank=True, db_column='molecular_formula', max_length=255, null=True)),
                ('smiles', models.CharField(blank=True, db_column='smiles', max_length=255, null=True)),
                ('calculation_json', models.JSONField()),
            ],
            options={
                'db_table': 'vw_material_calculation_json',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MaterialComposite',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='material_composite_uuid', primary_key=True, serialize=False)),
                ('composite_description', models.CharField(blank=True, max_length=255, null=True)),
                ('composite_flg', models.BinaryField(blank=True, null=True)),
                ('component_description', models.CharField(blank=True, max_length=255, null=True)),
                ('addressable', models.BinaryField(blank=True, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'vw_material_composite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MaterialProperty',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='property_x_uuid', primary_key=True, serialize=False)),
                ('property_description', models.CharField(blank=True, db_column='property_description', editable=False, max_length=255, null=True)),
                ('property_short_description', models.CharField(blank=True, db_column='property_short_description', editable=False, max_length=255, null=True)),
                ('value', core.models.custom_types.ValField(blank=True, db_column='val_val', null=True)),
                ('actor_description', models.CharField(blank=True, db_column='property_actor_description', editable=False, max_length=255, null=True)),
                ('status_description', models.CharField(blank=True, db_column='property_status_description', editable=False, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'vw_material_property',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MaterialRefnameDef',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='material_refname_def_uuid', primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'vw_material_refname_def',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MaterialType',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='material_type_uuid', primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'vw_material_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Measure',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='measure_uuid', primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('amount', core.models.custom_types.ValField()),
                ('actor_description', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('status_description', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True, db_column='add_date')),
                ('mod_date', models.DateTimeField(auto_now=True, db_column='mod_date')),
            ],
            options={
                'db_table': 'vw_measure',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MeasureType',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='measure_type_uuid', primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('actor_description', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('status_description', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True, db_column='add_date')),
                ('mod_date', models.DateTimeField(auto_now=True, db_column='mod_date')),
            ],
            options={
                'db_table': 'vw_measure_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='note_uuid', primary_key=True, serialize=False)),
                ('notetext', models.TextField(blank=True, null=True, verbose_name='Note Text')),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
                ('actor_description', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('ref_note_uuid', core.models.core_tables.RetUUIDField(blank=True, null=True)),
            ],
            options={
                'db_table': 'vw_note',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Note_x',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='note_x_uuid', primary_key=True, serialize=False)),
                ('ref_note', core.models.core_tables.RetUUIDField(db_column='ref_note_uuid')),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'note_x',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='organization_uuid', primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=255)),
                ('full_name', models.CharField(max_length=255)),
                ('short_name', models.CharField(blank=True, max_length=255, null=True)),
                ('address1', models.CharField(blank=True, max_length=255, null=True)),
                ('address2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('state_province', models.CharField(blank=True, max_length=3, null=True)),
                ('zip', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('website_url', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('parent_org_full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'vw_organization',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Parameter',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='parameter_uuid', primary_key=True, serialize=False)),
                ('parameter_def_description', models.CharField(blank=True, db_column='parameter_def_description', editable=False, max_length=255, null=True)),
                ('parameter_val', core.models.custom_types.ValField(blank=True, db_column='parameter_val', null=True)),
                ('actor_description', models.CharField(blank=True, db_column='actor_description', editable=False, max_length=255, null=True)),
                ('status_description', models.CharField(blank=True, db_column='status_description', editable=False, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True, db_column='add_date')),
                ('mod_date', models.DateTimeField(auto_now=True, db_column='mod_date')),
            ],
            options={
                'db_table': 'vw_parameter',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ParameterDef',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='parameter_def_uuid', primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, db_column='description', editable=False, max_length=255, null=True)),
                ('val_type_description', models.CharField(blank=True, db_column='val_type_description', editable=False, max_length=255, null=True)),
                ('default_val_val', models.CharField(blank=True, db_column='default_val_val', editable=False, max_length=255, null=True)),
                ('valunit', models.CharField(blank=True, db_column='valunit', editable=False, max_length=255, null=True)),
                ('default_val', core.models.custom_types.ValField(blank=True, db_column='default_val', editable=False, max_length=255, null=True)),
                ('required', models.CharField(blank=True, db_column='required', editable=False, max_length=255, null=True)),
                ('actor_description', models.CharField(blank=True, db_column='actor_description', editable=False, max_length=255, null=True)),
                ('status_description', models.CharField(blank=True, db_column='status_description', editable=False, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'vw_parameter_def',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='person_uuid', primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('middle_name', models.CharField(blank=True, max_length=255, null=True)),
                ('address1', models.CharField(blank=True, max_length=255, null=True)),
                ('address2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('state_province', models.CharField(blank=True, max_length=3, null=True)),
                ('zip', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=255, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('suffix', models.CharField(blank=True, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
                ('organization_full_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'vw_person',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PersonTable',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='person_uuid', primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('middle_name', models.CharField(blank=True, max_length=255, null=True)),
                ('address1', models.CharField(blank=True, max_length=255, null=True)),
                ('address2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('state_province', models.CharField(blank=True, max_length=3, null=True)),
                ('zip', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=255, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('suffix', models.CharField(blank=True, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'person',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='property_uuid', primary_key=True, serialize=False)),
                ('short_description', models.CharField(blank=True, db_column='short_description', max_length=255, null=True)),
                ('property_val', models.CharField(blank=True, db_column='property_val', max_length=255, null=True)),
                ('actor_description', models.CharField(blank=True, db_column='actor_description', editable=False, max_length=255, null=True)),
                ('status_description', models.CharField(blank=True, db_column='status_description', editable=False, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'vw_property',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PropertyDef',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='property_def_uuid', primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, db_column='description', max_length=255, null=True)),
                ('short_description', models.CharField(blank=True, db_column='short_description', max_length=255, null=True)),
                ('val_unit', models.CharField(blank=True, db_column='valunit', max_length=255, null=True)),
                ('actor_description', models.CharField(blank=True, db_column='actor_description', editable=False, max_length=255, null=True)),
                ('status_description', models.CharField(blank=True, db_column='status_description', editable=False, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'vw_property_def',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='status_uuid', primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'vw_status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Systemtool',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='systemtool_uuid', primary_key=True, serialize=False)),
                ('systemtool_name', models.CharField(max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('organization_fullname', models.CharField(blank=True, max_length=255, null=True)),
                ('systemtool_type_description', models.CharField(blank=True, max_length=255, null=True)),
                ('model', models.CharField(blank=True, max_length=255, null=True)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('ver', models.CharField(max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'vw_systemtool',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemtoolType',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='systemtool_type_uuid', primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'vw_systemtool_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='tag_uuid', editable=False, primary_key=True, serialize=False)),
                ('display_text', models.CharField(max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('actor_description', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('type_description', models.CharField(blank=True, editable=False, max_length=255, null=True)),
            ],
            options={
                'db_table': 'vw_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TagAssign',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='tag_x_uuid', primary_key=True, serialize=False)),
                ('ref_tag', core.models.core_tables.RetUUIDField(db_column='ref_tag_uuid')),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'vw_tag_assign',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TagType',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='tag_type_uuid', primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'vw_tag_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TypeDef',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='type_def_uuid', primary_key=True, serialize=False)),
                ('category', models.CharField(blank=True, db_column='category', max_length=255, null=True)),
                ('description', models.CharField(blank=True, db_column='description', max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'vw_type_def',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UdfDef',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='udf_def_uuid', primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=255, null=True)),
                ('val_type_description', models.CharField(blank=True, max_length=255, null=True)),
                ('unit', models.CharField(blank=True, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'vw_udf_def',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Workflow',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='workflow_uuid', primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, db_column='description', editable=False, max_length=255, null=True)),
                ('workflow_type_description', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('actor_description', models.CharField(blank=True, db_column='actor_description', editable=False, max_length=255, null=True)),
                ('status_description', models.CharField(blank=True, db_column='status_description', editable=False, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True, db_column='add_date')),
                ('mod_date', models.DateTimeField(auto_now=True, db_column='mod_date')),
            ],
            options={
                'db_table': 'vw_workflow',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WorkflowObject',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='workflow_object_uuid', primary_key=True, serialize=False)),
                ('object_uuid', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('object_type', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('object_description', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('object_def_description', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True, db_column='add_date')),
                ('mod_date', models.DateTimeField(auto_now=True, db_column='mod_date')),
            ],
            options={
                'db_table': 'vw_workflow_object',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WorkflowStep',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='workflow_step_uuid', primary_key=True, serialize=False)),
                ('workflow_description', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('parent_object_type', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('parent_object_description', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('parent_path', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('conditional_val', core.models.custom_types.ValField(blank=True, editable=False, null=True)),
                ('conditional_value', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('status_description', models.CharField(blank=True, db_column='status_description', editable=False, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True, db_column='add_date')),
                ('mod_date', models.DateTimeField(auto_now=True, db_column='mod_date')),
                ('object_uuid', models.CharField(blank=True, db_column='object_uuid', editable=False, max_length=255, null=True)),
                ('object_type', models.CharField(blank=True, db_column='object_type', editable=False, max_length=255, null=True)),
                ('object_description', models.CharField(blank=True, db_column='object_description', editable=False, max_length=255, null=True)),
                ('object_def_description', models.CharField(blank=True, db_column='object_def_description', editable=False, max_length=255, null=True)),
            ],
            options={
                'db_table': 'vw_workflow_step',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WorkflowType',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='workflow_type_uuid', primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, db_column='description', editable=False, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True, db_column='add_date')),
                ('mod_date', models.DateTimeField(auto_now=True, db_column='mod_date')),
            ],
            options={
                'db_table': 'vw_workflow_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('person', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.persontable')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
