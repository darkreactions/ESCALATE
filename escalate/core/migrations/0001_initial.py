# Generated by Django 2.2.12 on 2020-04-14 00:41

import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('actor_uuid', models.UUIDField(primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'actor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Edocument',
            fields=[
                ('edocument_uuid', models.UUIDField(primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('edocument', models.BinaryField(blank=True, null=True)),
                ('edoc_type', models.CharField(blank=True, max_length=255, null=True)),
                ('ver', models.CharField(blank=True, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'edocument',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('inventory_uuid', models.UUIDField(primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('part_no', models.CharField(blank=True, max_length=255, null=True)),
                ('onhand_amt', models.FloatField(blank=True, null=True)),
                ('unit', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('expiration_date', models.DateTimeField(blank=True, null=True)),
                ('inventory_location', models.CharField(blank=True, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'inventory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('material_uuid', models.UUIDField(primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('parent_path', models.TextField(blank=True, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'material',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('note_uuid', models.UUIDField(primary_key=True, serialize=False)),
                ('notetext', models.CharField(blank=True, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'note',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('organization_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('organization_uuid', models.UUIDField(blank=True, null=True)),
                ('parent_path', models.TextField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('full_name', models.CharField(max_length=255)),
                ('short_name', models.CharField(blank=True, max_length=255, null=True)),
                ('address1', models.CharField(blank=True, max_length=255, null=True)),
                ('address2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('state_province', models.CharField(blank=True, max_length=3, null=True)),
                ('zip', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('website_url', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'organization',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('person_uuid', models.UUIDField(primary_key=True, serialize=False)),
                ('firstname', models.CharField(blank=True, max_length=255, null=True)),
                ('lastname', models.CharField(max_length=255)),
                ('middlename', models.CharField(blank=True, max_length=255, null=True)),
                ('address1', models.CharField(blank=True, max_length=255, null=True)),
                ('address2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('stateprovince', models.CharField(blank=True, max_length=3, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('suffix', models.CharField(blank=True, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'person',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('status_uuid', models.UUIDField(primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Systemtool',
            fields=[
                ('systemtool_uuid', models.UUIDField(primary_key=True, serialize=False)),
                ('systemtool_name', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('model', models.CharField(blank=True, max_length=255, null=True)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('ver', models.CharField(blank=True, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'systemtool',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemtoolType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('systemtool_type_uuid', models.UUIDField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'systemtool_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ViewActor',
            fields=[
                ('actor_uuid', models.UUIDField(primary_key=True, serialize=False)),
                ('actor_description', models.CharField(blank=True, max_length=255, null=True)),
                ('actor_status', models.CharField(blank=True, max_length=255, null=True)),
                ('actor_notetext', models.CharField(blank=True, max_length=255, null=True)),
                ('org_full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('org_short_name', models.CharField(blank=True, max_length=255, null=True)),
                ('per_lastname', models.CharField(blank=True, max_length=255, null=True)),
                ('per_firstname', models.CharField(blank=True, max_length=255, null=True)),
                ('person_lastfirst', models.CharField(blank=True, max_length=255, null=True)),
                ('person_org', models.CharField(blank=True, max_length=255, null=True)),
                ('systemtool_name', models.CharField(blank=True, max_length=255, null=True)),
                ('systemtool_description', models.CharField(blank=True, max_length=255, null=True)),
                ('systemtool_type', models.CharField(blank=True, max_length=255, null=True)),
                ('systemtool_vendor', models.CharField(blank=True, max_length=255, null=True)),
                ('systemtool_model', models.CharField(blank=True, max_length=255, null=True)),
                ('systemtool_serial', models.CharField(blank=True, max_length=255, null=True)),
                ('systemtool_version', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'vw_actor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ViewInventory',
            fields=[
                ('inventory_uuid', models.UUIDField(db_column='inventory_uuid', primary_key=True, serialize=False)),
                ('inventory_description', models.CharField(blank=True, max_length=255, null=True)),
                ('part_no', models.CharField(blank=True, max_length=255, null=True)),
                ('onhand_amt', models.FloatField(blank=True, null=True)),
                ('unit', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('expiration_date', models.DateTimeField(blank=True, null=True)),
                ('inventory_location', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('material_description', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('edocument_description', models.CharField(blank=True, max_length=255, null=True)),
                ('notetext', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'vw_inventory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ViewInventoryMaterial',
            fields=[
                ('inventory_uuid', models.UUIDField(primary_key=True, serialize=False)),
                ('inventory_description', models.CharField(blank=True, max_length=255, null=True)),
                ('inventory_part_no', models.CharField(blank=True, max_length=255, null=True)),
                ('inventory_onhand_amt', models.FloatField(blank=True, null=True)),
                ('inventory_unit', models.CharField(blank=True, max_length=255, null=True)),
                ('inventory_crate_date', models.DateTimeField(blank=True, null=True)),
                ('inventory_expiration_date', models.DateTimeField(blank=True, null=True)),
                ('inventory_location', models.CharField(blank=True, max_length=255, null=True)),
                ('inventory_status', models.CharField(blank=True, max_length=255, null=True)),
                ('actor_description', models.CharField(blank=True, max_length=255, null=True)),
                ('org_full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('material_status', models.CharField(blank=True, max_length=255, null=True)),
                ('material_create_date', models.DateTimeField()),
                ('material_name', models.CharField(blank=True, max_length=255, null=True)),
                ('material_abbreviation', models.CharField(blank=True, max_length=255, null=True)),
                ('material_inchi', models.CharField(blank=True, max_length=255, null=True)),
                ('material_inchikey', models.CharField(blank=True, max_length=255, null=True)),
                ('material_molecular_formula', models.CharField(blank=True, max_length=255, null=True)),
                ('material_smiles', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'vw_inventory_material',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ViewLatestSystemtool',
            fields=[
                ('systemtool_uuid', models.UUIDField(db_column='systemtool_uuid', primary_key=True, serialize=False)),
                ('systemtool_name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('organization_fullname', models.CharField(blank=True, max_length=255, null=True)),
                ('systemtool_type_description', models.CharField(blank=True, max_length=255, null=True)),
                ('model', models.CharField(blank=True, max_length=255, null=True)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('ver', models.CharField(blank=True, max_length=255, null=True)),
                ('actor_description', models.CharField(blank=True, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'vw_latest_systemtool',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ViewMaterial',
            fields=[
                ('material_uuid', models.UUIDField(db_column='material_uuid', primary_key=True, serialize=False)),
                ('material_status', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField()),
                ('abbreviation', models.CharField(blank=True, db_column='abbreviation', max_length=255, null=True)),
                ('chemical_name', models.CharField(blank=True, db_column='chemical_name', max_length=255, null=True)),
                ('inchi', models.CharField(blank=True, db_column='inchi', max_length=255, null=True)),
                ('inchikey', models.CharField(blank=True, db_column='inchikey', max_length=255, null=True)),
                ('molecular_formula', models.CharField(blank=True, db_column='molecular_formula', max_length=255, null=True)),
                ('smiles', models.CharField(blank=True, db_column='smiles', max_length=255, null=True)),
            ],
            options={
                'db_table': 'vw_material',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ViewMaterialDescriptor',
            fields=[
                ('material_uuid', models.UUIDField(db_column='material_uuid', primary_key=True, serialize=False)),
                ('material_status', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField()),
                ('abbreviation', models.CharField(blank=True, db_column='abbreviation', max_length=255, null=True)),
                ('chemical_name', models.CharField(blank=True, db_column='chemical_name', max_length=255, null=True)),
                ('inchi', models.CharField(blank=True, db_column='inchi', max_length=255, null=True)),
                ('inchikey', models.CharField(blank=True, db_column='inchikey', max_length=255, null=True)),
                ('molecular_formula', models.CharField(blank=True, db_column='molecular_formula', max_length=255, null=True)),
                ('smiles', models.CharField(blank=True, db_column='smiles', max_length=255, null=True)),
                ('m_descriptor_alias_name', models.CharField(blank=True, max_length=255, null=True)),
                ('in_val', models.TextField(blank=True, null=True)),
                ('in_opt_val', models.TextField(blank=True, null=True)),
                ('out_val', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'vw_material_descriptor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ViewMaterialRefnameType',
            fields=[
                ('material_refname_type_uuid', models.UUIDField(primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('notetext', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'vw_material_refname_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ViewMaterialType',
            fields=[
                ('material_type_uuid', models.UUIDField(primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('notetext', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'vw_material_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ViewMDescriptor',
            fields=[
                ('m_descriptor_uuid', models.UUIDField(db_column='m_descriptor_uuid', primary_key=True, serialize=False)),
                ('in_val', models.TextField(blank=True, null=True)),
                ('in_opt_val', models.TextField(blank=True, null=True)),
                ('out_val', models.TextField(blank=True, null=True)),
                ('m_descriptor_alias_name', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('actor_descr', models.CharField(blank=True, max_length=255, null=True)),
                ('note_text', models.CharField(blank=True, max_length=255, null=True)),
                ('short_name', models.CharField(blank=True, max_length=255, null=True)),
                ('calc_definition', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=1023, null=True)),
                ('in_type', models.CharField(blank=True, max_length=255, null=True)),
                ('out_type', models.CharField(blank=True, max_length=255, null=True)),
                ('systemtool_name', models.CharField(blank=True, max_length=1023, null=True)),
                ('systemtool_type_description', models.CharField(blank=True, max_length=1023, null=True)),
                ('systemtool_vendor_organization', models.CharField(blank=True, db_column='systemtool_vendor_organzation', max_length=1023, null=True)),
                ('systemtool_version', models.CharField(blank=True, max_length=1023, null=True)),
                ('actor_description', models.CharField(blank=True, max_length=1023, null=True)),
            ],
            options={
                'db_table': 'vw_m_descriptor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ViewMDescriptorDef',
            fields=[
                ('m_descriptor_def_uuid', models.UUIDField(db_column='m_descriptor_def_uuid', primary_key=True, serialize=False)),
                ('short_name', models.CharField(blank=True, max_length=255, null=True)),
                ('calc_definition', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=1023, null=True)),
                ('in_type', models.CharField(blank=True, max_length=255, null=True)),
                ('out_type', models.CharField(blank=True, max_length=255, null=True)),
                ('systemtool_name', models.CharField(blank=True, max_length=255, null=True)),
                ('systemtool_type_description', models.CharField(blank=True, max_length=255, null=True)),
                ('systemtool_vendor_organization', models.CharField(blank=True, db_column='systemtool_vendor_organzation', max_length=255, null=True)),
                ('systemtool_version', models.CharField(blank=True, max_length=255, null=True)),
                ('actor_description', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'vw_m_descriptor_def',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ViewNote',
            fields=[
                ('note_uuid', models.UUIDField(primary_key=True, serialize=False)),
                ('notetext', models.TextField(blank=True, null=True)),
                ('add_date', models.DateTimeField()),
                ('mod_date', models.DateTimeField()),
                ('edocument_type', models.CharField(blank=True, max_length=255, null=True)),
                ('actor_description', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'vw_note',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ViewOrganization',
            fields=[
                ('organization_uuid', models.UUIDField(primary_key=True, serialize=False)),
                ('full_name', models.CharField(max_length=255)),
                ('short_name', models.CharField(blank=True, max_length=255, null=True)),
                ('address1', models.CharField(blank=True, max_length=255, null=True)),
                ('address2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('state_province', models.CharField(blank=True, max_length=3, null=True)),
                ('zip', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('website_url', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('parent_org_full_name', models.CharField(max_length=255)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
                ('notetext', models.TextField(blank=True, null=True)),
                ('edocument_descr', models.CharField(blank=True, max_length=255, null=True)),
                ('tag_short_descr', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'vw_organization',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ViewPerson',
            fields=[
                ('person_uuid', models.UUIDField(primary_key=True, serialize=False)),
                ('firstname', models.CharField(blank=True, max_length=255, null=True)),
                ('lastname', models.CharField(max_length=255)),
                ('middlename', models.CharField(blank=True, max_length=255, null=True)),
                ('address1', models.CharField(blank=True, max_length=255, null=True)),
                ('address2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('stateprovince', models.CharField(blank=True, max_length=3, null=True)),
                ('zip', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('suffix', models.CharField(blank=True, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
                ('full_name', models.CharField(max_length=255)),
                ('notetext', models.TextField(blank=True, null=True)),
                ('edocument_descr', models.CharField(blank=True, max_length=255, null=True)),
                ('tag_short_descr', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'vw_person',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ViewStatus',
            fields=[
                ('status_uuid', models.UUIDField(primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'vw_status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ViewTag',
            fields=[
                ('tag_uuid', models.UUIDField(primary_key=True, serialize=False)),
                ('tag_short_descr', models.CharField(blank=True, max_length=255, null=True)),
                ('tag_description', models.CharField(blank=True, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
                ('tag_type_short_descr', models.CharField(blank=True, max_length=255, null=True)),
                ('tag_type_description', models.CharField(blank=True, max_length=255, null=True)),
                ('actor_description', models.CharField(blank=True, max_length=255, null=True)),
                ('notetext', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'vw_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ViewTagType',
            fields=[
                ('tag_type_uuid', models.UUIDField(primary_key=True, serialize=False)),
                ('short_description', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('actor_description', models.CharField(blank=True, max_length=255, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'vw_tag_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('person', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.Person')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
