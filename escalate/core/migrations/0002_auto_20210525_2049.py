# Generated by Django 3.0.14 on 2021-05-25 20:49

import core.models.core_tables
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='EdocumentX',
            fields=[
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
                ('uuid', core.models.core_tables.RetUUIDField(db_column='edocument_x_uuid', editable=False, primary_key=True, serialize=False)),
                ('ref_edocument_uuid', core.models.core_tables.RetUUIDField()),
            ],
            options={
                'db_table': 'edocument_x',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ExperimentType',
            fields=[
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
                ('uuid', core.models.core_tables.RetUUIDField(db_column='experiment_type_uuid', default=uuid.uuid4, primary_key=True, serialize=False)),
                ('description', models.CharField(db_column='description', max_length=255)),
            ],
            options={
                'db_table': 'experiment_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MaterialIdentifierX',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='material_refname_x_uuid', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'material_refname_x',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NoteX',
            fields=[
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
                ('uuid', core.models.core_tables.RetUUIDField(db_column='note_x_uuid', default=uuid.uuid4, primary_key=True, serialize=False)),
                ('ref_note', core.models.core_tables.RetUUIDField(db_column='ref_note_uuid')),
            ],
            options={
                'db_table': 'note_x',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UdfX',
            fields=[
                ('uuid', core.models.core_tables.RetUUIDField(db_column='udf_x_uuid', default=uuid.uuid4, primary_key=True, serialize=False)),
                ('ref_uuid', core.models.core_tables.RetUUIDField(db_column='ref_udf_uuid')),
            ],
            options={
                'db_table': 'udf_x',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NoteTest',
            fields=[
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
                ('uuid', core.models.core_tables.RetUUIDField(db_column='note_uuid', default=uuid.uuid4, primary_key=True, serialize=False)),
                ('notetext', models.TextField(blank=True, null=True, verbose_name='Note Text')),
                ('ref_note_uuid', core.models.core_tables.RetUUIDField(blank=True, null=True)),
                ('actor', models.ForeignKey(blank=True, db_column='actor_uuid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='notetest_actor', to='core.Actor')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'db_table': 'note_test',
                'managed': True,
            },
        ),
        migrations.DeleteModel(
            name='ExperimentParameter',
        ),
        migrations.DeleteModel(
            name='MaterialIndentifierX',
        ),
        migrations.DeleteModel(
            name='Note_x',
        ),
        migrations.AlterModelTable(
            name='action',
            table='action',
        ),
        migrations.AlterModelTable(
            name='actiondef',
            table='action_def',
        ),
        migrations.AlterModelTable(
            name='actionparameterdef',
            table='action_parameter_def',
        ),
        migrations.AlterModelTable(
            name='billofmaterials',
            table='bom',
        ),
        migrations.AlterModelTable(
            name='bomcompositematerial',
            table='bom_material_composite',
        ),
        migrations.AlterModelTable(
            name='bommaterial',
            table='bom_material',
        ),
        migrations.AlterModelTable(
            name='condition',
            table='condition',
        ),
        migrations.AlterModelTable(
            name='conditiondef',
            table='condition_def',
        ),
        migrations.AlterModelTable(
            name='conditionpath',
            table='condition_path',
        ),
        migrations.AlterModelTable(
            name='experiment',
            table='experiment',
        ),
        migrations.AlterModelTable(
            name='experimentworkflow',
            table='experiment_workflow',
        ),
        migrations.AlterModelTable(
            name='measure',
            table='measure',
        ),
        migrations.AlterModelTable(
            name='measuredef',
            table='measure_def',
        ),
        migrations.AlterModelTable(
            name='measuretype',
            table='measure_type',
        ),
        migrations.AlterModelTable(
            name='outcome',
            table='outcome',
        ),
        migrations.AlterModelTable(
            name='parameterdef',
            table='parameter_def',
        ),
        migrations.AlterModelTable(
            name='udf',
            table='udf',
        ),
        migrations.AlterModelTable(
            name='udfdef',
            table='udf_def',
        ),
        migrations.AlterModelTable(
            name='workflow',
            table='workflow',
        ),
        migrations.AlterModelTable(
            name='workflowactionset',
            table='workflow_action_set',
        ),
        migrations.AlterModelTable(
            name='workflowobject',
            table='workflow_object',
        ),
        migrations.AlterModelTable(
            name='workflowstep',
            table='workflow_step',
        ),
        migrations.AlterModelTable(
            name='workflowtype',
            table='workflow_type',
        ),
    ]
